#include "CTPSQLWrapper.h"
// I am automatically generated by ParseCTPHeaders.py

using namespace localCTP;

const std::string CThostFtdcDisseminationFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcDisseminationField'('SequenceSeries' INTEGER NOT NULL, 'SequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcDisseminationFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcDisseminationField';";
const std::string CThostFtdcDisseminationFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcDisseminationField' VALUES (";

const std::string CThostFtdcReqUserLoginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqUserLoginField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'InterfaceProductInfo' VARCHAR(22) NOT NULL, 'ProtocolInfo' VARCHAR(22) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'OneTimePassword' VARCHAR(82) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'LoginRemark' VARCHAR(72) NOT NULL, 'ClientIPPort' INTEGER NOT NULL, 'ClientIPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqUserLoginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqUserLoginField';";
const std::string CThostFtdcReqUserLoginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqUserLoginField' VALUES (";

const std::string CThostFtdcRspUserLoginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspUserLoginField'('TradingDay' VARCHAR(18) NOT NULL, 'LoginTime' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'SystemName' VARCHAR(82) NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'MaxOrderRef' VARCHAR(26) NOT NULL, 'SHFETime' VARCHAR(18) NOT NULL, 'DCETime' VARCHAR(18) NOT NULL, 'CZCETime' VARCHAR(18) NOT NULL, 'FFEXTime' VARCHAR(18) NOT NULL, 'INETime' VARCHAR(18) NOT NULL, 'SysVersion' VARCHAR(82) NOT NULL, 'GFEXTime' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcRspUserLoginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspUserLoginField';";
const std::string CThostFtdcRspUserLoginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspUserLoginField' VALUES (";

const std::string CThostFtdcUserLogoutFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcUserLogoutField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcUserLogoutFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcUserLogoutField';";
const std::string CThostFtdcUserLogoutFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcUserLogoutField' VALUES (";

const std::string CThostFtdcForceUserLogoutFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcForceUserLogoutField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcForceUserLogoutFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcForceUserLogoutField';";
const std::string CThostFtdcForceUserLogoutFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcForceUserLogoutField' VALUES (";

const std::string CThostFtdcReqAuthenticateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqAuthenticateField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'AuthCode' VARCHAR(34) NOT NULL, 'AppID' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqAuthenticateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqAuthenticateField';";
const std::string CThostFtdcReqAuthenticateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqAuthenticateField' VALUES (";

const std::string CThostFtdcRspAuthenticateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspAuthenticateField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'AppID' VARCHAR(66) NOT NULL, 'AppType' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcRspAuthenticateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspAuthenticateField';";
const std::string CThostFtdcRspAuthenticateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspAuthenticateField' VALUES (";

const std::string CThostFtdcAuthenticationInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcAuthenticationInfoField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'AuthInfo' VARCHAR(258) NOT NULL, 'IsResult' INTEGER NOT NULL, 'AppID' VARCHAR(66) NOT NULL, 'AppType' VARCHAR(1) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'ClientIPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcAuthenticationInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcAuthenticationInfoField';";
const std::string CThostFtdcAuthenticationInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcAuthenticationInfoField' VALUES (";

const std::string CThostFtdcRspUserLogin2FieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspUserLogin2Field'('TradingDay' VARCHAR(18) NOT NULL, 'LoginTime' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'SystemName' VARCHAR(82) NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'MaxOrderRef' VARCHAR(26) NOT NULL, 'SHFETime' VARCHAR(18) NOT NULL, 'DCETime' VARCHAR(18) NOT NULL, 'CZCETime' VARCHAR(18) NOT NULL, 'FFEXTime' VARCHAR(18) NOT NULL, 'INETime' VARCHAR(18) NOT NULL, 'RandomString' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcRspUserLogin2FieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspUserLogin2Field';";
const std::string CThostFtdcRspUserLogin2FieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspUserLogin2Field' VALUES (";

const std::string CThostFtdcTransferHeaderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferHeaderField'('Version' VARCHAR(8) NOT NULL, 'TradeCode' VARCHAR(14) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'TradeSerial' VARCHAR(18) NOT NULL, 'FutureID' VARCHAR(22) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBrchID' VARCHAR(10) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'RecordNum' VARCHAR(14) NOT NULL, 'SessionID' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL);";
const std::string CThostFtdcTransferHeaderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferHeaderField';";
const std::string CThostFtdcTransferHeaderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferHeaderField' VALUES (";

const std::string CThostFtdcTransferBankToFutureReqFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferBankToFutureReqField'('FutureAccount' VARCHAR(26) NOT NULL, 'FuturePwdFlag' VARCHAR(1) NOT NULL, 'FutureAccPwd' VARCHAR(34) NOT NULL, 'TradeAmt' DOUBLE NOT NULL, 'CustFee' DOUBLE NOT NULL, 'CurrencyCode' VARCHAR(8) NOT NULL);";
const std::string CThostFtdcTransferBankToFutureReqFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferBankToFutureReqField';";
const std::string CThostFtdcTransferBankToFutureReqFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferBankToFutureReqField' VALUES (";

const std::string CThostFtdcTransferBankToFutureRspFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferBankToFutureRspField'('RetCode' VARCHAR(10) NOT NULL, 'RetInfo' VARCHAR(258) NOT NULL, 'FutureAccount' VARCHAR(26) NOT NULL, 'TradeAmt' DOUBLE NOT NULL, 'CustFee' DOUBLE NOT NULL, 'CurrencyCode' VARCHAR(8) NOT NULL);";
const std::string CThostFtdcTransferBankToFutureRspFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferBankToFutureRspField';";
const std::string CThostFtdcTransferBankToFutureRspFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferBankToFutureRspField' VALUES (";

const std::string CThostFtdcTransferFutureToBankReqFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferFutureToBankReqField'('FutureAccount' VARCHAR(26) NOT NULL, 'FuturePwdFlag' VARCHAR(1) NOT NULL, 'FutureAccPwd' VARCHAR(34) NOT NULL, 'TradeAmt' DOUBLE NOT NULL, 'CustFee' DOUBLE NOT NULL, 'CurrencyCode' VARCHAR(8) NOT NULL);";
const std::string CThostFtdcTransferFutureToBankReqFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferFutureToBankReqField';";
const std::string CThostFtdcTransferFutureToBankReqFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferFutureToBankReqField' VALUES (";

const std::string CThostFtdcTransferFutureToBankRspFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferFutureToBankRspField'('RetCode' VARCHAR(10) NOT NULL, 'RetInfo' VARCHAR(258) NOT NULL, 'FutureAccount' VARCHAR(26) NOT NULL, 'TradeAmt' DOUBLE NOT NULL, 'CustFee' DOUBLE NOT NULL, 'CurrencyCode' VARCHAR(8) NOT NULL);";
const std::string CThostFtdcTransferFutureToBankRspFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferFutureToBankRspField';";
const std::string CThostFtdcTransferFutureToBankRspFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferFutureToBankRspField' VALUES (";

const std::string CThostFtdcTransferQryBankReqFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferQryBankReqField'('FutureAccount' VARCHAR(26) NOT NULL, 'FuturePwdFlag' VARCHAR(1) NOT NULL, 'FutureAccPwd' VARCHAR(34) NOT NULL, 'CurrencyCode' VARCHAR(8) NOT NULL);";
const std::string CThostFtdcTransferQryBankReqFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferQryBankReqField';";
const std::string CThostFtdcTransferQryBankReqFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferQryBankReqField' VALUES (";

const std::string CThostFtdcTransferQryBankRspFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferQryBankRspField'('RetCode' VARCHAR(10) NOT NULL, 'RetInfo' VARCHAR(258) NOT NULL, 'FutureAccount' VARCHAR(26) NOT NULL, 'TradeAmt' DOUBLE NOT NULL, 'UseAmt' DOUBLE NOT NULL, 'FetchAmt' DOUBLE NOT NULL, 'CurrencyCode' VARCHAR(8) NOT NULL);";
const std::string CThostFtdcTransferQryBankRspFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferQryBankRspField';";
const std::string CThostFtdcTransferQryBankRspFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferQryBankRspField' VALUES (";

const std::string CThostFtdcTransferQryDetailReqFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferQryDetailReqField'('FutureAccount' VARCHAR(26) NOT NULL);";
const std::string CThostFtdcTransferQryDetailReqFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferQryDetailReqField';";
const std::string CThostFtdcTransferQryDetailReqFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferQryDetailReqField' VALUES (";

const std::string CThostFtdcTransferQryDetailRspFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferQryDetailRspField'('TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'TradeCode' VARCHAR(14) NOT NULL, 'FutureSerial' INTEGER NOT NULL, 'FutureID' VARCHAR(22) NOT NULL, 'FutureAccount' VARCHAR(44) NOT NULL, 'BankSerial' INTEGER NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBrchID' VARCHAR(10) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'CertCode' VARCHAR(42) NOT NULL, 'CurrencyCode' VARCHAR(8) NOT NULL, 'TxAmount' DOUBLE NOT NULL, 'Flag' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcTransferQryDetailRspFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferQryDetailRspField';";
const std::string CThostFtdcTransferQryDetailRspFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferQryDetailRspField' VALUES (";

const std::string CThostFtdcRspInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspInfoField'('ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcRspInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspInfoField';";
const std::string CThostFtdcRspInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspInfoField' VALUES (";

const std::string CThostFtdcExchangeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeField'('ExchangeID' VARCHAR(18) NOT NULL, 'ExchangeName' VARCHAR(122) NOT NULL, 'ExchangeProperty' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcExchangeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeField';";
const std::string CThostFtdcExchangeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeField' VALUES (";

const std::string CThostFtdcProductFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcProductField'('reserve1' VARCHAR(62) NOT NULL, 'ProductName' VARCHAR(42) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductClass' VARCHAR(1) NOT NULL, 'VolumeMultiple' INTEGER NOT NULL, 'PriceTick' DOUBLE NOT NULL, 'MaxMarketOrderVolume' INTEGER NOT NULL, 'MinMarketOrderVolume' INTEGER NOT NULL, 'MaxLimitOrderVolume' INTEGER NOT NULL, 'MinLimitOrderVolume' INTEGER NOT NULL, 'PositionType' VARCHAR(1) NOT NULL, 'PositionDateType' VARCHAR(1) NOT NULL, 'CloseDealType' VARCHAR(1) NOT NULL, 'TradeCurrencyID' VARCHAR(8) NOT NULL, 'MortgageFundUseRange' VARCHAR(1) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'UnderlyingMultiple' DOUBLE NOT NULL, 'ProductID' VARCHAR(162) NOT NULL, 'ExchangeProductID' VARCHAR(162) NOT NULL, 'OpenLimitControlLevel' VARCHAR(1) NOT NULL, 'OrderFreqControlLevel' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcProductFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcProductField';";
const std::string CThostFtdcProductFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcProductField' VALUES (";

const std::string CThostFtdcInstrumentFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInstrumentField'('reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentName' VARCHAR(42) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'reserve3' VARCHAR(62) NOT NULL, 'ProductClass' VARCHAR(1) NOT NULL, 'DeliveryYear' INTEGER NOT NULL, 'DeliveryMonth' INTEGER NOT NULL, 'MaxMarketOrderVolume' INTEGER NOT NULL, 'MinMarketOrderVolume' INTEGER NOT NULL, 'MaxLimitOrderVolume' INTEGER NOT NULL, 'MinLimitOrderVolume' INTEGER NOT NULL, 'VolumeMultiple' INTEGER NOT NULL, 'PriceTick' DOUBLE NOT NULL, 'CreateDate' VARCHAR(18) NOT NULL, 'OpenDate' VARCHAR(18) NOT NULL, 'ExpireDate' VARCHAR(18) NOT NULL, 'StartDelivDate' VARCHAR(18) NOT NULL, 'EndDelivDate' VARCHAR(18) NOT NULL, 'InstLifePhase' VARCHAR(1) NOT NULL, 'IsTrading' INTEGER NOT NULL, 'PositionType' VARCHAR(1) NOT NULL, 'PositionDateType' VARCHAR(1) NOT NULL, 'LongMarginRatio' DOUBLE NOT NULL, 'ShortMarginRatio' DOUBLE NOT NULL, 'MaxMarginSideAlgorithm' VARCHAR(1) NOT NULL, 'reserve4' VARCHAR(62) NOT NULL, 'StrikePrice' DOUBLE NOT NULL, 'OptionsType' VARCHAR(1) NOT NULL, 'UnderlyingMultiple' DOUBLE NOT NULL, 'CombinationType' VARCHAR(1) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL, 'UnderlyingInstrID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"InstrumentID\"));";
const std::string CThostFtdcInstrumentFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInstrumentField';";
const std::string CThostFtdcInstrumentFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInstrumentField' VALUES (";

const std::string CThostFtdcBrokerFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerField'('BrokerID' VARCHAR(22) NOT NULL, 'BrokerAbbr' VARCHAR(18) NOT NULL, 'BrokerName' VARCHAR(162) NOT NULL, 'IsActive' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcBrokerFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerField';";
const std::string CThostFtdcBrokerFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerField' VALUES (";

const std::string CThostFtdcTraderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTraderField'('ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallCount' INTEGER NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'OrderCancelAlg' VARCHAR(1) NOT NULL, 'TradeInstallCount' INTEGER NOT NULL, 'MDInstallCount' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcTraderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTraderField';";
const std::string CThostFtdcTraderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTraderField' VALUES (";

const std::string CThostFtdcInvestorFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorField'('InvestorID' VARCHAR(26) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorGroupID' VARCHAR(26) NOT NULL, 'InvestorName' VARCHAR(162) NOT NULL, 'IdentifiedCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'IsActive' INTEGER NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'OpenDate' VARCHAR(18) NOT NULL, 'Mobile' VARCHAR(82) NOT NULL, 'CommModelID' VARCHAR(26) NOT NULL, 'MarginModelID' VARCHAR(26) NOT NULL, 'IsOrderFreq' VARCHAR(1) NOT NULL, 'IsOpenVolLimit' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorField';";
const std::string CThostFtdcInvestorFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorField' VALUES (";

const std::string CThostFtdcTradingCodeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradingCodeField'('InvestorID' VARCHAR(26) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'IsActive' INTEGER NOT NULL, 'ClientIDType' VARCHAR(1) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'BizType' VARCHAR(1) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcTradingCodeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradingCodeField';";
const std::string CThostFtdcTradingCodeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradingCodeField' VALUES (";

const std::string CThostFtdcPartBrokerFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcPartBrokerField'('BrokerID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'IsActive' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcPartBrokerFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcPartBrokerField';";
const std::string CThostFtdcPartBrokerFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcPartBrokerField' VALUES (";

const std::string CThostFtdcSuperUserFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSuperUserField'('UserID' VARCHAR(32) NOT NULL, 'UserName' VARCHAR(162) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'IsActive' INTEGER NOT NULL, PRIMARY KEY(\"UserID\"));";
const std::string CThostFtdcSuperUserFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSuperUserField';";
const std::string CThostFtdcSuperUserFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSuperUserField' VALUES (";

const std::string CThostFtdcSuperUserFunctionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSuperUserFunctionField'('UserID' VARCHAR(32) NOT NULL, 'FunctionCode' VARCHAR(1) NOT NULL, PRIMARY KEY(\"UserID\"));";
const std::string CThostFtdcSuperUserFunctionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSuperUserFunctionField';";
const std::string CThostFtdcSuperUserFunctionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSuperUserFunctionField' VALUES (";

const std::string CThostFtdcInvestorGroupFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorGroupField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorGroupID' VARCHAR(26) NOT NULL, 'InvestorGroupName' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcInvestorGroupFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorGroupField';";
const std::string CThostFtdcInvestorGroupFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorGroupField' VALUES (";

const std::string CThostFtdcTradingAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradingAccountField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'PreMortgage' DOUBLE NOT NULL, 'PreCredit' DOUBLE NOT NULL, 'PreDeposit' DOUBLE NOT NULL, 'PreBalance' DOUBLE NOT NULL, 'PreMargin' DOUBLE NOT NULL, 'InterestBase' DOUBLE NOT NULL, 'Interest' DOUBLE NOT NULL, 'Deposit' DOUBLE NOT NULL, 'Withdraw' DOUBLE NOT NULL, 'FrozenMargin' DOUBLE NOT NULL, 'FrozenCash' DOUBLE NOT NULL, 'FrozenCommission' DOUBLE NOT NULL, 'CurrMargin' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, 'Commission' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'PositionProfit' DOUBLE NOT NULL, 'Balance' DOUBLE NOT NULL, 'Available' DOUBLE NOT NULL, 'WithdrawQuota' DOUBLE NOT NULL, 'Reserve' DOUBLE NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'Credit' DOUBLE NOT NULL, 'Mortgage' DOUBLE NOT NULL, 'ExchangeMargin' DOUBLE NOT NULL, 'DeliveryMargin' DOUBLE NOT NULL, 'ExchangeDeliveryMargin' DOUBLE NOT NULL, 'ReserveBalance' DOUBLE NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'PreFundMortgageIn' DOUBLE NOT NULL, 'PreFundMortgageOut' DOUBLE NOT NULL, 'FundMortgageIn' DOUBLE NOT NULL, 'FundMortgageOut' DOUBLE NOT NULL, 'FundMortgageAvailable' DOUBLE NOT NULL, 'MortgageableFund' DOUBLE NOT NULL, 'SpecProductMargin' DOUBLE NOT NULL, 'SpecProductFrozenMargin' DOUBLE NOT NULL, 'SpecProductCommission' DOUBLE NOT NULL, 'SpecProductFrozenCommission' DOUBLE NOT NULL, 'SpecProductPositionProfit' DOUBLE NOT NULL, 'SpecProductCloseProfit' DOUBLE NOT NULL, 'SpecProductPositionProfitByAlg' DOUBLE NOT NULL, 'SpecProductExchangeMargin' DOUBLE NOT NULL, 'BizType' VARCHAR(1) NOT NULL, 'FrozenSwap' DOUBLE NOT NULL, 'RemainSwap' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcTradingAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradingAccountField';";
const std::string CThostFtdcTradingAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradingAccountField' VALUES (";

const std::string CThostFtdcInvestorPositionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorPositionField'('reserve1' VARCHAR(62) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'PosiDirection' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'PositionDate' VARCHAR(1) NOT NULL, 'YdPosition' INTEGER NOT NULL, 'Position' INTEGER NOT NULL, 'LongFrozen' INTEGER NOT NULL, 'ShortFrozen' INTEGER NOT NULL, 'LongFrozenAmount' DOUBLE NOT NULL, 'ShortFrozenAmount' DOUBLE NOT NULL, 'OpenVolume' INTEGER NOT NULL, 'CloseVolume' INTEGER NOT NULL, 'OpenAmount' DOUBLE NOT NULL, 'CloseAmount' DOUBLE NOT NULL, 'PositionCost' DOUBLE NOT NULL, 'PreMargin' DOUBLE NOT NULL, 'UseMargin' DOUBLE NOT NULL, 'FrozenMargin' DOUBLE NOT NULL, 'FrozenCash' DOUBLE NOT NULL, 'FrozenCommission' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, 'Commission' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'PositionProfit' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'SettlementPrice' DOUBLE NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'OpenCost' DOUBLE NOT NULL, 'ExchangeMargin' DOUBLE NOT NULL, 'CombPosition' INTEGER NOT NULL, 'CombLongFrozen' INTEGER NOT NULL, 'CombShortFrozen' INTEGER NOT NULL, 'CloseProfitByDate' DOUBLE NOT NULL, 'CloseProfitByTrade' DOUBLE NOT NULL, 'TodayPosition' INTEGER NOT NULL, 'MarginRateByMoney' DOUBLE NOT NULL, 'MarginRateByVolume' DOUBLE NOT NULL, 'StrikeFrozen' INTEGER NOT NULL, 'StrikeFrozenAmount' DOUBLE NOT NULL, 'AbandonFrozen' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'YdStrikeFrozen' INTEGER NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'PositionCostOffset' DOUBLE NOT NULL, 'TasPosition' INTEGER NOT NULL, 'TasPositionCost' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\",\"HedgeFlag\",\"PositionDate\",\"InstrumentID\",\"PosiDirection\"));";
const std::string CThostFtdcInvestorPositionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorPositionField';";
const std::string CThostFtdcInvestorPositionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorPositionField' VALUES (";

const std::string CThostFtdcInstrumentMarginRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInstrumentMarginRateField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'LongMarginRatioByMoney' DOUBLE NOT NULL, 'LongMarginRatioByVolume' DOUBLE NOT NULL, 'ShortMarginRatioByMoney' DOUBLE NOT NULL, 'ShortMarginRatioByVolume' DOUBLE NOT NULL, 'IsRelative' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\",\"InstrumentID\"));";
const std::string CThostFtdcInstrumentMarginRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInstrumentMarginRateField';";
const std::string CThostFtdcInstrumentMarginRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInstrumentMarginRateField' VALUES (";

const std::string CThostFtdcInstrumentCommissionRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInstrumentCommissionRateField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OpenRatioByMoney' DOUBLE NOT NULL, 'OpenRatioByVolume' DOUBLE NOT NULL, 'CloseRatioByMoney' DOUBLE NOT NULL, 'CloseRatioByVolume' DOUBLE NOT NULL, 'CloseTodayRatioByMoney' DOUBLE NOT NULL, 'CloseTodayRatioByVolume' DOUBLE NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'BizType' VARCHAR(1) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\",\"InstrumentID\"));";
const std::string CThostFtdcInstrumentCommissionRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInstrumentCommissionRateField';";
const std::string CThostFtdcInstrumentCommissionRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInstrumentCommissionRateField' VALUES (";

const std::string CThostFtdcDepthMarketDataFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcDepthMarketDataField'('TradingDay' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'LastPrice' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'PreClosePrice' DOUBLE NOT NULL, 'PreOpenInterest' DOUBLE NOT NULL, 'OpenPrice' DOUBLE NOT NULL, 'HighestPrice' DOUBLE NOT NULL, 'LowestPrice' DOUBLE NOT NULL, 'Volume' INTEGER NOT NULL, 'Turnover' DOUBLE NOT NULL, 'OpenInterest' DOUBLE NOT NULL, 'ClosePrice' DOUBLE NOT NULL, 'SettlementPrice' DOUBLE NOT NULL, 'UpperLimitPrice' DOUBLE NOT NULL, 'LowerLimitPrice' DOUBLE NOT NULL, 'PreDelta' DOUBLE NOT NULL, 'CurrDelta' DOUBLE NOT NULL, 'UpdateTime' VARCHAR(18) NOT NULL, 'UpdateMillisec' INTEGER NOT NULL, 'BidPrice1' DOUBLE NOT NULL, 'BidVolume1' INTEGER NOT NULL, 'AskPrice1' DOUBLE NOT NULL, 'AskVolume1' INTEGER NOT NULL, 'BidPrice2' DOUBLE NOT NULL, 'BidVolume2' INTEGER NOT NULL, 'AskPrice2' DOUBLE NOT NULL, 'AskVolume2' INTEGER NOT NULL, 'BidPrice3' DOUBLE NOT NULL, 'BidVolume3' INTEGER NOT NULL, 'AskPrice3' DOUBLE NOT NULL, 'AskVolume3' INTEGER NOT NULL, 'BidPrice4' DOUBLE NOT NULL, 'BidVolume4' INTEGER NOT NULL, 'AskPrice4' DOUBLE NOT NULL, 'AskVolume4' INTEGER NOT NULL, 'BidPrice5' DOUBLE NOT NULL, 'BidVolume5' INTEGER NOT NULL, 'AskPrice5' DOUBLE NOT NULL, 'AskVolume5' INTEGER NOT NULL, 'AveragePrice' DOUBLE NOT NULL, 'ActionDay' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'BandingUpperPrice' DOUBLE NOT NULL, 'BandingLowerPrice' DOUBLE NOT NULL);";
const std::string CThostFtdcDepthMarketDataFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcDepthMarketDataField';";
const std::string CThostFtdcDepthMarketDataFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcDepthMarketDataField' VALUES (";

const std::string CThostFtdcInstrumentTradingRightFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInstrumentTradingRightField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'TradingRight' VARCHAR(1) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInstrumentTradingRightFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInstrumentTradingRightField';";
const std::string CThostFtdcInstrumentTradingRightFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInstrumentTradingRightField' VALUES (";

const std::string CThostFtdcBrokerUserFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerUserField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'UserName' VARCHAR(162) NOT NULL, 'UserType' VARCHAR(1) NOT NULL, 'IsActive' INTEGER NOT NULL, 'IsUsingOTP' INTEGER NOT NULL, 'IsAuthForce' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcBrokerUserFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerUserField';";
const std::string CThostFtdcBrokerUserFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerUserField' VALUES (";

const std::string CThostFtdcBrokerUserPasswordFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerUserPasswordField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'LastUpdateTime' VARCHAR(34) NOT NULL, 'LastLoginTime' VARCHAR(34) NOT NULL, 'ExpireDate' VARCHAR(18) NOT NULL, 'WeakExpireDate' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcBrokerUserPasswordFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerUserPasswordField';";
const std::string CThostFtdcBrokerUserPasswordFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerUserPasswordField' VALUES (";

const std::string CThostFtdcBrokerUserFunctionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerUserFunctionField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'BrokerFunctionCode' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcBrokerUserFunctionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerUserFunctionField';";
const std::string CThostFtdcBrokerUserFunctionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerUserFunctionField' VALUES (";

const std::string CThostFtdcTraderOfferFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTraderOfferField'('ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'TraderConnectStatus' VARCHAR(1) NOT NULL, 'ConnectRequestDate' VARCHAR(18) NOT NULL, 'ConnectRequestTime' VARCHAR(18) NOT NULL, 'LastReportDate' VARCHAR(18) NOT NULL, 'LastReportTime' VARCHAR(18) NOT NULL, 'ConnectDate' VARCHAR(18) NOT NULL, 'ConnectTime' VARCHAR(18) NOT NULL, 'StartDate' VARCHAR(18) NOT NULL, 'StartTime' VARCHAR(18) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'MaxTradeID' VARCHAR(42) NOT NULL, 'MaxOrderMessageReference' VARCHAR(14) NOT NULL, 'OrderCancelAlg' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcTraderOfferFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTraderOfferField';";
const std::string CThostFtdcTraderOfferFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTraderOfferField' VALUES (";

const std::string CThostFtdcSettlementInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSettlementInfoField'('TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'Content' VARCHAR(1002) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSettlementInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSettlementInfoField';";
const std::string CThostFtdcSettlementInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSettlementInfoField' VALUES (";

const std::string CThostFtdcInstrumentMarginRateAdjustFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInstrumentMarginRateAdjustField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'LongMarginRatioByMoney' DOUBLE NOT NULL, 'LongMarginRatioByVolume' DOUBLE NOT NULL, 'ShortMarginRatioByMoney' DOUBLE NOT NULL, 'ShortMarginRatioByVolume' DOUBLE NOT NULL, 'IsRelative' INTEGER NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInstrumentMarginRateAdjustFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInstrumentMarginRateAdjustField';";
const std::string CThostFtdcInstrumentMarginRateAdjustFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInstrumentMarginRateAdjustField' VALUES (";

const std::string CThostFtdcExchangeMarginRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeMarginRateField'('BrokerID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'LongMarginRatioByMoney' DOUBLE NOT NULL, 'LongMarginRatioByVolume' DOUBLE NOT NULL, 'ShortMarginRatioByMoney' DOUBLE NOT NULL, 'ShortMarginRatioByVolume' DOUBLE NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcExchangeMarginRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeMarginRateField';";
const std::string CThostFtdcExchangeMarginRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeMarginRateField' VALUES (";

const std::string CThostFtdcExchangeMarginRateAdjustFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeMarginRateAdjustField'('BrokerID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'LongMarginRatioByMoney' DOUBLE NOT NULL, 'LongMarginRatioByVolume' DOUBLE NOT NULL, 'ShortMarginRatioByMoney' DOUBLE NOT NULL, 'ShortMarginRatioByVolume' DOUBLE NOT NULL, 'ExchLongMarginRatioByMoney' DOUBLE NOT NULL, 'ExchLongMarginRatioByVolume' DOUBLE NOT NULL, 'ExchShortMarginRatioByMoney' DOUBLE NOT NULL, 'ExchShortMarginRatioByVolume' DOUBLE NOT NULL, 'NoLongMarginRatioByMoney' DOUBLE NOT NULL, 'NoLongMarginRatioByVolume' DOUBLE NOT NULL, 'NoShortMarginRatioByMoney' DOUBLE NOT NULL, 'NoShortMarginRatioByVolume' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcExchangeMarginRateAdjustFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeMarginRateAdjustField';";
const std::string CThostFtdcExchangeMarginRateAdjustFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeMarginRateAdjustField' VALUES (";

const std::string CThostFtdcExchangeRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeRateField'('BrokerID' VARCHAR(22) NOT NULL, 'FromCurrencyID' VARCHAR(8) NOT NULL, 'FromCurrencyUnit' DOUBLE NOT NULL, 'ToCurrencyID' VARCHAR(8) NOT NULL, 'ExchangeRate' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcExchangeRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeRateField';";
const std::string CThostFtdcExchangeRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeRateField' VALUES (";

const std::string CThostFtdcSettlementRefFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSettlementRefField'('TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL);";
const std::string CThostFtdcSettlementRefFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSettlementRefField';";
const std::string CThostFtdcSettlementRefFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSettlementRefField' VALUES (";

const std::string CThostFtdcCurrentTimeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCurrentTimeField'('CurrDate' VARCHAR(18) NOT NULL, 'CurrTime' VARCHAR(18) NOT NULL, 'CurrMillisec' INTEGER NOT NULL, 'ActionDay' VARCHAR(18) NOT NULL);";
const std::string CThostFtdcCurrentTimeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCurrentTimeField';";
const std::string CThostFtdcCurrentTimeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCurrentTimeField' VALUES (";

const std::string CThostFtdcCommPhaseFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCommPhaseField'('TradingDay' VARCHAR(18) NOT NULL, 'CommPhaseNo' INTEGER NOT NULL, 'SystemID' VARCHAR(42) NOT NULL);";
const std::string CThostFtdcCommPhaseFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCommPhaseField';";
const std::string CThostFtdcCommPhaseFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCommPhaseField' VALUES (";

const std::string CThostFtdcLoginInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcLoginInfoField'('FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'LoginDate' VARCHAR(18) NOT NULL, 'LoginTime' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'InterfaceProductInfo' VARCHAR(22) NOT NULL, 'ProtocolInfo' VARCHAR(22) NOT NULL, 'SystemName' VARCHAR(82) NOT NULL, 'PasswordDeprecated' VARCHAR(82) NOT NULL, 'MaxOrderRef' VARCHAR(26) NOT NULL, 'SHFETime' VARCHAR(18) NOT NULL, 'DCETime' VARCHAR(18) NOT NULL, 'CZCETime' VARCHAR(18) NOT NULL, 'FFEXTime' VARCHAR(18) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'OneTimePassword' VARCHAR(82) NOT NULL, 'INETime' VARCHAR(18) NOT NULL, 'IsQryControl' INTEGER NOT NULL, 'LoginRemark' VARCHAR(72) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcLoginInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcLoginInfoField';";
const std::string CThostFtdcLoginInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcLoginInfoField' VALUES (";

const std::string CThostFtdcLogoutAllFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcLogoutAllField'('FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'SystemName' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcLogoutAllFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcLogoutAllField';";
const std::string CThostFtdcLogoutAllFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcLogoutAllField' VALUES (";

const std::string CThostFtdcFrontStatusFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcFrontStatusField'('FrontID' INTEGER NOT NULL, 'LastReportDate' VARCHAR(18) NOT NULL, 'LastReportTime' VARCHAR(18) NOT NULL, 'IsActive' INTEGER NOT NULL);";
const std::string CThostFtdcFrontStatusFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcFrontStatusField';";
const std::string CThostFtdcFrontStatusFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcFrontStatusField' VALUES (";

const std::string CThostFtdcUserPasswordUpdateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcUserPasswordUpdateField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'OldPassword' VARCHAR(82) NOT NULL, 'NewPassword' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcUserPasswordUpdateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcUserPasswordUpdateField';";
const std::string CThostFtdcUserPasswordUpdateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcUserPasswordUpdateField' VALUES (";

const std::string CThostFtdcInputOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'OrderPriceType' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'CombOffsetFlag' VARCHAR(10) NOT NULL, 'CombHedgeFlag' VARCHAR(10) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeTotalOriginal' INTEGER NOT NULL, 'TimeCondition' VARCHAR(1) NOT NULL, 'GTDDate' VARCHAR(18) NOT NULL, 'VolumeCondition' VARCHAR(1) NOT NULL, 'MinVolume' INTEGER NOT NULL, 'ContingentCondition' VARCHAR(1) NOT NULL, 'StopPrice' DOUBLE NOT NULL, 'ForceCloseReason' VARCHAR(1) NOT NULL, 'IsAutoSuspend' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'RequestID' INTEGER NOT NULL, 'UserForceClose' INTEGER NOT NULL, 'IsSwapOrder' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputOrderField';";
const std::string CThostFtdcInputOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputOrderField' VALUES (";

const std::string CThostFtdcOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'OrderPriceType' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'CombOffsetFlag' VARCHAR(10) NOT NULL, 'CombHedgeFlag' VARCHAR(10) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeTotalOriginal' INTEGER NOT NULL, 'TimeCondition' VARCHAR(1) NOT NULL, 'GTDDate' VARCHAR(18) NOT NULL, 'VolumeCondition' VARCHAR(1) NOT NULL, 'MinVolume' INTEGER NOT NULL, 'ContingentCondition' VARCHAR(1) NOT NULL, 'StopPrice' DOUBLE NOT NULL, 'ForceCloseReason' VARCHAR(1) NOT NULL, 'IsAutoSuspend' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'RequestID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderSubmitStatus' VARCHAR(1) NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'OrderSource' VARCHAR(1) NOT NULL, 'OrderStatus' VARCHAR(1) NOT NULL, 'OrderType' VARCHAR(1) NOT NULL, 'VolumeTraded' INTEGER NOT NULL, 'VolumeTotal' INTEGER NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'ActiveTime' VARCHAR(18) NOT NULL, 'SuspendTime' VARCHAR(18) NOT NULL, 'UpdateTime' VARCHAR(18) NOT NULL, 'CancelTime' VARCHAR(18) NOT NULL, 'ActiveTraderID' VARCHAR(42) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'UserForceClose' INTEGER NOT NULL, 'ActiveUserID' VARCHAR(32) NOT NULL, 'BrokerOrderSeq' INTEGER NOT NULL, 'RelativeOrderSysID' VARCHAR(42) NOT NULL, 'ZCETotalTradedVolume' INTEGER NOT NULL, 'IsSwapOrder' INTEGER NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'reserve3' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\",\"TradingDay\",\"FrontID\",\"SessionID\",\"OrderRef\"));";
const std::string CThostFtdcOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOrderField';";
const std::string CThostFtdcOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOrderField' VALUES (";

const std::string CThostFtdcExchangeOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeOrderField'('OrderPriceType' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'CombOffsetFlag' VARCHAR(10) NOT NULL, 'CombHedgeFlag' VARCHAR(10) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeTotalOriginal' INTEGER NOT NULL, 'TimeCondition' VARCHAR(1) NOT NULL, 'GTDDate' VARCHAR(18) NOT NULL, 'VolumeCondition' VARCHAR(1) NOT NULL, 'MinVolume' INTEGER NOT NULL, 'ContingentCondition' VARCHAR(1) NOT NULL, 'StopPrice' DOUBLE NOT NULL, 'ForceCloseReason' VARCHAR(1) NOT NULL, 'IsAutoSuspend' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'RequestID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderSubmitStatus' VARCHAR(1) NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'OrderSource' VARCHAR(1) NOT NULL, 'OrderStatus' VARCHAR(1) NOT NULL, 'OrderType' VARCHAR(1) NOT NULL, 'VolumeTraded' INTEGER NOT NULL, 'VolumeTotal' INTEGER NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'ActiveTime' VARCHAR(18) NOT NULL, 'SuspendTime' VARCHAR(18) NOT NULL, 'UpdateTime' VARCHAR(18) NOT NULL, 'CancelTime' VARCHAR(18) NOT NULL, 'ActiveTraderID' VARCHAR(42) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcExchangeOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeOrderField';";
const std::string CThostFtdcExchangeOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeOrderField' VALUES (";

const std::string CThostFtdcExchangeOrderInsertErrorFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeOrderInsertErrorField'('ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcExchangeOrderInsertErrorFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeOrderInsertErrorField';";
const std::string CThostFtdcExchangeOrderInsertErrorFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeOrderInsertErrorField' VALUES (";

const std::string CThostFtdcInputOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OrderActionRef' INTEGER NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeChange' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputOrderActionField';";
const std::string CThostFtdcInputOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputOrderActionField' VALUES (";

const std::string CThostFtdcOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OrderActionRef' INTEGER NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeChange' INTEGER NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOrderActionField';";
const std::string CThostFtdcOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOrderActionField' VALUES (";

const std::string CThostFtdcExchangeOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeOrderActionField'('ExchangeID' VARCHAR(18) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeChange' INTEGER NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"UserID\"));";
const std::string CThostFtdcExchangeOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeOrderActionField';";
const std::string CThostFtdcExchangeOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeOrderActionField' VALUES (";

const std::string CThostFtdcExchangeOrderActionErrorFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeOrderActionErrorField'('ExchangeID' VARCHAR(18) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcExchangeOrderActionErrorFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeOrderActionErrorField';";
const std::string CThostFtdcExchangeOrderActionErrorFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeOrderActionErrorField' VALUES (";

const std::string CThostFtdcExchangeTradeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeTradeField'('ExchangeID' VARCHAR(18) NOT NULL, 'TradeID' VARCHAR(42) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'TradingRole' VARCHAR(1) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'OffsetFlag' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'Price' DOUBLE NOT NULL, 'Volume' INTEGER NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'TradeType' VARCHAR(1) NOT NULL, 'PriceSource' VARCHAR(1) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'TradeSource' VARCHAR(1) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcExchangeTradeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeTradeField';";
const std::string CThostFtdcExchangeTradeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeTradeField' VALUES (";

const std::string CThostFtdcTradeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradeField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TradeID' VARCHAR(42) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'TradingRole' VARCHAR(1) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'OffsetFlag' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'Price' DOUBLE NOT NULL, 'Volume' INTEGER NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'TradeType' VARCHAR(1) NOT NULL, 'PriceSource' VARCHAR(1) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'BrokerOrderSeq' INTEGER NOT NULL, 'TradeSource' VARCHAR(1) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'Commission' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\",\"TradingDay\",\"ExchangeID\",\"TradeID\",\"TradeType\"));";
const std::string CThostFtdcTradeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradeField';";
const std::string CThostFtdcTradeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradeField' VALUES (";

const std::string CThostFtdcUserSessionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcUserSessionField'('FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'LoginDate' VARCHAR(18) NOT NULL, 'LoginTime' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'InterfaceProductInfo' VARCHAR(22) NOT NULL, 'ProtocolInfo' VARCHAR(22) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'LoginRemark' VARCHAR(72) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcUserSessionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcUserSessionField';";
const std::string CThostFtdcUserSessionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcUserSessionField' VALUES (";

const std::string CThostFtdcQryMaxOrderVolumeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryMaxOrderVolumeField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'OffsetFlag' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'MaxVolume' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryMaxOrderVolumeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryMaxOrderVolumeField';";
const std::string CThostFtdcQryMaxOrderVolumeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryMaxOrderVolumeField' VALUES (";

const std::string CThostFtdcSettlementInfoConfirmFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSettlementInfoConfirmField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ConfirmDate' VARCHAR(18) NOT NULL, 'ConfirmTime' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSettlementInfoConfirmFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSettlementInfoConfirmField';";
const std::string CThostFtdcSettlementInfoConfirmFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSettlementInfoConfirmField' VALUES (";

const std::string CThostFtdcSyncDepositFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDepositField'('DepositSeqNo' VARCHAR(30) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'Deposit' DOUBLE NOT NULL, 'IsForce' INTEGER NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'IsFromSopt' INTEGER NOT NULL, 'TradingPassword' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDepositFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDepositField';";
const std::string CThostFtdcSyncDepositFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDepositField' VALUES (";

const std::string CThostFtdcSyncFundMortgageFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncFundMortgageField'('MortgageSeqNo' VARCHAR(30) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'FromCurrencyID' VARCHAR(8) NOT NULL, 'MortgageAmount' DOUBLE NOT NULL, 'ToCurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncFundMortgageFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncFundMortgageField';";
const std::string CThostFtdcSyncFundMortgageFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncFundMortgageField' VALUES (";

const std::string CThostFtdcBrokerSyncFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerSyncField'('BrokerID' VARCHAR(22) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcBrokerSyncFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerSyncField';";
const std::string CThostFtdcBrokerSyncFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerSyncField' VALUES (";

const std::string CThostFtdcSyncingInvestorFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncingInvestorField'('InvestorID' VARCHAR(26) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorGroupID' VARCHAR(26) NOT NULL, 'InvestorName' VARCHAR(162) NOT NULL, 'IdentifiedCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'IsActive' INTEGER NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'OpenDate' VARCHAR(18) NOT NULL, 'Mobile' VARCHAR(82) NOT NULL, 'CommModelID' VARCHAR(26) NOT NULL, 'MarginModelID' VARCHAR(26) NOT NULL, 'IsOrderFreq' VARCHAR(1) NOT NULL, 'IsOpenVolLimit' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncingInvestorFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncingInvestorField';";
const std::string CThostFtdcSyncingInvestorFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncingInvestorField' VALUES (";

const std::string CThostFtdcSyncingTradingCodeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncingTradingCodeField'('InvestorID' VARCHAR(26) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'IsActive' INTEGER NOT NULL, 'ClientIDType' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncingTradingCodeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncingTradingCodeField';";
const std::string CThostFtdcSyncingTradingCodeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncingTradingCodeField' VALUES (";

const std::string CThostFtdcSyncingInvestorGroupFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncingInvestorGroupField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorGroupID' VARCHAR(26) NOT NULL, 'InvestorGroupName' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcSyncingInvestorGroupFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncingInvestorGroupField';";
const std::string CThostFtdcSyncingInvestorGroupFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncingInvestorGroupField' VALUES (";

const std::string CThostFtdcSyncingTradingAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncingTradingAccountField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'PreMortgage' DOUBLE NOT NULL, 'PreCredit' DOUBLE NOT NULL, 'PreDeposit' DOUBLE NOT NULL, 'PreBalance' DOUBLE NOT NULL, 'PreMargin' DOUBLE NOT NULL, 'InterestBase' DOUBLE NOT NULL, 'Interest' DOUBLE NOT NULL, 'Deposit' DOUBLE NOT NULL, 'Withdraw' DOUBLE NOT NULL, 'FrozenMargin' DOUBLE NOT NULL, 'FrozenCash' DOUBLE NOT NULL, 'FrozenCommission' DOUBLE NOT NULL, 'CurrMargin' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, 'Commission' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'PositionProfit' DOUBLE NOT NULL, 'Balance' DOUBLE NOT NULL, 'Available' DOUBLE NOT NULL, 'WithdrawQuota' DOUBLE NOT NULL, 'Reserve' DOUBLE NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'Credit' DOUBLE NOT NULL, 'Mortgage' DOUBLE NOT NULL, 'ExchangeMargin' DOUBLE NOT NULL, 'DeliveryMargin' DOUBLE NOT NULL, 'ExchangeDeliveryMargin' DOUBLE NOT NULL, 'ReserveBalance' DOUBLE NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'PreFundMortgageIn' DOUBLE NOT NULL, 'PreFundMortgageOut' DOUBLE NOT NULL, 'FundMortgageIn' DOUBLE NOT NULL, 'FundMortgageOut' DOUBLE NOT NULL, 'FundMortgageAvailable' DOUBLE NOT NULL, 'MortgageableFund' DOUBLE NOT NULL, 'SpecProductMargin' DOUBLE NOT NULL, 'SpecProductFrozenMargin' DOUBLE NOT NULL, 'SpecProductCommission' DOUBLE NOT NULL, 'SpecProductFrozenCommission' DOUBLE NOT NULL, 'SpecProductPositionProfit' DOUBLE NOT NULL, 'SpecProductCloseProfit' DOUBLE NOT NULL, 'SpecProductPositionProfitByAlg' DOUBLE NOT NULL, 'SpecProductExchangeMargin' DOUBLE NOT NULL, 'FrozenSwap' DOUBLE NOT NULL, 'RemainSwap' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcSyncingTradingAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncingTradingAccountField';";
const std::string CThostFtdcSyncingTradingAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncingTradingAccountField' VALUES (";

const std::string CThostFtdcSyncingInvestorPositionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncingInvestorPositionField'('reserve1' VARCHAR(62) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'PosiDirection' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'PositionDate' VARCHAR(1) NOT NULL, 'YdPosition' INTEGER NOT NULL, 'Position' INTEGER NOT NULL, 'LongFrozen' INTEGER NOT NULL, 'ShortFrozen' INTEGER NOT NULL, 'LongFrozenAmount' DOUBLE NOT NULL, 'ShortFrozenAmount' DOUBLE NOT NULL, 'OpenVolume' INTEGER NOT NULL, 'CloseVolume' INTEGER NOT NULL, 'OpenAmount' DOUBLE NOT NULL, 'CloseAmount' DOUBLE NOT NULL, 'PositionCost' DOUBLE NOT NULL, 'PreMargin' DOUBLE NOT NULL, 'UseMargin' DOUBLE NOT NULL, 'FrozenMargin' DOUBLE NOT NULL, 'FrozenCash' DOUBLE NOT NULL, 'FrozenCommission' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, 'Commission' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'PositionProfit' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'SettlementPrice' DOUBLE NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'OpenCost' DOUBLE NOT NULL, 'ExchangeMargin' DOUBLE NOT NULL, 'CombPosition' INTEGER NOT NULL, 'CombLongFrozen' INTEGER NOT NULL, 'CombShortFrozen' INTEGER NOT NULL, 'CloseProfitByDate' DOUBLE NOT NULL, 'CloseProfitByTrade' DOUBLE NOT NULL, 'TodayPosition' INTEGER NOT NULL, 'MarginRateByMoney' DOUBLE NOT NULL, 'MarginRateByVolume' DOUBLE NOT NULL, 'StrikeFrozen' INTEGER NOT NULL, 'StrikeFrozenAmount' DOUBLE NOT NULL, 'AbandonFrozen' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'YdStrikeFrozen' INTEGER NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'PositionCostOffset' DOUBLE NOT NULL, 'TasPosition' INTEGER NOT NULL, 'TasPositionCost' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncingInvestorPositionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncingInvestorPositionField';";
const std::string CThostFtdcSyncingInvestorPositionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncingInvestorPositionField' VALUES (";

const std::string CThostFtdcSyncingInstrumentMarginRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncingInstrumentMarginRateField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'LongMarginRatioByMoney' DOUBLE NOT NULL, 'LongMarginRatioByVolume' DOUBLE NOT NULL, 'ShortMarginRatioByMoney' DOUBLE NOT NULL, 'ShortMarginRatioByVolume' DOUBLE NOT NULL, 'IsRelative' INTEGER NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncingInstrumentMarginRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncingInstrumentMarginRateField';";
const std::string CThostFtdcSyncingInstrumentMarginRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncingInstrumentMarginRateField' VALUES (";

const std::string CThostFtdcSyncingInstrumentCommissionRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncingInstrumentCommissionRateField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OpenRatioByMoney' DOUBLE NOT NULL, 'OpenRatioByVolume' DOUBLE NOT NULL, 'CloseRatioByMoney' DOUBLE NOT NULL, 'CloseRatioByVolume' DOUBLE NOT NULL, 'CloseTodayRatioByMoney' DOUBLE NOT NULL, 'CloseTodayRatioByVolume' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncingInstrumentCommissionRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncingInstrumentCommissionRateField';";
const std::string CThostFtdcSyncingInstrumentCommissionRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncingInstrumentCommissionRateField' VALUES (";

const std::string CThostFtdcSyncingInstrumentTradingRightFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncingInstrumentTradingRightField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'TradingRight' VARCHAR(1) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncingInstrumentTradingRightFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncingInstrumentTradingRightField';";
const std::string CThostFtdcSyncingInstrumentTradingRightFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncingInstrumentTradingRightField' VALUES (";

const std::string CThostFtdcQryOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'InsertTimeStart' VARCHAR(18) NOT NULL, 'InsertTimeEnd' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryOrderField';";
const std::string CThostFtdcQryOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryOrderField' VALUES (";

const std::string CThostFtdcQryTradeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryTradeField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TradeID' VARCHAR(42) NOT NULL, 'TradeTimeStart' VARCHAR(18) NOT NULL, 'TradeTimeEnd' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryTradeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryTradeField';";
const std::string CThostFtdcQryTradeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryTradeField' VALUES (";

const std::string CThostFtdcQryInvestorPositionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorPositionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorPositionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorPositionField';";
const std::string CThostFtdcQryInvestorPositionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorPositionField' VALUES (";

const std::string CThostFtdcQryTradingAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryTradingAccountField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'BizType' VARCHAR(1) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryTradingAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryTradingAccountField';";
const std::string CThostFtdcQryTradingAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryTradingAccountField' VALUES (";

const std::string CThostFtdcQryInvestorFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorField';";
const std::string CThostFtdcQryInvestorFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorField' VALUES (";

const std::string CThostFtdcQryTradingCodeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryTradingCodeField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'ClientIDType' VARCHAR(1) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryTradingCodeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryTradingCodeField';";
const std::string CThostFtdcQryTradingCodeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryTradingCodeField' VALUES (";

const std::string CThostFtdcQryInvestorGroupFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorGroupField'('BrokerID' VARCHAR(22) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryInvestorGroupFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorGroupField';";
const std::string CThostFtdcQryInvestorGroupFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorGroupField' VALUES (";

const std::string CThostFtdcQryInstrumentMarginRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInstrumentMarginRateField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInstrumentMarginRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInstrumentMarginRateField';";
const std::string CThostFtdcQryInstrumentMarginRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInstrumentMarginRateField' VALUES (";

const std::string CThostFtdcQryInstrumentCommissionRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInstrumentCommissionRateField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInstrumentCommissionRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInstrumentCommissionRateField';";
const std::string CThostFtdcQryInstrumentCommissionRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInstrumentCommissionRateField' VALUES (";

const std::string CThostFtdcQryInstrumentTradingRightFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInstrumentTradingRightField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInstrumentTradingRightFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInstrumentTradingRightField';";
const std::string CThostFtdcQryInstrumentTradingRightFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInstrumentTradingRightField' VALUES (";

const std::string CThostFtdcQryBrokerFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryBrokerField'('BrokerID' VARCHAR(22) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryBrokerFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryBrokerField';";
const std::string CThostFtdcQryBrokerFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryBrokerField' VALUES (";

const std::string CThostFtdcQryTraderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryTraderField'('ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL);";
const std::string CThostFtdcQryTraderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryTraderField';";
const std::string CThostFtdcQryTraderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryTraderField' VALUES (";

const std::string CThostFtdcQrySuperUserFunctionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySuperUserFunctionField'('UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"UserID\"));";
const std::string CThostFtdcQrySuperUserFunctionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySuperUserFunctionField';";
const std::string CThostFtdcQrySuperUserFunctionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySuperUserFunctionField' VALUES (";

const std::string CThostFtdcQryUserSessionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryUserSessionField'('FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcQryUserSessionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryUserSessionField';";
const std::string CThostFtdcQryUserSessionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryUserSessionField' VALUES (";

const std::string CThostFtdcQryPartBrokerFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryPartBrokerField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryPartBrokerFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryPartBrokerField';";
const std::string CThostFtdcQryPartBrokerFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryPartBrokerField' VALUES (";

const std::string CThostFtdcQryFrontStatusFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryFrontStatusField'('FrontID' INTEGER NOT NULL);";
const std::string CThostFtdcQryFrontStatusFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryFrontStatusField';";
const std::string CThostFtdcQryFrontStatusFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryFrontStatusField' VALUES (";

const std::string CThostFtdcQryExchangeOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeOrderField'('ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryExchangeOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeOrderField';";
const std::string CThostFtdcQryExchangeOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeOrderField' VALUES (";

const std::string CThostFtdcQryOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryOrderActionField';";
const std::string CThostFtdcQryOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryOrderActionField' VALUES (";

const std::string CThostFtdcQryExchangeOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeOrderActionField'('ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL);";
const std::string CThostFtdcQryExchangeOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeOrderActionField';";
const std::string CThostFtdcQryExchangeOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeOrderActionField' VALUES (";

const std::string CThostFtdcQrySuperUserFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySuperUserField'('UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"UserID\"));";
const std::string CThostFtdcQrySuperUserFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySuperUserField';";
const std::string CThostFtdcQrySuperUserFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySuperUserField' VALUES (";

const std::string CThostFtdcQryExchangeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeField'('ExchangeID' VARCHAR(18) NOT NULL);";
const std::string CThostFtdcQryExchangeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeField';";
const std::string CThostFtdcQryExchangeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeField' VALUES (";

const std::string CThostFtdcQryProductFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryProductField'('reserve1' VARCHAR(62) NOT NULL, 'ProductClass' VARCHAR(1) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryProductFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryProductField';";
const std::string CThostFtdcQryProductFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryProductField' VALUES (";

const std::string CThostFtdcQryInstrumentFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInstrumentField'('reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'reserve3' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryInstrumentFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInstrumentField';";
const std::string CThostFtdcQryInstrumentFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInstrumentField' VALUES (";

const std::string CThostFtdcQryDepthMarketDataFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryDepthMarketDataField'('reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryDepthMarketDataFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryDepthMarketDataField';";
const std::string CThostFtdcQryDepthMarketDataFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryDepthMarketDataField' VALUES (";

const std::string CThostFtdcQryBrokerUserFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryBrokerUserField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcQryBrokerUserFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryBrokerUserField';";
const std::string CThostFtdcQryBrokerUserFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryBrokerUserField' VALUES (";

const std::string CThostFtdcQryBrokerUserFunctionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryBrokerUserFunctionField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcQryBrokerUserFunctionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryBrokerUserFunctionField';";
const std::string CThostFtdcQryBrokerUserFunctionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryBrokerUserFunctionField' VALUES (";

const std::string CThostFtdcQryTraderOfferFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryTraderOfferField'('ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL);";
const std::string CThostFtdcQryTraderOfferFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryTraderOfferField';";
const std::string CThostFtdcQryTraderOfferFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryTraderOfferField' VALUES (";

const std::string CThostFtdcQrySyncDepositFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySyncDepositField'('BrokerID' VARCHAR(22) NOT NULL, 'DepositSeqNo' VARCHAR(30) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQrySyncDepositFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySyncDepositField';";
const std::string CThostFtdcQrySyncDepositFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySyncDepositField' VALUES (";

const std::string CThostFtdcQrySettlementInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySettlementInfoField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQrySettlementInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySettlementInfoField';";
const std::string CThostFtdcQrySettlementInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySettlementInfoField' VALUES (";

const std::string CThostFtdcQryExchangeMarginRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeMarginRateField'('BrokerID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryExchangeMarginRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeMarginRateField';";
const std::string CThostFtdcQryExchangeMarginRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeMarginRateField' VALUES (";

const std::string CThostFtdcQryExchangeMarginRateAdjustFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeMarginRateAdjustField'('BrokerID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryExchangeMarginRateAdjustFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeMarginRateAdjustField';";
const std::string CThostFtdcQryExchangeMarginRateAdjustFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeMarginRateAdjustField' VALUES (";

const std::string CThostFtdcQryExchangeRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeRateField'('BrokerID' VARCHAR(22) NOT NULL, 'FromCurrencyID' VARCHAR(8) NOT NULL, 'ToCurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryExchangeRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeRateField';";
const std::string CThostFtdcQryExchangeRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeRateField' VALUES (";

const std::string CThostFtdcQrySyncFundMortgageFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySyncFundMortgageField'('BrokerID' VARCHAR(22) NOT NULL, 'MortgageSeqNo' VARCHAR(30) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQrySyncFundMortgageFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySyncFundMortgageField';";
const std::string CThostFtdcQrySyncFundMortgageFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySyncFundMortgageField' VALUES (";

const std::string CThostFtdcQryHisOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryHisOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'InsertTimeStart' VARCHAR(18) NOT NULL, 'InsertTimeEnd' VARCHAR(18) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryHisOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryHisOrderField';";
const std::string CThostFtdcQryHisOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryHisOrderField' VALUES (";

const std::string CThostFtdcOptionInstrMiniMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOptionInstrMiniMarginField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'MinMargin' DOUBLE NOT NULL, 'ValueMethod' VARCHAR(1) NOT NULL, 'IsRelative' INTEGER NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcOptionInstrMiniMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOptionInstrMiniMarginField';";
const std::string CThostFtdcOptionInstrMiniMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOptionInstrMiniMarginField' VALUES (";

const std::string CThostFtdcOptionInstrMarginAdjustFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOptionInstrMarginAdjustField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'SShortMarginRatioByMoney' DOUBLE NOT NULL, 'SShortMarginRatioByVolume' DOUBLE NOT NULL, 'HShortMarginRatioByMoney' DOUBLE NOT NULL, 'HShortMarginRatioByVolume' DOUBLE NOT NULL, 'AShortMarginRatioByMoney' DOUBLE NOT NULL, 'AShortMarginRatioByVolume' DOUBLE NOT NULL, 'IsRelative' INTEGER NOT NULL, 'MShortMarginRatioByMoney' DOUBLE NOT NULL, 'MShortMarginRatioByVolume' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcOptionInstrMarginAdjustFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOptionInstrMarginAdjustField';";
const std::string CThostFtdcOptionInstrMarginAdjustFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOptionInstrMarginAdjustField' VALUES (";

const std::string CThostFtdcOptionInstrCommRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOptionInstrCommRateField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OpenRatioByMoney' DOUBLE NOT NULL, 'OpenRatioByVolume' DOUBLE NOT NULL, 'CloseRatioByMoney' DOUBLE NOT NULL, 'CloseRatioByVolume' DOUBLE NOT NULL, 'CloseTodayRatioByMoney' DOUBLE NOT NULL, 'CloseTodayRatioByVolume' DOUBLE NOT NULL, 'StrikeRatioByMoney' DOUBLE NOT NULL, 'StrikeRatioByVolume' DOUBLE NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcOptionInstrCommRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOptionInstrCommRateField';";
const std::string CThostFtdcOptionInstrCommRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOptionInstrCommRateField' VALUES (";

const std::string CThostFtdcOptionInstrTradeCostFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOptionInstrTradeCostField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'FixedMargin' DOUBLE NOT NULL, 'MiniMargin' DOUBLE NOT NULL, 'Royalty' DOUBLE NOT NULL, 'ExchFixedMargin' DOUBLE NOT NULL, 'ExchMiniMargin' DOUBLE NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcOptionInstrTradeCostFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOptionInstrTradeCostField';";
const std::string CThostFtdcOptionInstrTradeCostFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOptionInstrTradeCostField' VALUES (";

const std::string CThostFtdcQryOptionInstrTradeCostFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryOptionInstrTradeCostField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'InputPrice' DOUBLE NOT NULL, 'UnderlyingPrice' DOUBLE NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryOptionInstrTradeCostFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryOptionInstrTradeCostField';";
const std::string CThostFtdcQryOptionInstrTradeCostFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryOptionInstrTradeCostField' VALUES (";

const std::string CThostFtdcQryOptionInstrCommRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryOptionInstrCommRateField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryOptionInstrCommRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryOptionInstrCommRateField';";
const std::string CThostFtdcQryOptionInstrCommRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryOptionInstrCommRateField' VALUES (";

const std::string CThostFtdcIndexPriceFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcIndexPriceField'('BrokerID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ClosePrice' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcIndexPriceFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcIndexPriceField';";
const std::string CThostFtdcIndexPriceFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcIndexPriceField' VALUES (";

const std::string CThostFtdcInputExecOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputExecOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExecOrderRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Volume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OffsetFlag' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ActionType' VARCHAR(1) NOT NULL, 'PosiDirection' VARCHAR(1) NOT NULL, 'ReservePositionFlag' VARCHAR(1) NOT NULL, 'CloseFlag' VARCHAR(1) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputExecOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputExecOrderField';";
const std::string CThostFtdcInputExecOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputExecOrderField' VALUES (";

const std::string CThostFtdcInputExecOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputExecOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExecOrderActionRef' INTEGER NOT NULL, 'ExecOrderRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ExecOrderSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputExecOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputExecOrderActionField';";
const std::string CThostFtdcInputExecOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputExecOrderActionField' VALUES (";

const std::string CThostFtdcExecOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExecOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExecOrderRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Volume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OffsetFlag' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ActionType' VARCHAR(1) NOT NULL, 'PosiDirection' VARCHAR(1) NOT NULL, 'ReservePositionFlag' VARCHAR(1) NOT NULL, 'CloseFlag' VARCHAR(1) NOT NULL, 'ExecOrderLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderSubmitStatus' VARCHAR(1) NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'ExecOrderSysID' VARCHAR(42) NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'CancelTime' VARCHAR(18) NOT NULL, 'ExecResult' VARCHAR(1) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'ActiveUserID' VARCHAR(32) NOT NULL, 'BrokerExecOrderSeq' INTEGER NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'reserve3' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcExecOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExecOrderField';";
const std::string CThostFtdcExecOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExecOrderField' VALUES (";

const std::string CThostFtdcExecOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExecOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExecOrderActionRef' INTEGER NOT NULL, 'ExecOrderRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ExecOrderSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'ExecOrderLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'ActionType' VARCHAR(1) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcExecOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExecOrderActionField';";
const std::string CThostFtdcExecOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExecOrderActionField' VALUES (";

const std::string CThostFtdcQryExecOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExecOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ExecOrderSysID' VARCHAR(42) NOT NULL, 'InsertTimeStart' VARCHAR(18) NOT NULL, 'InsertTimeEnd' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryExecOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExecOrderField';";
const std::string CThostFtdcQryExecOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExecOrderField' VALUES (";

const std::string CThostFtdcExchangeExecOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeExecOrderField'('Volume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OffsetFlag' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ActionType' VARCHAR(1) NOT NULL, 'PosiDirection' VARCHAR(1) NOT NULL, 'ReservePositionFlag' VARCHAR(1) NOT NULL, 'CloseFlag' VARCHAR(1) NOT NULL, 'ExecOrderLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderSubmitStatus' VARCHAR(1) NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'ExecOrderSysID' VARCHAR(42) NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'CancelTime' VARCHAR(18) NOT NULL, 'ExecResult' VARCHAR(1) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcExchangeExecOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeExecOrderField';";
const std::string CThostFtdcExchangeExecOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeExecOrderField' VALUES (";

const std::string CThostFtdcQryExchangeExecOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeExecOrderField'('ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryExchangeExecOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeExecOrderField';";
const std::string CThostFtdcQryExchangeExecOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeExecOrderField' VALUES (";

const std::string CThostFtdcQryExecOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExecOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryExecOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExecOrderActionField';";
const std::string CThostFtdcQryExecOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExecOrderActionField' VALUES (";

const std::string CThostFtdcExchangeExecOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeExecOrderActionField'('ExchangeID' VARCHAR(18) NOT NULL, 'ExecOrderSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'ExecOrderLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'ActionType' VARCHAR(1) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'Volume' INTEGER NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"UserID\"));";
const std::string CThostFtdcExchangeExecOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeExecOrderActionField';";
const std::string CThostFtdcExchangeExecOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeExecOrderActionField' VALUES (";

const std::string CThostFtdcQryExchangeExecOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeExecOrderActionField'('ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL);";
const std::string CThostFtdcQryExchangeExecOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeExecOrderActionField';";
const std::string CThostFtdcQryExchangeExecOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeExecOrderActionField' VALUES (";

const std::string CThostFtdcErrExecOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcErrExecOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExecOrderRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Volume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OffsetFlag' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ActionType' VARCHAR(1) NOT NULL, 'PosiDirection' VARCHAR(1) NOT NULL, 'ReservePositionFlag' VARCHAR(1) NOT NULL, 'CloseFlag' VARCHAR(1) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcErrExecOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcErrExecOrderField';";
const std::string CThostFtdcErrExecOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcErrExecOrderField' VALUES (";

const std::string CThostFtdcQryErrExecOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryErrExecOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryErrExecOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryErrExecOrderField';";
const std::string CThostFtdcQryErrExecOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryErrExecOrderField' VALUES (";

const std::string CThostFtdcErrExecOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcErrExecOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExecOrderActionRef' INTEGER NOT NULL, 'ExecOrderRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ExecOrderSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcErrExecOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcErrExecOrderActionField';";
const std::string CThostFtdcErrExecOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcErrExecOrderActionField' VALUES (";

const std::string CThostFtdcQryErrExecOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryErrExecOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryErrExecOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryErrExecOrderActionField';";
const std::string CThostFtdcQryErrExecOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryErrExecOrderActionField' VALUES (";

const std::string CThostFtdcOptionInstrTradingRightFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOptionInstrTradingRightField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'TradingRight' VARCHAR(1) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcOptionInstrTradingRightFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOptionInstrTradingRightField';";
const std::string CThostFtdcOptionInstrTradingRightFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOptionInstrTradingRightField' VALUES (";

const std::string CThostFtdcQryOptionInstrTradingRightFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryOptionInstrTradingRightField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryOptionInstrTradingRightFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryOptionInstrTradingRightField';";
const std::string CThostFtdcQryOptionInstrTradingRightFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryOptionInstrTradingRightField' VALUES (";

const std::string CThostFtdcInputForQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputForQuoteField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ForQuoteRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputForQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputForQuoteField';";
const std::string CThostFtdcInputForQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputForQuoteField' VALUES (";

const std::string CThostFtdcForQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcForQuoteField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ForQuoteRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'ForQuoteLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'ForQuoteStatus' VARCHAR(1) NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'ActiveUserID' VARCHAR(32) NOT NULL, 'BrokerForQutoSeq' INTEGER NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve3' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcForQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcForQuoteField';";
const std::string CThostFtdcForQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcForQuoteField' VALUES (";

const std::string CThostFtdcQryForQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryForQuoteField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InsertTimeStart' VARCHAR(18) NOT NULL, 'InsertTimeEnd' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryForQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryForQuoteField';";
const std::string CThostFtdcQryForQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryForQuoteField' VALUES (";

const std::string CThostFtdcExchangeForQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeForQuoteField'('ForQuoteLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'ForQuoteStatus' VARCHAR(1) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcExchangeForQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeForQuoteField';";
const std::string CThostFtdcExchangeForQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeForQuoteField' VALUES (";

const std::string CThostFtdcQryExchangeForQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeForQuoteField'('ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryExchangeForQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeForQuoteField';";
const std::string CThostFtdcQryExchangeForQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeForQuoteField' VALUES (";

const std::string CThostFtdcInputQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputQuoteField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'QuoteRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'AskPrice' DOUBLE NOT NULL, 'BidPrice' DOUBLE NOT NULL, 'AskVolume' INTEGER NOT NULL, 'BidVolume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'AskOffsetFlag' VARCHAR(1) NOT NULL, 'BidOffsetFlag' VARCHAR(1) NOT NULL, 'AskHedgeFlag' VARCHAR(1) NOT NULL, 'BidHedgeFlag' VARCHAR(1) NOT NULL, 'AskOrderRef' VARCHAR(26) NOT NULL, 'BidOrderRef' VARCHAR(26) NOT NULL, 'ForQuoteSysID' VARCHAR(42) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, 'ReplaceSysID' VARCHAR(42) NOT NULL, 'TimeCondition' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputQuoteField';";
const std::string CThostFtdcInputQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputQuoteField' VALUES (";

const std::string CThostFtdcInputQuoteActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputQuoteActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'QuoteActionRef' INTEGER NOT NULL, 'QuoteRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'QuoteSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputQuoteActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputQuoteActionField';";
const std::string CThostFtdcInputQuoteActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputQuoteActionField' VALUES (";

const std::string CThostFtdcQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQuoteField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'QuoteRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'AskPrice' DOUBLE NOT NULL, 'BidPrice' DOUBLE NOT NULL, 'AskVolume' INTEGER NOT NULL, 'BidVolume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'AskOffsetFlag' VARCHAR(1) NOT NULL, 'BidOffsetFlag' VARCHAR(1) NOT NULL, 'AskHedgeFlag' VARCHAR(1) NOT NULL, 'BidHedgeFlag' VARCHAR(1) NOT NULL, 'QuoteLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'OrderSubmitStatus' VARCHAR(1) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'QuoteSysID' VARCHAR(42) NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'CancelTime' VARCHAR(18) NOT NULL, 'QuoteStatus' VARCHAR(1) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'AskOrderSysID' VARCHAR(42) NOT NULL, 'BidOrderSysID' VARCHAR(42) NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'ActiveUserID' VARCHAR(32) NOT NULL, 'BrokerQuoteSeq' INTEGER NOT NULL, 'AskOrderRef' VARCHAR(26) NOT NULL, 'BidOrderRef' VARCHAR(26) NOT NULL, 'ForQuoteSysID' VARCHAR(42) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'reserve3' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, 'ReplaceSysID' VARCHAR(42) NOT NULL, 'TimeCondition' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQuoteField';";
const std::string CThostFtdcQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQuoteField' VALUES (";

const std::string CThostFtdcQuoteActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQuoteActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'QuoteActionRef' INTEGER NOT NULL, 'QuoteRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'QuoteSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'QuoteLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQuoteActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQuoteActionField';";
const std::string CThostFtdcQuoteActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQuoteActionField' VALUES (";

const std::string CThostFtdcQryQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryQuoteField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'QuoteSysID' VARCHAR(42) NOT NULL, 'InsertTimeStart' VARCHAR(18) NOT NULL, 'InsertTimeEnd' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryQuoteField';";
const std::string CThostFtdcQryQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryQuoteField' VALUES (";

const std::string CThostFtdcExchangeQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeQuoteField'('AskPrice' DOUBLE NOT NULL, 'BidPrice' DOUBLE NOT NULL, 'AskVolume' INTEGER NOT NULL, 'BidVolume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'AskOffsetFlag' VARCHAR(1) NOT NULL, 'BidOffsetFlag' VARCHAR(1) NOT NULL, 'AskHedgeFlag' VARCHAR(1) NOT NULL, 'BidHedgeFlag' VARCHAR(1) NOT NULL, 'QuoteLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'OrderSubmitStatus' VARCHAR(1) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'QuoteSysID' VARCHAR(42) NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'CancelTime' VARCHAR(18) NOT NULL, 'QuoteStatus' VARCHAR(1) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'AskOrderSysID' VARCHAR(42) NOT NULL, 'BidOrderSysID' VARCHAR(42) NOT NULL, 'ForQuoteSysID' VARCHAR(42) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, 'TimeCondition' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcExchangeQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeQuoteField';";
const std::string CThostFtdcExchangeQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeQuoteField' VALUES (";

const std::string CThostFtdcQryExchangeQuoteFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeQuoteField'('ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryExchangeQuoteFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeQuoteField';";
const std::string CThostFtdcQryExchangeQuoteFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeQuoteField' VALUES (";

const std::string CThostFtdcQryQuoteActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryQuoteActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryQuoteActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryQuoteActionField';";
const std::string CThostFtdcQryQuoteActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryQuoteActionField' VALUES (";

const std::string CThostFtdcExchangeQuoteActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeQuoteActionField'('ExchangeID' VARCHAR(18) NOT NULL, 'QuoteSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'QuoteLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"UserID\"));";
const std::string CThostFtdcExchangeQuoteActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeQuoteActionField';";
const std::string CThostFtdcExchangeQuoteActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeQuoteActionField' VALUES (";

const std::string CThostFtdcQryExchangeQuoteActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeQuoteActionField'('ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL);";
const std::string CThostFtdcQryExchangeQuoteActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeQuoteActionField';";
const std::string CThostFtdcQryExchangeQuoteActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeQuoteActionField' VALUES (";

const std::string CThostFtdcOptionInstrDeltaFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOptionInstrDeltaField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'Delta' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcOptionInstrDeltaFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOptionInstrDeltaField';";
const std::string CThostFtdcOptionInstrDeltaFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOptionInstrDeltaField' VALUES (";

const std::string CThostFtdcForQuoteRspFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcForQuoteRspField'('TradingDay' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ForQuoteSysID' VARCHAR(42) NOT NULL, 'ForQuoteTime' VARCHAR(18) NOT NULL, 'ActionDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcForQuoteRspFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcForQuoteRspField';";
const std::string CThostFtdcForQuoteRspFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcForQuoteRspField' VALUES (";

const std::string CThostFtdcStrikeOffsetFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcStrikeOffsetField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'Offset' DOUBLE NOT NULL, 'OffsetType' VARCHAR(1) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcStrikeOffsetFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcStrikeOffsetField';";
const std::string CThostFtdcStrikeOffsetFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcStrikeOffsetField' VALUES (";

const std::string CThostFtdcQryStrikeOffsetFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryStrikeOffsetField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryStrikeOffsetFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryStrikeOffsetField';";
const std::string CThostFtdcQryStrikeOffsetFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryStrikeOffsetField' VALUES (";

const std::string CThostFtdcInputBatchOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputBatchOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OrderActionRef' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputBatchOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputBatchOrderActionField';";
const std::string CThostFtdcInputBatchOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputBatchOrderActionField' VALUES (";

const std::string CThostFtdcBatchOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBatchOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OrderActionRef' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcBatchOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBatchOrderActionField';";
const std::string CThostFtdcBatchOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBatchOrderActionField' VALUES (";

const std::string CThostFtdcExchangeBatchOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeBatchOrderActionField'('ExchangeID' VARCHAR(18) NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"UserID\"));";
const std::string CThostFtdcExchangeBatchOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeBatchOrderActionField';";
const std::string CThostFtdcExchangeBatchOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeBatchOrderActionField' VALUES (";

const std::string CThostFtdcQryBatchOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryBatchOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryBatchOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryBatchOrderActionField';";
const std::string CThostFtdcQryBatchOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryBatchOrderActionField' VALUES (";

const std::string CThostFtdcCombInstrumentGuardFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCombInstrumentGuardField'('BrokerID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'GuarantRatio' DOUBLE NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcCombInstrumentGuardFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCombInstrumentGuardField';";
const std::string CThostFtdcCombInstrumentGuardFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCombInstrumentGuardField' VALUES (";

const std::string CThostFtdcQryCombInstrumentGuardFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryCombInstrumentGuardField'('BrokerID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryCombInstrumentGuardFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryCombInstrumentGuardField';";
const std::string CThostFtdcQryCombInstrumentGuardFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryCombInstrumentGuardField' VALUES (";

const std::string CThostFtdcInputCombActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputCombActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'CombActionRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'Volume' INTEGER NOT NULL, 'CombDirection' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputCombActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputCombActionField';";
const std::string CThostFtdcInputCombActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputCombActionField' VALUES (";

const std::string CThostFtdcCombActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCombActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'CombActionRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'Volume' INTEGER NOT NULL, 'CombDirection' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'ActionStatus' VARCHAR(1) NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'reserve3' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ComTradeID' VARCHAR(42) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcCombActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCombActionField';";
const std::string CThostFtdcCombActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCombActionField' VALUES (";

const std::string CThostFtdcQryCombActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryCombActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryCombActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryCombActionField';";
const std::string CThostFtdcQryCombActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryCombActionField' VALUES (";

const std::string CThostFtdcExchangeCombActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeCombActionField'('Direction' VARCHAR(1) NOT NULL, 'Volume' INTEGER NOT NULL, 'CombDirection' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'ActionStatus' VARCHAR(1) NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ComTradeID' VARCHAR(42) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcExchangeCombActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeCombActionField';";
const std::string CThostFtdcExchangeCombActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeCombActionField' VALUES (";

const std::string CThostFtdcQryExchangeCombActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeCombActionField'('ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryExchangeCombActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeCombActionField';";
const std::string CThostFtdcQryExchangeCombActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeCombActionField' VALUES (";

const std::string CThostFtdcProductExchRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcProductExchRateField'('reserve1' VARCHAR(62) NOT NULL, 'QuoteCurrencyID' VARCHAR(8) NOT NULL, 'ExchangeRate' DOUBLE NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcProductExchRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcProductExchRateField';";
const std::string CThostFtdcProductExchRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcProductExchRateField' VALUES (";

const std::string CThostFtdcQryProductExchRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryProductExchRateField'('reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryProductExchRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryProductExchRateField';";
const std::string CThostFtdcQryProductExchRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryProductExchRateField' VALUES (";

const std::string CThostFtdcQryForQuoteParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryForQuoteParamField'('BrokerID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryForQuoteParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryForQuoteParamField';";
const std::string CThostFtdcQryForQuoteParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryForQuoteParamField' VALUES (";

const std::string CThostFtdcForQuoteParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcForQuoteParamField'('BrokerID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'LastPrice' DOUBLE NOT NULL, 'PriceInterval' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcForQuoteParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcForQuoteParamField';";
const std::string CThostFtdcForQuoteParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcForQuoteParamField' VALUES (";

const std::string CThostFtdcMMOptionInstrCommRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMMOptionInstrCommRateField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OpenRatioByMoney' DOUBLE NOT NULL, 'OpenRatioByVolume' DOUBLE NOT NULL, 'CloseRatioByMoney' DOUBLE NOT NULL, 'CloseRatioByVolume' DOUBLE NOT NULL, 'CloseTodayRatioByMoney' DOUBLE NOT NULL, 'CloseTodayRatioByVolume' DOUBLE NOT NULL, 'StrikeRatioByMoney' DOUBLE NOT NULL, 'StrikeRatioByVolume' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcMMOptionInstrCommRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMMOptionInstrCommRateField';";
const std::string CThostFtdcMMOptionInstrCommRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMMOptionInstrCommRateField' VALUES (";

const std::string CThostFtdcQryMMOptionInstrCommRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryMMOptionInstrCommRateField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryMMOptionInstrCommRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryMMOptionInstrCommRateField';";
const std::string CThostFtdcQryMMOptionInstrCommRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryMMOptionInstrCommRateField' VALUES (";

const std::string CThostFtdcMMInstrumentCommissionRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMMInstrumentCommissionRateField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OpenRatioByMoney' DOUBLE NOT NULL, 'OpenRatioByVolume' DOUBLE NOT NULL, 'CloseRatioByMoney' DOUBLE NOT NULL, 'CloseRatioByVolume' DOUBLE NOT NULL, 'CloseTodayRatioByMoney' DOUBLE NOT NULL, 'CloseTodayRatioByVolume' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcMMInstrumentCommissionRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMMInstrumentCommissionRateField';";
const std::string CThostFtdcMMInstrumentCommissionRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMMInstrumentCommissionRateField' VALUES (";

const std::string CThostFtdcQryMMInstrumentCommissionRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryMMInstrumentCommissionRateField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryMMInstrumentCommissionRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryMMInstrumentCommissionRateField';";
const std::string CThostFtdcQryMMInstrumentCommissionRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryMMInstrumentCommissionRateField' VALUES (";

const std::string CThostFtdcInstrumentOrderCommRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInstrumentOrderCommRateField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'OrderCommByVolume' DOUBLE NOT NULL, 'OrderActionCommByVolume' DOUBLE NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'OrderCommByTrade' DOUBLE NOT NULL, 'OrderActionCommByTrade' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInstrumentOrderCommRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInstrumentOrderCommRateField';";
const std::string CThostFtdcInstrumentOrderCommRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInstrumentOrderCommRateField' VALUES (";

const std::string CThostFtdcQryInstrumentOrderCommRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInstrumentOrderCommRateField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInstrumentOrderCommRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInstrumentOrderCommRateField';";
const std::string CThostFtdcQryInstrumentOrderCommRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInstrumentOrderCommRateField' VALUES (";

const std::string CThostFtdcTradeParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradeParamField'('BrokerID' VARCHAR(22) NOT NULL, 'TradeParamID' VARCHAR(1) NOT NULL, 'TradeParamValue' VARCHAR(512) NOT NULL, 'Memo' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcTradeParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradeParamField';";
const std::string CThostFtdcTradeParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradeParamField' VALUES (";

const std::string CThostFtdcInstrumentMarginRateULFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInstrumentMarginRateULField'('reserve1' VARCHAR(62) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'LongMarginRatioByMoney' DOUBLE NOT NULL, 'LongMarginRatioByVolume' DOUBLE NOT NULL, 'ShortMarginRatioByMoney' DOUBLE NOT NULL, 'ShortMarginRatioByVolume' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInstrumentMarginRateULFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInstrumentMarginRateULField';";
const std::string CThostFtdcInstrumentMarginRateULFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInstrumentMarginRateULField' VALUES (";

const std::string CThostFtdcFutureLimitPosiParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcFutureLimitPosiParamField'('InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'SpecOpenVolume' INTEGER NOT NULL, 'ArbiOpenVolume' INTEGER NOT NULL, 'OpenVolume' INTEGER NOT NULL, 'ProductID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcFutureLimitPosiParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcFutureLimitPosiParamField';";
const std::string CThostFtdcFutureLimitPosiParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcFutureLimitPosiParamField' VALUES (";

const std::string CThostFtdcLoginForbiddenIPFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcLoginForbiddenIPField'('reserve1' VARCHAR(32) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcLoginForbiddenIPFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcLoginForbiddenIPField';";
const std::string CThostFtdcLoginForbiddenIPFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcLoginForbiddenIPField' VALUES (";

const std::string CThostFtdcIPListFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcIPListField'('reserve1' VARCHAR(32) NOT NULL, 'IsWhite' INTEGER NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcIPListFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcIPListField';";
const std::string CThostFtdcIPListFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcIPListField' VALUES (";

const std::string CThostFtdcInputOptionSelfCloseFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputOptionSelfCloseField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'OptionSelfCloseRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Volume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'OptSelfCloseFlag' VARCHAR(1) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputOptionSelfCloseFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputOptionSelfCloseField';";
const std::string CThostFtdcInputOptionSelfCloseFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputOptionSelfCloseField' VALUES (";

const std::string CThostFtdcInputOptionSelfCloseActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInputOptionSelfCloseActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OptionSelfCloseActionRef' INTEGER NOT NULL, 'OptionSelfCloseRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'OptionSelfCloseSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInputOptionSelfCloseActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInputOptionSelfCloseActionField';";
const std::string CThostFtdcInputOptionSelfCloseActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInputOptionSelfCloseActionField' VALUES (";

const std::string CThostFtdcOptionSelfCloseFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOptionSelfCloseField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'OptionSelfCloseRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Volume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'OptSelfCloseFlag' VARCHAR(1) NOT NULL, 'OptionSelfCloseLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderSubmitStatus' VARCHAR(1) NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'OptionSelfCloseSysID' VARCHAR(42) NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'CancelTime' VARCHAR(18) NOT NULL, 'ExecResult' VARCHAR(1) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'ActiveUserID' VARCHAR(32) NOT NULL, 'BrokerOptionSelfCloseSeq' INTEGER NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'reserve3' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcOptionSelfCloseFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOptionSelfCloseField';";
const std::string CThostFtdcOptionSelfCloseFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOptionSelfCloseField' VALUES (";

const std::string CThostFtdcOptionSelfCloseActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOptionSelfCloseActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OptionSelfCloseActionRef' INTEGER NOT NULL, 'OptionSelfCloseRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'OptionSelfCloseSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OptionSelfCloseLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcOptionSelfCloseActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOptionSelfCloseActionField';";
const std::string CThostFtdcOptionSelfCloseActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOptionSelfCloseActionField' VALUES (";

const std::string CThostFtdcQryOptionSelfCloseFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryOptionSelfCloseField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'OptionSelfCloseSysID' VARCHAR(42) NOT NULL, 'InsertTimeStart' VARCHAR(18) NOT NULL, 'InsertTimeEnd' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryOptionSelfCloseFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryOptionSelfCloseField';";
const std::string CThostFtdcQryOptionSelfCloseFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryOptionSelfCloseField' VALUES (";

const std::string CThostFtdcExchangeOptionSelfCloseFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeOptionSelfCloseField'('Volume' INTEGER NOT NULL, 'RequestID' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'OptSelfCloseFlag' VARCHAR(1) NOT NULL, 'OptionSelfCloseLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderSubmitStatus' VARCHAR(1) NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'OptionSelfCloseSysID' VARCHAR(42) NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'CancelTime' VARCHAR(18) NOT NULL, 'ExecResult' VARCHAR(1) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcExchangeOptionSelfCloseFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeOptionSelfCloseField';";
const std::string CThostFtdcExchangeOptionSelfCloseFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeOptionSelfCloseField' VALUES (";

const std::string CThostFtdcQryOptionSelfCloseActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryOptionSelfCloseActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryOptionSelfCloseActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryOptionSelfCloseActionField';";
const std::string CThostFtdcQryOptionSelfCloseActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryOptionSelfCloseActionField' VALUES (";

const std::string CThostFtdcExchangeOptionSelfCloseActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeOptionSelfCloseActionField'('ExchangeID' VARCHAR(18) NOT NULL, 'OptionSelfCloseSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OptionSelfCloseLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'OptSelfCloseFlag' VARCHAR(1) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"UserID\"));";
const std::string CThostFtdcExchangeOptionSelfCloseActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeOptionSelfCloseActionField';";
const std::string CThostFtdcExchangeOptionSelfCloseActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeOptionSelfCloseActionField' VALUES (";

const std::string CThostFtdcSyncDelaySwapFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDelaySwapField'('DelaySwapSeqNo' VARCHAR(30) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'FromCurrencyID' VARCHAR(8) NOT NULL, 'FromAmount' DOUBLE NOT NULL, 'FromFrozenSwap' DOUBLE NOT NULL, 'FromRemainSwap' DOUBLE NOT NULL, 'ToCurrencyID' VARCHAR(8) NOT NULL, 'ToAmount' DOUBLE NOT NULL, 'IsManualSwap' INTEGER NOT NULL, 'IsAllRemainSetZero' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDelaySwapFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDelaySwapField';";
const std::string CThostFtdcSyncDelaySwapFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDelaySwapField' VALUES (";

const std::string CThostFtdcQrySyncDelaySwapFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySyncDelaySwapField'('BrokerID' VARCHAR(22) NOT NULL, 'DelaySwapSeqNo' VARCHAR(30) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQrySyncDelaySwapFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySyncDelaySwapField';";
const std::string CThostFtdcQrySyncDelaySwapFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySyncDelaySwapField' VALUES (";

const std::string CThostFtdcInvestUnitFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestUnitField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InvestorUnitName' VARCHAR(162) NOT NULL, 'InvestorGroupID' VARCHAR(26) NOT NULL, 'CommModelID' VARCHAR(26) NOT NULL, 'MarginModelID' VARCHAR(26) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestUnitFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestUnitField';";
const std::string CThostFtdcInvestUnitFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestUnitField' VALUES (";

const std::string CThostFtdcQryInvestUnitFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestUnitField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestUnitFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestUnitField';";
const std::string CThostFtdcQryInvestUnitFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestUnitField' VALUES (";

const std::string CThostFtdcSecAgentCheckModeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSecAgentCheckModeField'('InvestorID' VARCHAR(26) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'BrokerSecAgentID' VARCHAR(26) NOT NULL, 'CheckSelfAccount' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSecAgentCheckModeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSecAgentCheckModeField';";
const std::string CThostFtdcSecAgentCheckModeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSecAgentCheckModeField' VALUES (";

const std::string CThostFtdcSecAgentTradeInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSecAgentTradeInfoField'('BrokerID' VARCHAR(22) NOT NULL, 'BrokerSecAgentID' VARCHAR(26) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSecAgentTradeInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSecAgentTradeInfoField';";
const std::string CThostFtdcSecAgentTradeInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSecAgentTradeInfoField' VALUES (";

const std::string CThostFtdcMarketDataFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataField'('TradingDay' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'LastPrice' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'PreClosePrice' DOUBLE NOT NULL, 'PreOpenInterest' DOUBLE NOT NULL, 'OpenPrice' DOUBLE NOT NULL, 'HighestPrice' DOUBLE NOT NULL, 'LowestPrice' DOUBLE NOT NULL, 'Volume' INTEGER NOT NULL, 'Turnover' DOUBLE NOT NULL, 'OpenInterest' DOUBLE NOT NULL, 'ClosePrice' DOUBLE NOT NULL, 'SettlementPrice' DOUBLE NOT NULL, 'UpperLimitPrice' DOUBLE NOT NULL, 'LowerLimitPrice' DOUBLE NOT NULL, 'PreDelta' DOUBLE NOT NULL, 'CurrDelta' DOUBLE NOT NULL, 'UpdateTime' VARCHAR(18) NOT NULL, 'UpdateMillisec' INTEGER NOT NULL, 'ActionDay' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcMarketDataFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataField';";
const std::string CThostFtdcMarketDataFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataField' VALUES (";

const std::string CThostFtdcMarketDataBaseFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataBaseField'('TradingDay' VARCHAR(18) NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'PreClosePrice' DOUBLE NOT NULL, 'PreOpenInterest' DOUBLE NOT NULL, 'PreDelta' DOUBLE NOT NULL);";
const std::string CThostFtdcMarketDataBaseFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataBaseField';";
const std::string CThostFtdcMarketDataBaseFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataBaseField' VALUES (";

const std::string CThostFtdcMarketDataStaticFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataStaticField'('OpenPrice' DOUBLE NOT NULL, 'HighestPrice' DOUBLE NOT NULL, 'LowestPrice' DOUBLE NOT NULL, 'ClosePrice' DOUBLE NOT NULL, 'UpperLimitPrice' DOUBLE NOT NULL, 'LowerLimitPrice' DOUBLE NOT NULL, 'SettlementPrice' DOUBLE NOT NULL, 'CurrDelta' DOUBLE NOT NULL);";
const std::string CThostFtdcMarketDataStaticFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataStaticField';";
const std::string CThostFtdcMarketDataStaticFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataStaticField' VALUES (";

const std::string CThostFtdcMarketDataLastMatchFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataLastMatchField'('LastPrice' DOUBLE NOT NULL, 'Volume' INTEGER NOT NULL, 'Turnover' DOUBLE NOT NULL, 'OpenInterest' DOUBLE NOT NULL);";
const std::string CThostFtdcMarketDataLastMatchFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataLastMatchField';";
const std::string CThostFtdcMarketDataLastMatchFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataLastMatchField' VALUES (";

const std::string CThostFtdcMarketDataBestPriceFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataBestPriceField'('BidPrice1' DOUBLE NOT NULL, 'BidVolume1' INTEGER NOT NULL, 'AskPrice1' DOUBLE NOT NULL, 'AskVolume1' INTEGER NOT NULL);";
const std::string CThostFtdcMarketDataBestPriceFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataBestPriceField';";
const std::string CThostFtdcMarketDataBestPriceFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataBestPriceField' VALUES (";

const std::string CThostFtdcMarketDataBid23FieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataBid23Field'('BidPrice2' DOUBLE NOT NULL, 'BidVolume2' INTEGER NOT NULL, 'BidPrice3' DOUBLE NOT NULL, 'BidVolume3' INTEGER NOT NULL);";
const std::string CThostFtdcMarketDataBid23FieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataBid23Field';";
const std::string CThostFtdcMarketDataBid23FieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataBid23Field' VALUES (";

const std::string CThostFtdcMarketDataAsk23FieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataAsk23Field'('AskPrice2' DOUBLE NOT NULL, 'AskVolume2' INTEGER NOT NULL, 'AskPrice3' DOUBLE NOT NULL, 'AskVolume3' INTEGER NOT NULL);";
const std::string CThostFtdcMarketDataAsk23FieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataAsk23Field';";
const std::string CThostFtdcMarketDataAsk23FieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataAsk23Field' VALUES (";

const std::string CThostFtdcMarketDataBid45FieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataBid45Field'('BidPrice4' DOUBLE NOT NULL, 'BidVolume4' INTEGER NOT NULL, 'BidPrice5' DOUBLE NOT NULL, 'BidVolume5' INTEGER NOT NULL);";
const std::string CThostFtdcMarketDataBid45FieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataBid45Field';";
const std::string CThostFtdcMarketDataBid45FieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataBid45Field' VALUES (";

const std::string CThostFtdcMarketDataAsk45FieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataAsk45Field'('AskPrice4' DOUBLE NOT NULL, 'AskVolume4' INTEGER NOT NULL, 'AskPrice5' DOUBLE NOT NULL, 'AskVolume5' INTEGER NOT NULL);";
const std::string CThostFtdcMarketDataAsk45FieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataAsk45Field';";
const std::string CThostFtdcMarketDataAsk45FieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataAsk45Field' VALUES (";

const std::string CThostFtdcMarketDataUpdateTimeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataUpdateTimeField'('reserve1' VARCHAR(62) NOT NULL, 'UpdateTime' VARCHAR(18) NOT NULL, 'UpdateMillisec' INTEGER NOT NULL, 'ActionDay' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcMarketDataUpdateTimeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataUpdateTimeField';";
const std::string CThostFtdcMarketDataUpdateTimeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataUpdateTimeField' VALUES (";

const std::string CThostFtdcMarketDataBandingPriceFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataBandingPriceField'('BandingUpperPrice' DOUBLE NOT NULL, 'BandingLowerPrice' DOUBLE NOT NULL);";
const std::string CThostFtdcMarketDataBandingPriceFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataBandingPriceField';";
const std::string CThostFtdcMarketDataBandingPriceFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataBandingPriceField' VALUES (";

const std::string CThostFtdcMarketDataExchangeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataExchangeField'('ExchangeID' VARCHAR(18) NOT NULL);";
const std::string CThostFtdcMarketDataExchangeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataExchangeField';";
const std::string CThostFtdcMarketDataExchangeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataExchangeField' VALUES (";

const std::string CThostFtdcSpecificInstrumentFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSpecificInstrumentField'('reserve1' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcSpecificInstrumentFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSpecificInstrumentField';";
const std::string CThostFtdcSpecificInstrumentFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSpecificInstrumentField' VALUES (";

const std::string CThostFtdcInstrumentStatusFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInstrumentStatusField'('ExchangeID' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'SettlementGroupID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'InstrumentStatus' VARCHAR(1) NOT NULL, 'TradingSegmentSN' INTEGER NOT NULL, 'EnterTime' VARCHAR(18) NOT NULL, 'EnterReason' VARCHAR(1) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcInstrumentStatusFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInstrumentStatusField';";
const std::string CThostFtdcInstrumentStatusFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInstrumentStatusField' VALUES (";

const std::string CThostFtdcQryInstrumentStatusFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInstrumentStatusField'('ExchangeID' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryInstrumentStatusFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInstrumentStatusField';";
const std::string CThostFtdcQryInstrumentStatusFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInstrumentStatusField' VALUES (";

const std::string CThostFtdcInvestorAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorAccountField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorAccountField';";
const std::string CThostFtdcInvestorAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorAccountField' VALUES (";

const std::string CThostFtdcPositionProfitAlgorithmFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcPositionProfitAlgorithmField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Algorithm' VARCHAR(1) NOT NULL, 'Memo' VARCHAR(322) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcPositionProfitAlgorithmFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcPositionProfitAlgorithmField';";
const std::string CThostFtdcPositionProfitAlgorithmFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcPositionProfitAlgorithmField' VALUES (";

const std::string CThostFtdcDiscountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcDiscountField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'Discount' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcDiscountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcDiscountField';";
const std::string CThostFtdcDiscountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcDiscountField' VALUES (";

const std::string CThostFtdcQryTransferBankFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryTransferBankField'('BankID' VARCHAR(8) NOT NULL, 'BankBrchID' VARCHAR(10) NOT NULL);";
const std::string CThostFtdcQryTransferBankFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryTransferBankField';";
const std::string CThostFtdcQryTransferBankFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryTransferBankField' VALUES (";

const std::string CThostFtdcTransferBankFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferBankField'('BankID' VARCHAR(8) NOT NULL, 'BankBrchID' VARCHAR(10) NOT NULL, 'BankName' VARCHAR(202) NOT NULL, 'IsActive' INTEGER NOT NULL);";
const std::string CThostFtdcTransferBankFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferBankField';";
const std::string CThostFtdcTransferBankFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferBankField' VALUES (";

const std::string CThostFtdcQryInvestorPositionDetailFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorPositionDetailField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorPositionDetailFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorPositionDetailField';";
const std::string CThostFtdcQryInvestorPositionDetailFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorPositionDetailField' VALUES (";

const std::string CThostFtdcInvestorPositionDetailFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorPositionDetailField'('reserve1' VARCHAR(62) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'OpenDate' VARCHAR(18) NOT NULL, 'TradeID' VARCHAR(42) NOT NULL, 'Volume' INTEGER NOT NULL, 'OpenPrice' DOUBLE NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'TradeType' VARCHAR(1) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'CloseProfitByDate' DOUBLE NOT NULL, 'CloseProfitByTrade' DOUBLE NOT NULL, 'PositionProfitByDate' DOUBLE NOT NULL, 'PositionProfitByTrade' DOUBLE NOT NULL, 'Margin' DOUBLE NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'MarginRateByMoney' DOUBLE NOT NULL, 'MarginRateByVolume' DOUBLE NOT NULL, 'LastSettlementPrice' DOUBLE NOT NULL, 'SettlementPrice' DOUBLE NOT NULL, 'CloseVolume' INTEGER NOT NULL, 'CloseAmount' DOUBLE NOT NULL, 'TimeFirstVolume' INTEGER NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'SpecPosiType' VARCHAR(1) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'CombInstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\",\"HedgeFlag\",\"OpenDate\",\"TradeID\",\"InstrumentID\",\"Direction\",\"TradeType\"));";
const std::string CThostFtdcInvestorPositionDetailFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorPositionDetailField';";
const std::string CThostFtdcInvestorPositionDetailFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorPositionDetailField' VALUES (";

const std::string CThostFtdcTradingAccountPasswordFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradingAccountPasswordField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcTradingAccountPasswordFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradingAccountPasswordField';";
const std::string CThostFtdcTradingAccountPasswordFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradingAccountPasswordField' VALUES (";

const std::string CThostFtdcMDTraderOfferFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMDTraderOfferField'('ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'TraderConnectStatus' VARCHAR(1) NOT NULL, 'ConnectRequestDate' VARCHAR(18) NOT NULL, 'ConnectRequestTime' VARCHAR(18) NOT NULL, 'LastReportDate' VARCHAR(18) NOT NULL, 'LastReportTime' VARCHAR(18) NOT NULL, 'ConnectDate' VARCHAR(18) NOT NULL, 'ConnectTime' VARCHAR(18) NOT NULL, 'StartDate' VARCHAR(18) NOT NULL, 'StartTime' VARCHAR(18) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'MaxTradeID' VARCHAR(42) NOT NULL, 'MaxOrderMessageReference' VARCHAR(14) NOT NULL, 'OrderCancelAlg' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcMDTraderOfferFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMDTraderOfferField';";
const std::string CThostFtdcMDTraderOfferFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMDTraderOfferField' VALUES (";

const std::string CThostFtdcQryMDTraderOfferFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryMDTraderOfferField'('ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL);";
const std::string CThostFtdcQryMDTraderOfferFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryMDTraderOfferField';";
const std::string CThostFtdcQryMDTraderOfferFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryMDTraderOfferField' VALUES (";

const std::string CThostFtdcQryNoticeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryNoticeField'('BrokerID' VARCHAR(22) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryNoticeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryNoticeField';";
const std::string CThostFtdcQryNoticeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryNoticeField' VALUES (";

const std::string CThostFtdcNoticeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcNoticeField'('BrokerID' VARCHAR(22) NOT NULL, 'Content' VARCHAR(1002) NOT NULL, 'SequenceLabel' VARCHAR(4) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcNoticeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcNoticeField';";
const std::string CThostFtdcNoticeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcNoticeField' VALUES (";

const std::string CThostFtdcUserRightFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcUserRightField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'UserRightType' VARCHAR(1) NOT NULL, 'IsForbidden' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcUserRightFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcUserRightField';";
const std::string CThostFtdcUserRightFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcUserRightField' VALUES (";

const std::string CThostFtdcQrySettlementInfoConfirmFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySettlementInfoConfirmField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQrySettlementInfoConfirmFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySettlementInfoConfirmField';";
const std::string CThostFtdcQrySettlementInfoConfirmFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySettlementInfoConfirmField' VALUES (";

const std::string CThostFtdcLoadSettlementInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcLoadSettlementInfoField'('BrokerID' VARCHAR(22) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcLoadSettlementInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcLoadSettlementInfoField';";
const std::string CThostFtdcLoadSettlementInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcLoadSettlementInfoField' VALUES (";

const std::string CThostFtdcBrokerWithdrawAlgorithmFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerWithdrawAlgorithmField'('BrokerID' VARCHAR(22) NOT NULL, 'WithdrawAlgorithm' VARCHAR(1) NOT NULL, 'UsingRatio' DOUBLE NOT NULL, 'IncludeCloseProfit' VARCHAR(1) NOT NULL, 'AllWithoutTrade' VARCHAR(1) NOT NULL, 'AvailIncludeCloseProfit' VARCHAR(1) NOT NULL, 'IsBrokerUserEvent' INTEGER NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'FundMortgageRatio' DOUBLE NOT NULL, 'BalanceAlgorithm' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcBrokerWithdrawAlgorithmFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerWithdrawAlgorithmField';";
const std::string CThostFtdcBrokerWithdrawAlgorithmFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerWithdrawAlgorithmField' VALUES (";

const std::string CThostFtdcTradingAccountPasswordUpdateV1FieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradingAccountPasswordUpdateV1Field'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OldPassword' VARCHAR(82) NOT NULL, 'NewPassword' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcTradingAccountPasswordUpdateV1FieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradingAccountPasswordUpdateV1Field';";
const std::string CThostFtdcTradingAccountPasswordUpdateV1FieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradingAccountPasswordUpdateV1Field' VALUES (";

const std::string CThostFtdcTradingAccountPasswordUpdateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradingAccountPasswordUpdateField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'OldPassword' VARCHAR(82) NOT NULL, 'NewPassword' VARCHAR(82) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcTradingAccountPasswordUpdateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradingAccountPasswordUpdateField';";
const std::string CThostFtdcTradingAccountPasswordUpdateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradingAccountPasswordUpdateField' VALUES (";

const std::string CThostFtdcQryCombinationLegFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryCombinationLegField'('reserve1' VARCHAR(62) NOT NULL, 'LegID' INTEGER NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'CombInstrumentID' VARCHAR(162) NOT NULL, 'LegInstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryCombinationLegFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryCombinationLegField';";
const std::string CThostFtdcQryCombinationLegFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryCombinationLegField' VALUES (";

const std::string CThostFtdcQrySyncStatusFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySyncStatusField'('TradingDay' VARCHAR(18) NOT NULL);";
const std::string CThostFtdcQrySyncStatusFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySyncStatusField';";
const std::string CThostFtdcQrySyncStatusFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySyncStatusField' VALUES (";

const std::string CThostFtdcCombinationLegFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCombinationLegField'('reserve1' VARCHAR(62) NOT NULL, 'LegID' INTEGER NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'LegMultiple' INTEGER NOT NULL, 'ImplyLevel' INTEGER NOT NULL, 'CombInstrumentID' VARCHAR(162) NOT NULL, 'LegInstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcCombinationLegFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCombinationLegField';";
const std::string CThostFtdcCombinationLegFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCombinationLegField' VALUES (";

const std::string CThostFtdcSyncStatusFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncStatusField'('TradingDay' VARCHAR(18) NOT NULL, 'DataSyncStatus' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcSyncStatusFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncStatusField';";
const std::string CThostFtdcSyncStatusFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncStatusField' VALUES (";

const std::string CThostFtdcQryLinkManFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryLinkManField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryLinkManFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryLinkManField';";
const std::string CThostFtdcQryLinkManFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryLinkManField' VALUES (";

const std::string CThostFtdcLinkManFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcLinkManField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'PersonType' VARCHAR(1) NOT NULL, 'IdentifiedCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'PersonName' VARCHAR(162) NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'ZipCode' VARCHAR(14) NOT NULL, 'Priority' INTEGER NOT NULL, 'UOAZipCode' VARCHAR(22) NOT NULL, 'PersonFullName' VARCHAR(202) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcLinkManFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcLinkManField';";
const std::string CThostFtdcLinkManFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcLinkManField' VALUES (";

const std::string CThostFtdcQryBrokerUserEventFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryBrokerUserEventField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'UserEventType' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcQryBrokerUserEventFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryBrokerUserEventField';";
const std::string CThostFtdcQryBrokerUserEventFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryBrokerUserEventField' VALUES (";

const std::string CThostFtdcBrokerUserEventFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerUserEventField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'UserEventType' VARCHAR(1) NOT NULL, 'EventSequenceNo' INTEGER NOT NULL, 'EventDate' VARCHAR(18) NOT NULL, 'EventTime' VARCHAR(18) NOT NULL, 'UserEventInfo' VARCHAR(2050) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'DRIdentityID' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcBrokerUserEventFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerUserEventField';";
const std::string CThostFtdcBrokerUserEventFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerUserEventField' VALUES (";

const std::string CThostFtdcQryContractBankFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryContractBankField'('BrokerID' VARCHAR(22) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBrchID' VARCHAR(10) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryContractBankFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryContractBankField';";
const std::string CThostFtdcQryContractBankFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryContractBankField' VALUES (";

const std::string CThostFtdcContractBankFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcContractBankField'('BrokerID' VARCHAR(22) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBrchID' VARCHAR(10) NOT NULL, 'BankName' VARCHAR(202) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcContractBankFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcContractBankField';";
const std::string CThostFtdcContractBankFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcContractBankField' VALUES (";

const std::string CThostFtdcInvestorPositionCombineDetailFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorPositionCombineDetailField'('TradingDay' VARCHAR(18) NOT NULL, 'OpenDate' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ComTradeID' VARCHAR(42) NOT NULL, 'TradeID' VARCHAR(42) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'TotalAmt' INTEGER NOT NULL, 'Margin' DOUBLE NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'MarginRateByMoney' DOUBLE NOT NULL, 'MarginRateByVolume' DOUBLE NOT NULL, 'LegID' INTEGER NOT NULL, 'LegMultiple' INTEGER NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'TradeGroupID' INTEGER NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'CombInstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorPositionCombineDetailFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorPositionCombineDetailField';";
const std::string CThostFtdcInvestorPositionCombineDetailFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorPositionCombineDetailField' VALUES (";

const std::string CThostFtdcParkedOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcParkedOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'OrderPriceType' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'CombOffsetFlag' VARCHAR(10) NOT NULL, 'CombHedgeFlag' VARCHAR(10) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeTotalOriginal' INTEGER NOT NULL, 'TimeCondition' VARCHAR(1) NOT NULL, 'GTDDate' VARCHAR(18) NOT NULL, 'VolumeCondition' VARCHAR(1) NOT NULL, 'MinVolume' INTEGER NOT NULL, 'ContingentCondition' VARCHAR(1) NOT NULL, 'StopPrice' DOUBLE NOT NULL, 'ForceCloseReason' VARCHAR(1) NOT NULL, 'IsAutoSuspend' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'RequestID' INTEGER NOT NULL, 'UserForceClose' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParkedOrderID' VARCHAR(26) NOT NULL, 'UserType' VARCHAR(1) NOT NULL, 'Status' VARCHAR(1) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'IsSwapOrder' INTEGER NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcParkedOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcParkedOrderField';";
const std::string CThostFtdcParkedOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcParkedOrderField' VALUES (";

const std::string CThostFtdcParkedOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcParkedOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OrderActionRef' INTEGER NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeChange' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ParkedOrderActionID' VARCHAR(26) NOT NULL, 'UserType' VARCHAR(1) NOT NULL, 'Status' VARCHAR(1) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcParkedOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcParkedOrderActionField';";
const std::string CThostFtdcParkedOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcParkedOrderActionField' VALUES (";

const std::string CThostFtdcQryParkedOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryParkedOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryParkedOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryParkedOrderField';";
const std::string CThostFtdcQryParkedOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryParkedOrderField' VALUES (";

const std::string CThostFtdcQryParkedOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryParkedOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryParkedOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryParkedOrderActionField';";
const std::string CThostFtdcQryParkedOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryParkedOrderActionField' VALUES (";

const std::string CThostFtdcRemoveParkedOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRemoveParkedOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ParkedOrderID' VARCHAR(26) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcRemoveParkedOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRemoveParkedOrderField';";
const std::string CThostFtdcRemoveParkedOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRemoveParkedOrderField' VALUES (";

const std::string CThostFtdcRemoveParkedOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRemoveParkedOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ParkedOrderActionID' VARCHAR(26) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcRemoveParkedOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRemoveParkedOrderActionField';";
const std::string CThostFtdcRemoveParkedOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRemoveParkedOrderActionField' VALUES (";

const std::string CThostFtdcInvestorWithdrawAlgorithmFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorWithdrawAlgorithmField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'UsingRatio' DOUBLE NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'FundMortgageRatio' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorWithdrawAlgorithmFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorWithdrawAlgorithmField';";
const std::string CThostFtdcInvestorWithdrawAlgorithmFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorWithdrawAlgorithmField' VALUES (";

const std::string CThostFtdcQryInvestorPositionCombineDetailFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorPositionCombineDetailField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'CombInstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorPositionCombineDetailFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorPositionCombineDetailField';";
const std::string CThostFtdcQryInvestorPositionCombineDetailFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorPositionCombineDetailField' VALUES (";

const std::string CThostFtdcMarketDataAveragePriceFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarketDataAveragePriceField'('AveragePrice' DOUBLE NOT NULL);";
const std::string CThostFtdcMarketDataAveragePriceFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarketDataAveragePriceField';";
const std::string CThostFtdcMarketDataAveragePriceFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarketDataAveragePriceField' VALUES (";

const std::string CThostFtdcVerifyInvestorPasswordFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcVerifyInvestorPasswordField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcVerifyInvestorPasswordFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcVerifyInvestorPasswordField';";
const std::string CThostFtdcVerifyInvestorPasswordFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcVerifyInvestorPasswordField' VALUES (";

const std::string CThostFtdcUserIPFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcUserIPField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, 'IPMask' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcUserIPFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcUserIPField';";
const std::string CThostFtdcUserIPFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcUserIPField' VALUES (";

const std::string CThostFtdcTradingNoticeInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradingNoticeInfoField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'SendTime' VARCHAR(18) NOT NULL, 'FieldContent' VARCHAR(1002) NOT NULL, 'SequenceSeries' INTEGER NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcTradingNoticeInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradingNoticeInfoField';";
const std::string CThostFtdcTradingNoticeInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradingNoticeInfoField' VALUES (";

const std::string CThostFtdcTradingNoticeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradingNoticeField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'SequenceSeries' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'SendTime' VARCHAR(18) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'FieldContent' VARCHAR(1002) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcTradingNoticeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradingNoticeField';";
const std::string CThostFtdcTradingNoticeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradingNoticeField' VALUES (";

const std::string CThostFtdcQryTradingNoticeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryTradingNoticeField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryTradingNoticeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryTradingNoticeField';";
const std::string CThostFtdcQryTradingNoticeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryTradingNoticeField' VALUES (";

const std::string CThostFtdcQryErrOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryErrOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryErrOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryErrOrderField';";
const std::string CThostFtdcQryErrOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryErrOrderField' VALUES (";

const std::string CThostFtdcErrOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcErrOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'OrderPriceType' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'CombOffsetFlag' VARCHAR(10) NOT NULL, 'CombHedgeFlag' VARCHAR(10) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeTotalOriginal' INTEGER NOT NULL, 'TimeCondition' VARCHAR(1) NOT NULL, 'GTDDate' VARCHAR(18) NOT NULL, 'VolumeCondition' VARCHAR(1) NOT NULL, 'MinVolume' INTEGER NOT NULL, 'ContingentCondition' VARCHAR(1) NOT NULL, 'StopPrice' DOUBLE NOT NULL, 'ForceCloseReason' VARCHAR(1) NOT NULL, 'IsAutoSuspend' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'RequestID' INTEGER NOT NULL, 'UserForceClose' INTEGER NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'IsSwapOrder' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcErrOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcErrOrderField';";
const std::string CThostFtdcErrOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcErrOrderField' VALUES (";

const std::string CThostFtdcErrorConditionalOrderFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcErrorConditionalOrderField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'OrderPriceType' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'CombOffsetFlag' VARCHAR(10) NOT NULL, 'CombHedgeFlag' VARCHAR(10) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeTotalOriginal' INTEGER NOT NULL, 'TimeCondition' VARCHAR(1) NOT NULL, 'GTDDate' VARCHAR(18) NOT NULL, 'VolumeCondition' VARCHAR(1) NOT NULL, 'MinVolume' INTEGER NOT NULL, 'ContingentCondition' VARCHAR(1) NOT NULL, 'StopPrice' DOUBLE NOT NULL, 'ForceCloseReason' VARCHAR(1) NOT NULL, 'IsAutoSuspend' INTEGER NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'RequestID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderSubmitStatus' VARCHAR(1) NOT NULL, 'NotifySequence' INTEGER NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'OrderSource' VARCHAR(1) NOT NULL, 'OrderStatus' VARCHAR(1) NOT NULL, 'OrderType' VARCHAR(1) NOT NULL, 'VolumeTraded' INTEGER NOT NULL, 'VolumeTotal' INTEGER NOT NULL, 'InsertDate' VARCHAR(18) NOT NULL, 'InsertTime' VARCHAR(18) NOT NULL, 'ActiveTime' VARCHAR(18) NOT NULL, 'SuspendTime' VARCHAR(18) NOT NULL, 'UpdateTime' VARCHAR(18) NOT NULL, 'CancelTime' VARCHAR(18) NOT NULL, 'ActiveTraderID' VARCHAR(42) NOT NULL, 'ClearingPartID' VARCHAR(22) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'UserForceClose' INTEGER NOT NULL, 'ActiveUserID' VARCHAR(32) NOT NULL, 'BrokerOrderSeq' INTEGER NOT NULL, 'RelativeOrderSysID' VARCHAR(42) NOT NULL, 'ZCETotalTradedVolume' INTEGER NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'IsSwapOrder' INTEGER NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'reserve3' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcErrorConditionalOrderFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcErrorConditionalOrderField';";
const std::string CThostFtdcErrorConditionalOrderFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcErrorConditionalOrderField' VALUES (";

const std::string CThostFtdcQryErrOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryErrOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryErrOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryErrOrderActionField';";
const std::string CThostFtdcQryErrOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryErrOrderActionField' VALUES (";

const std::string CThostFtdcErrOrderActionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcErrOrderActionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OrderActionRef' INTEGER NOT NULL, 'OrderRef' VARCHAR(26) NOT NULL, 'RequestID' INTEGER NOT NULL, 'FrontID' INTEGER NOT NULL, 'SessionID' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'OrderSysID' VARCHAR(42) NOT NULL, 'ActionFlag' VARCHAR(1) NOT NULL, 'LimitPrice' DOUBLE NOT NULL, 'VolumeChange' INTEGER NOT NULL, 'ActionDate' VARCHAR(18) NOT NULL, 'ActionTime' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'InstallID' INTEGER NOT NULL, 'OrderLocalID' VARCHAR(26) NOT NULL, 'ActionLocalID' VARCHAR(26) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ClientID' VARCHAR(22) NOT NULL, 'BusinessUnit' VARCHAR(42) NOT NULL, 'OrderActionStatus' VARCHAR(1) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'StatusMsg' VARCHAR(162) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'BranchID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'reserve2' VARCHAR(32) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcErrOrderActionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcErrOrderActionField';";
const std::string CThostFtdcErrOrderActionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcErrOrderActionField' VALUES (";

const std::string CThostFtdcQryExchangeSequenceFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryExchangeSequenceField'('ExchangeID' VARCHAR(18) NOT NULL);";
const std::string CThostFtdcQryExchangeSequenceFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryExchangeSequenceField';";
const std::string CThostFtdcQryExchangeSequenceFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryExchangeSequenceField' VALUES (";

const std::string CThostFtdcExchangeSequenceFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcExchangeSequenceField'('ExchangeID' VARCHAR(18) NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'MarketStatus' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcExchangeSequenceFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcExchangeSequenceField';";
const std::string CThostFtdcExchangeSequenceFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcExchangeSequenceField' VALUES (";

const std::string CThostFtdcQryMaxOrderVolumeWithPriceFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryMaxOrderVolumeWithPriceField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'OffsetFlag' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'MaxVolume' INTEGER NOT NULL, 'Price' DOUBLE NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryMaxOrderVolumeWithPriceFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryMaxOrderVolumeWithPriceField';";
const std::string CThostFtdcQryMaxOrderVolumeWithPriceFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryMaxOrderVolumeWithPriceField' VALUES (";

const std::string CThostFtdcQryBrokerTradingParamsFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryBrokerTradingParamsField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryBrokerTradingParamsFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryBrokerTradingParamsField';";
const std::string CThostFtdcQryBrokerTradingParamsFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryBrokerTradingParamsField' VALUES (";

const std::string CThostFtdcBrokerTradingParamsFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerTradingParamsField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'MarginPriceType' VARCHAR(1) NOT NULL, 'Algorithm' VARCHAR(1) NOT NULL, 'AvailIncludeCloseProfit' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'OptionRoyaltyPriceType' VARCHAR(1) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcBrokerTradingParamsFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerTradingParamsField';";
const std::string CThostFtdcBrokerTradingParamsFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerTradingParamsField' VALUES (";

const std::string CThostFtdcQryBrokerTradingAlgosFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryBrokerTradingAlgosField'('BrokerID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryBrokerTradingAlgosFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryBrokerTradingAlgosField';";
const std::string CThostFtdcQryBrokerTradingAlgosFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryBrokerTradingAlgosField' VALUES (";

const std::string CThostFtdcBrokerTradingAlgosFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerTradingAlgosField'('BrokerID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HandlePositionAlgoID' VARCHAR(1) NOT NULL, 'FindMarginRateAlgoID' VARCHAR(1) NOT NULL, 'HandleTradingAccountAlgoID' VARCHAR(1) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcBrokerTradingAlgosFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerTradingAlgosField';";
const std::string CThostFtdcBrokerTradingAlgosFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerTradingAlgosField' VALUES (";

const std::string CThostFtdcQueryBrokerDepositFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQueryBrokerDepositField'('BrokerID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQueryBrokerDepositFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQueryBrokerDepositField';";
const std::string CThostFtdcQueryBrokerDepositFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQueryBrokerDepositField' VALUES (";

const std::string CThostFtdcBrokerDepositFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerDepositField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'PreBalance' DOUBLE NOT NULL, 'CurrMargin' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'Balance' DOUBLE NOT NULL, 'Deposit' DOUBLE NOT NULL, 'Withdraw' DOUBLE NOT NULL, 'Available' DOUBLE NOT NULL, 'Reserve' DOUBLE NOT NULL, 'FrozenMargin' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcBrokerDepositFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerDepositField';";
const std::string CThostFtdcBrokerDepositFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerDepositField' VALUES (";

const std::string CThostFtdcQryCFMMCBrokerKeyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryCFMMCBrokerKeyField'('BrokerID' VARCHAR(22) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryCFMMCBrokerKeyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryCFMMCBrokerKeyField';";
const std::string CThostFtdcQryCFMMCBrokerKeyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryCFMMCBrokerKeyField' VALUES (";

const std::string CThostFtdcCFMMCBrokerKeyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCFMMCBrokerKeyField'('BrokerID' VARCHAR(22) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'CreateDate' VARCHAR(18) NOT NULL, 'CreateTime' VARCHAR(18) NOT NULL, 'KeyID' INTEGER NOT NULL, 'CurrentKey' VARCHAR(42) NOT NULL, 'KeyKind' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcCFMMCBrokerKeyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCFMMCBrokerKeyField';";
const std::string CThostFtdcCFMMCBrokerKeyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCFMMCBrokerKeyField' VALUES (";

const std::string CThostFtdcCFMMCTradingAccountKeyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCFMMCTradingAccountKeyField'('BrokerID' VARCHAR(22) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'KeyID' INTEGER NOT NULL, 'CurrentKey' VARCHAR(42) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcCFMMCTradingAccountKeyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCFMMCTradingAccountKeyField';";
const std::string CThostFtdcCFMMCTradingAccountKeyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCFMMCTradingAccountKeyField' VALUES (";

const std::string CThostFtdcQryCFMMCTradingAccountKeyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryCFMMCTradingAccountKeyField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryCFMMCTradingAccountKeyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryCFMMCTradingAccountKeyField';";
const std::string CThostFtdcQryCFMMCTradingAccountKeyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryCFMMCTradingAccountKeyField' VALUES (";

const std::string CThostFtdcBrokerUserOTPParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerUserOTPParamField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'OTPVendorsID' VARCHAR(4) NOT NULL, 'SerialNumber' VARCHAR(34) NOT NULL, 'AuthKey' VARCHAR(82) NOT NULL, 'LastDrift' INTEGER NOT NULL, 'LastSuccess' INTEGER NOT NULL, 'OTPType' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcBrokerUserOTPParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerUserOTPParamField';";
const std::string CThostFtdcBrokerUserOTPParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerUserOTPParamField' VALUES (";

const std::string CThostFtdcManualSyncBrokerUserOTPFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcManualSyncBrokerUserOTPField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'OTPType' VARCHAR(1) NOT NULL, 'FirstOTP' VARCHAR(82) NOT NULL, 'SecondOTP' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcManualSyncBrokerUserOTPFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcManualSyncBrokerUserOTPField';";
const std::string CThostFtdcManualSyncBrokerUserOTPFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcManualSyncBrokerUserOTPField' VALUES (";

const std::string CThostFtdcCommRateModelFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCommRateModelField'('BrokerID' VARCHAR(22) NOT NULL, 'CommModelID' VARCHAR(26) NOT NULL, 'CommModelName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcCommRateModelFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCommRateModelField';";
const std::string CThostFtdcCommRateModelFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCommRateModelField' VALUES (";

const std::string CThostFtdcQryCommRateModelFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryCommRateModelField'('BrokerID' VARCHAR(22) NOT NULL, 'CommModelID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryCommRateModelFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryCommRateModelField';";
const std::string CThostFtdcQryCommRateModelFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryCommRateModelField' VALUES (";

const std::string CThostFtdcMarginModelFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMarginModelField'('BrokerID' VARCHAR(22) NOT NULL, 'MarginModelID' VARCHAR(26) NOT NULL, 'MarginModelName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcMarginModelFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMarginModelField';";
const std::string CThostFtdcMarginModelFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMarginModelField' VALUES (";

const std::string CThostFtdcQryMarginModelFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryMarginModelField'('BrokerID' VARCHAR(22) NOT NULL, 'MarginModelID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQryMarginModelFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryMarginModelField';";
const std::string CThostFtdcQryMarginModelFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryMarginModelField' VALUES (";

const std::string CThostFtdcEWarrantOffsetFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcEWarrantOffsetField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'Volume' INTEGER NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcEWarrantOffsetFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcEWarrantOffsetField';";
const std::string CThostFtdcEWarrantOffsetFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcEWarrantOffsetField' VALUES (";

const std::string CThostFtdcQryEWarrantOffsetFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryEWarrantOffsetField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryEWarrantOffsetFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryEWarrantOffsetField';";
const std::string CThostFtdcQryEWarrantOffsetFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryEWarrantOffsetField' VALUES (";

const std::string CThostFtdcQryInvestorProductGroupMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorProductGroupMarginField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'ProductGroupID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorProductGroupMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorProductGroupMarginField';";
const std::string CThostFtdcQryInvestorProductGroupMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorProductGroupMarginField' VALUES (";

const std::string CThostFtdcInvestorProductGroupMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorProductGroupMarginField'('reserve1' VARCHAR(62) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'FrozenMargin' DOUBLE NOT NULL, 'LongFrozenMargin' DOUBLE NOT NULL, 'ShortFrozenMargin' DOUBLE NOT NULL, 'UseMargin' DOUBLE NOT NULL, 'LongUseMargin' DOUBLE NOT NULL, 'ShortUseMargin' DOUBLE NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'LongExchMargin' DOUBLE NOT NULL, 'ShortExchMargin' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'FrozenCommission' DOUBLE NOT NULL, 'Commission' DOUBLE NOT NULL, 'FrozenCash' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, 'PositionProfit' DOUBLE NOT NULL, 'OffsetAmount' DOUBLE NOT NULL, 'LongOffsetAmount' DOUBLE NOT NULL, 'ShortOffsetAmount' DOUBLE NOT NULL, 'ExchOffsetAmount' DOUBLE NOT NULL, 'LongExchOffsetAmount' DOUBLE NOT NULL, 'ShortExchOffsetAmount' DOUBLE NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'ProductGroupID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorProductGroupMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorProductGroupMarginField';";
const std::string CThostFtdcInvestorProductGroupMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorProductGroupMarginField' VALUES (";

const std::string CThostFtdcQueryCFMMCTradingAccountTokenFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQueryCFMMCTradingAccountTokenField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQueryCFMMCTradingAccountTokenFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQueryCFMMCTradingAccountTokenField';";
const std::string CThostFtdcQueryCFMMCTradingAccountTokenFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQueryCFMMCTradingAccountTokenField' VALUES (";

const std::string CThostFtdcCFMMCTradingAccountTokenFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCFMMCTradingAccountTokenField'('BrokerID' VARCHAR(22) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'KeyID' INTEGER NOT NULL, 'Token' VARCHAR(42) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcCFMMCTradingAccountTokenFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCFMMCTradingAccountTokenField';";
const std::string CThostFtdcCFMMCTradingAccountTokenFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCFMMCTradingAccountTokenField' VALUES (";

const std::string CThostFtdcQryProductGroupFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryProductGroupField'('reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryProductGroupFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryProductGroupField';";
const std::string CThostFtdcQryProductGroupFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryProductGroupField' VALUES (";

const std::string CThostFtdcProductGroupFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcProductGroupField'('reserve1' VARCHAR(62) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'reserve2' VARCHAR(62) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL, 'ProductGroupID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcProductGroupFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcProductGroupField';";
const std::string CThostFtdcProductGroupFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcProductGroupField' VALUES (";

const std::string CThostFtdcBulletinFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBulletinField'('ExchangeID' VARCHAR(18) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'BulletinID' INTEGER NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'NewsType' VARCHAR(6) NOT NULL, 'NewsUrgency' VARCHAR(1) NOT NULL, 'SendTime' VARCHAR(18) NOT NULL, 'Abstract' VARCHAR(162) NOT NULL, 'ComeFrom' VARCHAR(42) NOT NULL, 'Content' VARCHAR(1002) NOT NULL, 'URLLink' VARCHAR(402) NOT NULL, 'MarketID' VARCHAR(62) NOT NULL);";
const std::string CThostFtdcBulletinFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBulletinField';";
const std::string CThostFtdcBulletinFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBulletinField' VALUES (";

const std::string CThostFtdcQryBulletinFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryBulletinField'('ExchangeID' VARCHAR(18) NOT NULL, 'BulletinID' INTEGER NOT NULL, 'SequenceNo' INTEGER NOT NULL, 'NewsType' VARCHAR(6) NOT NULL, 'NewsUrgency' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcQryBulletinFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryBulletinField';";
const std::string CThostFtdcQryBulletinFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryBulletinField' VALUES (";

const std::string CThostFtdcMulticastInstrumentFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMulticastInstrumentField'('TopicID' INTEGER NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InstrumentNo' INTEGER NOT NULL, 'CodePrice' DOUBLE NOT NULL, 'VolumeMultiple' INTEGER NOT NULL, 'PriceTick' DOUBLE NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcMulticastInstrumentFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMulticastInstrumentField';";
const std::string CThostFtdcMulticastInstrumentFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMulticastInstrumentField' VALUES (";

const std::string CThostFtdcQryMulticastInstrumentFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryMulticastInstrumentField'('TopicID' INTEGER NOT NULL, 'reserve1' VARCHAR(62) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryMulticastInstrumentFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryMulticastInstrumentField';";
const std::string CThostFtdcQryMulticastInstrumentFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryMulticastInstrumentField' VALUES (";

const std::string CThostFtdcAppIDAuthAssignFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcAppIDAuthAssignField'('BrokerID' VARCHAR(22) NOT NULL, 'AppID' VARCHAR(66) NOT NULL, 'DRIdentityID' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcAppIDAuthAssignFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcAppIDAuthAssignField';";
const std::string CThostFtdcAppIDAuthAssignFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcAppIDAuthAssignField' VALUES (";

const std::string CThostFtdcReqOpenAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqOpenAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'Gender' VARCHAR(1) NOT NULL, 'CountryCode' VARCHAR(42) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'ZipCode' VARCHAR(14) NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'MobilePhone' VARCHAR(42) NOT NULL, 'Fax' VARCHAR(82) NOT NULL, 'EMail' VARCHAR(82) NOT NULL, 'MoneyAccountStatus' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'CashExchangeCode' VARCHAR(1) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'TID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcReqOpenAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqOpenAccountField';";
const std::string CThostFtdcReqOpenAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqOpenAccountField' VALUES (";

const std::string CThostFtdcReqCancelAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqCancelAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'Gender' VARCHAR(1) NOT NULL, 'CountryCode' VARCHAR(42) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'ZipCode' VARCHAR(14) NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'MobilePhone' VARCHAR(42) NOT NULL, 'Fax' VARCHAR(82) NOT NULL, 'EMail' VARCHAR(82) NOT NULL, 'MoneyAccountStatus' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'CashExchangeCode' VARCHAR(1) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'TID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcReqCancelAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqCancelAccountField';";
const std::string CThostFtdcReqCancelAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqCancelAccountField' VALUES (";

const std::string CThostFtdcReqChangeAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqChangeAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'Gender' VARCHAR(1) NOT NULL, 'CountryCode' VARCHAR(42) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'ZipCode' VARCHAR(14) NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'MobilePhone' VARCHAR(42) NOT NULL, 'Fax' VARCHAR(82) NOT NULL, 'EMail' VARCHAR(82) NOT NULL, 'MoneyAccountStatus' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'NewBankAccount' VARCHAR(82) NOT NULL, 'NewBankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'InstallID' INTEGER NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'TID' INTEGER NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcReqChangeAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqChangeAccountField';";
const std::string CThostFtdcReqChangeAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqChangeAccountField' VALUES (";

const std::string CThostFtdcReqTransferFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqTransferField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'FutureSerial' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'TradeAmount' DOUBLE NOT NULL, 'FutureFetchAmount' DOUBLE NOT NULL, 'FeePayFlag' VARCHAR(1) NOT NULL, 'CustFee' DOUBLE NOT NULL, 'BrokerFee' DOUBLE NOT NULL, 'Message' VARCHAR(258) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'TransferStatus' VARCHAR(1) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcReqTransferFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqTransferField';";
const std::string CThostFtdcReqTransferFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqTransferField' VALUES (";

const std::string CThostFtdcRspTransferFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspTransferField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'FutureSerial' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'TradeAmount' DOUBLE NOT NULL, 'FutureFetchAmount' DOUBLE NOT NULL, 'FeePayFlag' VARCHAR(1) NOT NULL, 'CustFee' DOUBLE NOT NULL, 'BrokerFee' DOUBLE NOT NULL, 'Message' VARCHAR(258) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'TransferStatus' VARCHAR(1) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcRspTransferFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspTransferField';";
const std::string CThostFtdcRspTransferFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspTransferField' VALUES (";

const std::string CThostFtdcReqRepealFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqRepealField'('RepealTimeInterval' INTEGER NOT NULL, 'RepealedTimes' INTEGER NOT NULL, 'BankRepealFlag' VARCHAR(1) NOT NULL, 'BrokerRepealFlag' VARCHAR(1) NOT NULL, 'PlateRepealSerial' INTEGER NOT NULL, 'BankRepealSerial' VARCHAR(26) NOT NULL, 'FutureRepealSerial' INTEGER NOT NULL, 'TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'FutureSerial' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'TradeAmount' DOUBLE NOT NULL, 'FutureFetchAmount' DOUBLE NOT NULL, 'FeePayFlag' VARCHAR(1) NOT NULL, 'CustFee' DOUBLE NOT NULL, 'BrokerFee' DOUBLE NOT NULL, 'Message' VARCHAR(258) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'TransferStatus' VARCHAR(1) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcReqRepealFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqRepealField';";
const std::string CThostFtdcReqRepealFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqRepealField' VALUES (";

const std::string CThostFtdcRspRepealFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspRepealField'('RepealTimeInterval' INTEGER NOT NULL, 'RepealedTimes' INTEGER NOT NULL, 'BankRepealFlag' VARCHAR(1) NOT NULL, 'BrokerRepealFlag' VARCHAR(1) NOT NULL, 'PlateRepealSerial' INTEGER NOT NULL, 'BankRepealSerial' VARCHAR(26) NOT NULL, 'FutureRepealSerial' INTEGER NOT NULL, 'TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'FutureSerial' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'TradeAmount' DOUBLE NOT NULL, 'FutureFetchAmount' DOUBLE NOT NULL, 'FeePayFlag' VARCHAR(1) NOT NULL, 'CustFee' DOUBLE NOT NULL, 'BrokerFee' DOUBLE NOT NULL, 'Message' VARCHAR(258) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'TransferStatus' VARCHAR(1) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcRspRepealFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspRepealField';";
const std::string CThostFtdcRspRepealFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspRepealField' VALUES (";

const std::string CThostFtdcReqQueryAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqQueryAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'FutureSerial' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcReqQueryAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqQueryAccountField';";
const std::string CThostFtdcReqQueryAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqQueryAccountField' VALUES (";

const std::string CThostFtdcRspQueryAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspQueryAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'FutureSerial' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'BankUseAmount' DOUBLE NOT NULL, 'BankFetchAmount' DOUBLE NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcRspQueryAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspQueryAccountField';";
const std::string CThostFtdcRspQueryAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspQueryAccountField' VALUES (";

const std::string CThostFtdcFutureSignIOFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcFutureSignIOField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcFutureSignIOFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcFutureSignIOField';";
const std::string CThostFtdcFutureSignIOFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcFutureSignIOField' VALUES (";

const std::string CThostFtdcRspFutureSignInFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspFutureSignInField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'PinKey' VARCHAR(258) NOT NULL, 'MacKey' VARCHAR(258) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcRspFutureSignInFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspFutureSignInField';";
const std::string CThostFtdcRspFutureSignInFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspFutureSignInField' VALUES (";

const std::string CThostFtdcReqFutureSignOutFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqFutureSignOutField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqFutureSignOutFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqFutureSignOutField';";
const std::string CThostFtdcReqFutureSignOutFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqFutureSignOutField' VALUES (";

const std::string CThostFtdcRspFutureSignOutFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspFutureSignOutField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcRspFutureSignOutFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspFutureSignOutField';";
const std::string CThostFtdcRspFutureSignOutFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspFutureSignOutField' VALUES (";

const std::string CThostFtdcReqQueryTradeResultBySerialFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqQueryTradeResultBySerialField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'Reference' INTEGER NOT NULL, 'RefrenceIssureType' VARCHAR(1) NOT NULL, 'RefrenceIssure' VARCHAR(72) NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'TradeAmount' DOUBLE NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcReqQueryTradeResultBySerialFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqQueryTradeResultBySerialField';";
const std::string CThostFtdcReqQueryTradeResultBySerialFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqQueryTradeResultBySerialField' VALUES (";

const std::string CThostFtdcRspQueryTradeResultBySerialFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspQueryTradeResultBySerialField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'Reference' INTEGER NOT NULL, 'RefrenceIssureType' VARCHAR(1) NOT NULL, 'RefrenceIssure' VARCHAR(72) NOT NULL, 'OriginReturnCode' VARCHAR(14) NOT NULL, 'OriginDescrInfoForReturnCode' VARCHAR(258) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'TradeAmount' DOUBLE NOT NULL, 'Digest' VARCHAR(72) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcRspQueryTradeResultBySerialFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspQueryTradeResultBySerialField';";
const std::string CThostFtdcRspQueryTradeResultBySerialFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspQueryTradeResultBySerialField' VALUES (";

const std::string CThostFtdcReqDayEndFileReadyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqDayEndFileReadyField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'FileBusinessCode' VARCHAR(1) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcReqDayEndFileReadyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqDayEndFileReadyField';";
const std::string CThostFtdcReqDayEndFileReadyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqDayEndFileReadyField' VALUES (";

const std::string CThostFtdcReturnResultFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReturnResultField'('ReturnCode' VARCHAR(14) NOT NULL, 'DescrInfoForReturnCode' VARCHAR(258) NOT NULL);";
const std::string CThostFtdcReturnResultFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReturnResultField';";
const std::string CThostFtdcReturnResultFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReturnResultField' VALUES (";

const std::string CThostFtdcVerifyFuturePasswordFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcVerifyFuturePasswordField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcVerifyFuturePasswordFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcVerifyFuturePasswordField';";
const std::string CThostFtdcVerifyFuturePasswordFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcVerifyFuturePasswordField' VALUES (";

const std::string CThostFtdcVerifyCustInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcVerifyCustInfoField'('CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL);";
const std::string CThostFtdcVerifyCustInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcVerifyCustInfoField';";
const std::string CThostFtdcVerifyCustInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcVerifyCustInfoField' VALUES (";

const std::string CThostFtdcVerifyFuturePasswordAndCustInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcVerifyFuturePasswordAndCustInfoField'('CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"AccountID\"));";
const std::string CThostFtdcVerifyFuturePasswordAndCustInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcVerifyFuturePasswordAndCustInfoField';";
const std::string CThostFtdcVerifyFuturePasswordAndCustInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcVerifyFuturePasswordAndCustInfoField' VALUES (";

const std::string CThostFtdcDepositResultInformFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcDepositResultInformField'('DepositSeqNo' VARCHAR(30) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'Deposit' DOUBLE NOT NULL, 'RequestID' INTEGER NOT NULL, 'ReturnCode' VARCHAR(14) NOT NULL, 'DescrInfoForReturnCode' VARCHAR(258) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcDepositResultInformFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcDepositResultInformField';";
const std::string CThostFtdcDepositResultInformFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcDepositResultInformField' VALUES (";

const std::string CThostFtdcReqSyncKeyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqSyncKeyField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Message' VARCHAR(258) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqSyncKeyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqSyncKeyField';";
const std::string CThostFtdcReqSyncKeyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqSyncKeyField' VALUES (";

const std::string CThostFtdcRspSyncKeyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspSyncKeyField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Message' VARCHAR(258) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcRspSyncKeyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspSyncKeyField';";
const std::string CThostFtdcRspSyncKeyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspSyncKeyField' VALUES (";

const std::string CThostFtdcNotifyQueryAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcNotifyQueryAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'FutureSerial' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'BankUseAmount' DOUBLE NOT NULL, 'BankFetchAmount' DOUBLE NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcNotifyQueryAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcNotifyQueryAccountField';";
const std::string CThostFtdcNotifyQueryAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcNotifyQueryAccountField' VALUES (";

const std::string CThostFtdcTransferSerialFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTransferSerialField'('PlateSerial' INTEGER NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'TradeCode' VARCHAR(14) NOT NULL, 'SessionID' INTEGER NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'FutureAccType' VARCHAR(1) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'FutureSerial' INTEGER NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'TradeAmount' DOUBLE NOT NULL, 'CustFee' DOUBLE NOT NULL, 'BrokerFee' DOUBLE NOT NULL, 'AvailabilityFlag' VARCHAR(1) NOT NULL, 'OperatorCode' VARCHAR(34) NOT NULL, 'BankNewAccount' VARCHAR(82) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcTransferSerialFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTransferSerialField';";
const std::string CThostFtdcTransferSerialFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTransferSerialField' VALUES (";

const std::string CThostFtdcQryTransferSerialFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryTransferSerialField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcQryTransferSerialFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryTransferSerialField';";
const std::string CThostFtdcQryTransferSerialFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryTransferSerialField' VALUES (";

const std::string CThostFtdcNotifyFutureSignInFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcNotifyFutureSignInField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'PinKey' VARCHAR(258) NOT NULL, 'MacKey' VARCHAR(258) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcNotifyFutureSignInFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcNotifyFutureSignInField';";
const std::string CThostFtdcNotifyFutureSignInFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcNotifyFutureSignInField' VALUES (";

const std::string CThostFtdcNotifyFutureSignOutFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcNotifyFutureSignOutField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcNotifyFutureSignOutFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcNotifyFutureSignOutField';";
const std::string CThostFtdcNotifyFutureSignOutFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcNotifyFutureSignOutField' VALUES (";

const std::string CThostFtdcNotifySyncKeyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcNotifySyncKeyField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'InstallID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Message' VARCHAR(258) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'RequestID' INTEGER NOT NULL, 'TID' INTEGER NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcNotifySyncKeyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcNotifySyncKeyField';";
const std::string CThostFtdcNotifySyncKeyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcNotifySyncKeyField' VALUES (";

const std::string CThostFtdcQryAccountregisterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryAccountregisterField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcQryAccountregisterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryAccountregisterField';";
const std::string CThostFtdcQryAccountregisterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryAccountregisterField' VALUES (";

const std::string CThostFtdcAccountregisterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcAccountregisterField'('TradeDay' VARCHAR(18) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'OpenOrDestroy' VARCHAR(1) NOT NULL, 'RegDate' VARCHAR(18) NOT NULL, 'OutDate' VARCHAR(18) NOT NULL, 'TID' INTEGER NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcAccountregisterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcAccountregisterField';";
const std::string CThostFtdcAccountregisterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcAccountregisterField' VALUES (";

const std::string CThostFtdcOpenAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcOpenAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'Gender' VARCHAR(1) NOT NULL, 'CountryCode' VARCHAR(42) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'ZipCode' VARCHAR(14) NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'MobilePhone' VARCHAR(42) NOT NULL, 'Fax' VARCHAR(82) NOT NULL, 'EMail' VARCHAR(82) NOT NULL, 'MoneyAccountStatus' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'CashExchangeCode' VARCHAR(1) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'TID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcOpenAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcOpenAccountField';";
const std::string CThostFtdcOpenAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcOpenAccountField' VALUES (";

const std::string CThostFtdcCancelAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCancelAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'Gender' VARCHAR(1) NOT NULL, 'CountryCode' VARCHAR(42) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'ZipCode' VARCHAR(14) NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'MobilePhone' VARCHAR(42) NOT NULL, 'Fax' VARCHAR(82) NOT NULL, 'EMail' VARCHAR(82) NOT NULL, 'MoneyAccountStatus' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'CashExchangeCode' VARCHAR(1) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'DeviceID' VARCHAR(6) NOT NULL, 'BankSecuAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankSecuAcc' VARCHAR(82) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'OperNo' VARCHAR(34) NOT NULL, 'TID' INTEGER NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcCancelAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCancelAccountField';";
const std::string CThostFtdcCancelAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCancelAccountField' VALUES (";

const std::string CThostFtdcChangeAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcChangeAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(102) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'Gender' VARCHAR(1) NOT NULL, 'CountryCode' VARCHAR(42) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'ZipCode' VARCHAR(14) NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'MobilePhone' VARCHAR(42) NOT NULL, 'Fax' VARCHAR(82) NOT NULL, 'EMail' VARCHAR(82) NOT NULL, 'MoneyAccountStatus' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'NewBankAccount' VARCHAR(82) NOT NULL, 'NewBankPassWord' VARCHAR(82) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'InstallID' INTEGER NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'BankPwdFlag' VARCHAR(1) NOT NULL, 'SecuPwdFlag' VARCHAR(1) NOT NULL, 'TID' INTEGER NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, 'LongCustomerName' VARCHAR(322) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcChangeAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcChangeAccountField';";
const std::string CThostFtdcChangeAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcChangeAccountField' VALUES (";

const std::string CThostFtdcSecAgentACIDMapFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSecAgentACIDMapField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'BrokerSecAgentID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcSecAgentACIDMapFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSecAgentACIDMapField';";
const std::string CThostFtdcSecAgentACIDMapFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSecAgentACIDMapField' VALUES (";

const std::string CThostFtdcQrySecAgentACIDMapFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySecAgentACIDMapField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcQrySecAgentACIDMapFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySecAgentACIDMapField';";
const std::string CThostFtdcQrySecAgentACIDMapFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySecAgentACIDMapField' VALUES (";

const std::string CThostFtdcUserRightsAssignFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcUserRightsAssignField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'DRIdentityID' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcUserRightsAssignFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcUserRightsAssignField';";
const std::string CThostFtdcUserRightsAssignFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcUserRightsAssignField' VALUES (";

const std::string CThostFtdcBrokerUserRightAssignFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcBrokerUserRightAssignField'('BrokerID' VARCHAR(22) NOT NULL, 'DRIdentityID' INTEGER NOT NULL, 'Tradeable' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcBrokerUserRightAssignFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcBrokerUserRightAssignField';";
const std::string CThostFtdcBrokerUserRightAssignFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcBrokerUserRightAssignField' VALUES (";

const std::string CThostFtdcDRTransferFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcDRTransferField'('OrigDRIdentityID' INTEGER NOT NULL, 'DestDRIdentityID' INTEGER NOT NULL, 'OrigBrokerID' VARCHAR(22) NOT NULL, 'DestBrokerID' VARCHAR(22) NOT NULL);";
const std::string CThostFtdcDRTransferFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcDRTransferField';";
const std::string CThostFtdcDRTransferFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcDRTransferField' VALUES (";

const std::string CThostFtdcFensUserInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcFensUserInfoField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'LoginMode' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcFensUserInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcFensUserInfoField';";
const std::string CThostFtdcFensUserInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcFensUserInfoField' VALUES (";

const std::string CThostFtdcCurrTransferIdentityFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCurrTransferIdentityField'('IdentityID' INTEGER NOT NULL);";
const std::string CThostFtdcCurrTransferIdentityFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCurrTransferIdentityField';";
const std::string CThostFtdcCurrTransferIdentityFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCurrTransferIdentityField' VALUES (";

const std::string CThostFtdcLoginForbiddenUserFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcLoginForbiddenUserField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcLoginForbiddenUserFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcLoginForbiddenUserField';";
const std::string CThostFtdcLoginForbiddenUserFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcLoginForbiddenUserField' VALUES (";

const std::string CThostFtdcQryLoginForbiddenUserFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryLoginForbiddenUserField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcQryLoginForbiddenUserFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryLoginForbiddenUserField';";
const std::string CThostFtdcQryLoginForbiddenUserFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryLoginForbiddenUserField' VALUES (";

const std::string CThostFtdcTradingAccountReserveFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTradingAccountReserveField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Reserve' DOUBLE NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcTradingAccountReserveFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTradingAccountReserveField';";
const std::string CThostFtdcTradingAccountReserveFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTradingAccountReserveField' VALUES (";

const std::string CThostFtdcQryLoginForbiddenIPFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryLoginForbiddenIPField'('reserve1' VARCHAR(32) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcQryLoginForbiddenIPFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryLoginForbiddenIPField';";
const std::string CThostFtdcQryLoginForbiddenIPFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryLoginForbiddenIPField' VALUES (";

const std::string CThostFtdcQryIPListFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryIPListField'('reserve1' VARCHAR(32) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcQryIPListFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryIPListField';";
const std::string CThostFtdcQryIPListFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryIPListField' VALUES (";

const std::string CThostFtdcQryUserRightsAssignFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryUserRightsAssignField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcQryUserRightsAssignFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryUserRightsAssignField';";
const std::string CThostFtdcQryUserRightsAssignFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryUserRightsAssignField' VALUES (";

const std::string CThostFtdcReserveOpenAccountConfirmFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReserveOpenAccountConfirmField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(322) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'Gender' VARCHAR(1) NOT NULL, 'CountryCode' VARCHAR(42) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'ZipCode' VARCHAR(14) NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'MobilePhone' VARCHAR(42) NOT NULL, 'Fax' VARCHAR(82) NOT NULL, 'EMail' VARCHAR(82) NOT NULL, 'MoneyAccountStatus' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'TID' INTEGER NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'BankReserveOpenSeq' VARCHAR(26) NOT NULL, 'BookDate' VARCHAR(18) NOT NULL, 'BookPsw' VARCHAR(82) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcReserveOpenAccountConfirmFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReserveOpenAccountConfirmField';";
const std::string CThostFtdcReserveOpenAccountConfirmFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReserveOpenAccountConfirmField' VALUES (";

const std::string CThostFtdcReserveOpenAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReserveOpenAccountField'('TradeCode' VARCHAR(14) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankBranchID' VARCHAR(10) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'BrokerBranchID' VARCHAR(62) NOT NULL, 'TradeDate' VARCHAR(18) NOT NULL, 'TradeTime' VARCHAR(18) NOT NULL, 'BankSerial' VARCHAR(26) NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'PlateSerial' INTEGER NOT NULL, 'LastFragment' VARCHAR(1) NOT NULL, 'SessionID' INTEGER NOT NULL, 'CustomerName' VARCHAR(322) NOT NULL, 'IdCardType' VARCHAR(1) NOT NULL, 'IdentifiedCardNo' VARCHAR(102) NOT NULL, 'Gender' VARCHAR(1) NOT NULL, 'CountryCode' VARCHAR(42) NOT NULL, 'CustType' VARCHAR(1) NOT NULL, 'Address' VARCHAR(202) NOT NULL, 'ZipCode' VARCHAR(14) NOT NULL, 'Telephone' VARCHAR(82) NOT NULL, 'MobilePhone' VARCHAR(42) NOT NULL, 'Fax' VARCHAR(82) NOT NULL, 'EMail' VARCHAR(82) NOT NULL, 'MoneyAccountStatus' VARCHAR(1) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'BankPassWord' VARCHAR(82) NOT NULL, 'InstallID' INTEGER NOT NULL, 'VerifyCertNoFlag' VARCHAR(1) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'Digest' VARCHAR(72) NOT NULL, 'BankAccType' VARCHAR(1) NOT NULL, 'BrokerIDByBank' VARCHAR(66) NOT NULL, 'TID' INTEGER NOT NULL, 'ReserveOpenAccStas' VARCHAR(1) NOT NULL, 'ErrorID' INTEGER NOT NULL, 'ErrorMsg' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcReserveOpenAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReserveOpenAccountField';";
const std::string CThostFtdcReserveOpenAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReserveOpenAccountField' VALUES (";

const std::string CThostFtdcAccountPropertyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcAccountPropertyField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'BankID' VARCHAR(8) NOT NULL, 'BankAccount' VARCHAR(82) NOT NULL, 'OpenName' VARCHAR(202) NOT NULL, 'OpenBank' VARCHAR(202) NOT NULL, 'IsActive' INTEGER NOT NULL, 'AccountSourceType' VARCHAR(1) NOT NULL, 'OpenDate' VARCHAR(18) NOT NULL, 'CancelDate' VARCHAR(18) NOT NULL, 'OperatorID' VARCHAR(130) NOT NULL, 'OperateDate' VARCHAR(18) NOT NULL, 'OperateTime' VARCHAR(18) NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcAccountPropertyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcAccountPropertyField';";
const std::string CThostFtdcAccountPropertyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcAccountPropertyField' VALUES (";

const std::string CThostFtdcQryCurrDRIdentityFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryCurrDRIdentityField'('DRIdentityID' INTEGER NOT NULL);";
const std::string CThostFtdcQryCurrDRIdentityFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryCurrDRIdentityField';";
const std::string CThostFtdcQryCurrDRIdentityFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryCurrDRIdentityField' VALUES (";

const std::string CThostFtdcCurrDRIdentityFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCurrDRIdentityField'('DRIdentityID' INTEGER NOT NULL);";
const std::string CThostFtdcCurrDRIdentityFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCurrDRIdentityField';";
const std::string CThostFtdcCurrDRIdentityFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCurrDRIdentityField' VALUES (";

const std::string CThostFtdcQrySecAgentCheckModeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySecAgentCheckModeField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQrySecAgentCheckModeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySecAgentCheckModeField';";
const std::string CThostFtdcQrySecAgentCheckModeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySecAgentCheckModeField' VALUES (";

const std::string CThostFtdcQrySecAgentTradeInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySecAgentTradeInfoField'('BrokerID' VARCHAR(22) NOT NULL, 'BrokerSecAgentID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcQrySecAgentTradeInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySecAgentTradeInfoField';";
const std::string CThostFtdcQrySecAgentTradeInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySecAgentTradeInfoField' VALUES (";

const std::string CThostFtdcReqUserAuthMethodFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqUserAuthMethodField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqUserAuthMethodFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqUserAuthMethodField';";
const std::string CThostFtdcReqUserAuthMethodFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqUserAuthMethodField' VALUES (";

const std::string CThostFtdcRspUserAuthMethodFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspUserAuthMethodField'('UsableAuthMethod' INTEGER NOT NULL);";
const std::string CThostFtdcRspUserAuthMethodFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspUserAuthMethodField';";
const std::string CThostFtdcRspUserAuthMethodFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspUserAuthMethodField' VALUES (";

const std::string CThostFtdcReqGenUserCaptchaFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqGenUserCaptchaField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqGenUserCaptchaFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqGenUserCaptchaField';";
const std::string CThostFtdcReqGenUserCaptchaFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqGenUserCaptchaField' VALUES (";

const std::string CThostFtdcRspGenUserCaptchaFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspGenUserCaptchaField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'CaptchaInfoLen' INTEGER NOT NULL, 'CaptchaInfo' VARCHAR(5122) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcRspGenUserCaptchaFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspGenUserCaptchaField';";
const std::string CThostFtdcRspGenUserCaptchaFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspGenUserCaptchaField' VALUES (";

const std::string CThostFtdcReqGenUserTextFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqGenUserTextField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqGenUserTextFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqGenUserTextField';";
const std::string CThostFtdcReqGenUserTextFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqGenUserTextField' VALUES (";

const std::string CThostFtdcRspGenUserTextFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspGenUserTextField'('UserTextSeq' INTEGER NOT NULL);";
const std::string CThostFtdcRspGenUserTextFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspGenUserTextField';";
const std::string CThostFtdcRspGenUserTextFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspGenUserTextField' VALUES (";

const std::string CThostFtdcReqUserLoginWithCaptchaFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqUserLoginWithCaptchaField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'InterfaceProductInfo' VARCHAR(22) NOT NULL, 'ProtocolInfo' VARCHAR(22) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'LoginRemark' VARCHAR(72) NOT NULL, 'Captcha' VARCHAR(82) NOT NULL, 'ClientIPPort' INTEGER NOT NULL, 'ClientIPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqUserLoginWithCaptchaFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqUserLoginWithCaptchaField';";
const std::string CThostFtdcReqUserLoginWithCaptchaFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqUserLoginWithCaptchaField' VALUES (";

const std::string CThostFtdcReqUserLoginWithTextFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqUserLoginWithTextField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'InterfaceProductInfo' VARCHAR(22) NOT NULL, 'ProtocolInfo' VARCHAR(22) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'LoginRemark' VARCHAR(72) NOT NULL, 'Text' VARCHAR(82) NOT NULL, 'ClientIPPort' INTEGER NOT NULL, 'ClientIPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqUserLoginWithTextFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqUserLoginWithTextField';";
const std::string CThostFtdcReqUserLoginWithTextFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqUserLoginWithTextField' VALUES (";

const std::string CThostFtdcReqUserLoginWithOTPFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqUserLoginWithOTPField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'InterfaceProductInfo' VARCHAR(22) NOT NULL, 'ProtocolInfo' VARCHAR(22) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'LoginRemark' VARCHAR(72) NOT NULL, 'OTPPassword' VARCHAR(82) NOT NULL, 'ClientIPPort' INTEGER NOT NULL, 'ClientIPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqUserLoginWithOTPFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqUserLoginWithOTPField';";
const std::string CThostFtdcReqUserLoginWithOTPFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqUserLoginWithOTPField' VALUES (";

const std::string CThostFtdcReqApiHandshakeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqApiHandshakeField'('CryptoKeyVersion' VARCHAR(62) NOT NULL);";
const std::string CThostFtdcReqApiHandshakeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqApiHandshakeField';";
const std::string CThostFtdcReqApiHandshakeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqApiHandshakeField' VALUES (";

const std::string CThostFtdcRspApiHandshakeFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRspApiHandshakeField'('FrontHandshakeDataLen' INTEGER NOT NULL, 'FrontHandshakeData' VARCHAR(602) NOT NULL, 'IsApiAuthEnabled' INTEGER NOT NULL);";
const std::string CThostFtdcRspApiHandshakeFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRspApiHandshakeField';";
const std::string CThostFtdcRspApiHandshakeFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRspApiHandshakeField' VALUES (";

const std::string CThostFtdcReqVerifyApiKeyFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqVerifyApiKeyField'('ApiHandshakeDataLen' INTEGER NOT NULL, 'ApiHandshakeData' VARCHAR(602) NOT NULL);";
const std::string CThostFtdcReqVerifyApiKeyFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqVerifyApiKeyField';";
const std::string CThostFtdcReqVerifyApiKeyFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqVerifyApiKeyField' VALUES (";

const std::string CThostFtdcDepartmentUserFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcDepartmentUserField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcDepartmentUserFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcDepartmentUserField';";
const std::string CThostFtdcDepartmentUserFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcDepartmentUserField' VALUES (";

const std::string CThostFtdcQueryFreqFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQueryFreqField'('QueryFreq' INTEGER NOT NULL);";
const std::string CThostFtdcQueryFreqFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQueryFreqField';";
const std::string CThostFtdcQueryFreqFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQueryFreqField' VALUES (";

const std::string CThostFtdcAuthForbiddenIPFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcAuthForbiddenIPField'('IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcAuthForbiddenIPFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcAuthForbiddenIPField';";
const std::string CThostFtdcAuthForbiddenIPFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcAuthForbiddenIPField' VALUES (";

const std::string CThostFtdcQryAuthForbiddenIPFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryAuthForbiddenIPField'('IPAddress' VARCHAR(66) NOT NULL);";
const std::string CThostFtdcQryAuthForbiddenIPFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryAuthForbiddenIPField';";
const std::string CThostFtdcQryAuthForbiddenIPFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryAuthForbiddenIPField' VALUES (";

const std::string CThostFtdcSyncDelaySwapFrozenFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDelaySwapFrozenField'('DelaySwapSeqNo' VARCHAR(30) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'FromCurrencyID' VARCHAR(8) NOT NULL, 'FromRemainSwap' DOUBLE NOT NULL, 'IsManualSwap' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDelaySwapFrozenFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDelaySwapFrozenField';";
const std::string CThostFtdcSyncDelaySwapFrozenFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDelaySwapFrozenField' VALUES (";

const std::string CThostFtdcUserSystemInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcUserSystemInfoField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'ClientSystemInfoLen' INTEGER NOT NULL, 'ClientSystemInfo' VARCHAR(546) NOT NULL, 'reserve1' VARCHAR(32) NOT NULL, 'ClientIPPort' INTEGER NOT NULL, 'ClientLoginTime' VARCHAR(18) NOT NULL, 'ClientAppID' VARCHAR(66) NOT NULL, 'ClientPublicIP' VARCHAR(66) NOT NULL, 'ClientLoginRemark' VARCHAR(302) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcUserSystemInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcUserSystemInfoField';";
const std::string CThostFtdcUserSystemInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcUserSystemInfoField' VALUES (";

const std::string CThostFtdcAuthUserIDFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcAuthUserIDField'('BrokerID' VARCHAR(22) NOT NULL, 'AppID' VARCHAR(66) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'AuthType' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcAuthUserIDFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcAuthUserIDField';";
const std::string CThostFtdcAuthUserIDFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcAuthUserIDField' VALUES (";

const std::string CThostFtdcAuthIPFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcAuthIPField'('BrokerID' VARCHAR(22) NOT NULL, 'AppID' VARCHAR(66) NOT NULL, 'IPAddress' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcAuthIPFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcAuthIPField';";
const std::string CThostFtdcAuthIPFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcAuthIPField' VALUES (";

const std::string CThostFtdcQryClassifiedInstrumentFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryClassifiedInstrumentField'('InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL, 'TradingType' VARCHAR(1) NOT NULL, 'ClassType' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcQryClassifiedInstrumentFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryClassifiedInstrumentField';";
const std::string CThostFtdcQryClassifiedInstrumentFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryClassifiedInstrumentField' VALUES (";

const std::string CThostFtdcQryCombPromotionParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryCombPromotionParamField'('ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryCombPromotionParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryCombPromotionParamField';";
const std::string CThostFtdcQryCombPromotionParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryCombPromotionParamField' VALUES (";

const std::string CThostFtdcCombPromotionParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcCombPromotionParamField'('ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'CombHedgeFlag' VARCHAR(10) NOT NULL, 'Xparameter' DOUBLE NOT NULL);";
const std::string CThostFtdcCombPromotionParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcCombPromotionParamField';";
const std::string CThostFtdcCombPromotionParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcCombPromotionParamField' VALUES (";

const std::string CThostFtdcReqUserLoginSCFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcReqUserLoginSCField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'Password' VARCHAR(82) NOT NULL, 'UserProductInfo' VARCHAR(22) NOT NULL, 'InterfaceProductInfo' VARCHAR(22) NOT NULL, 'ProtocolInfo' VARCHAR(22) NOT NULL, 'MacAddress' VARCHAR(42) NOT NULL, 'OneTimePassword' VARCHAR(82) NOT NULL, 'ClientIPAddress' VARCHAR(66) NOT NULL, 'LoginRemark' VARCHAR(72) NOT NULL, 'ClientIPPort' INTEGER NOT NULL, 'AuthCode' VARCHAR(34) NOT NULL, 'AppID' VARCHAR(66) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcReqUserLoginSCFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcReqUserLoginSCField';";
const std::string CThostFtdcReqUserLoginSCFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcReqUserLoginSCField' VALUES (";

const std::string CThostFtdcQryRiskSettleInvstPositionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRiskSettleInvstPositionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryRiskSettleInvstPositionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRiskSettleInvstPositionField';";
const std::string CThostFtdcQryRiskSettleInvstPositionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRiskSettleInvstPositionField' VALUES (";

const std::string CThostFtdcQryRiskSettleProductStatusFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRiskSettleProductStatusField'('ProductID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryRiskSettleProductStatusFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRiskSettleProductStatusField';";
const std::string CThostFtdcQryRiskSettleProductStatusFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRiskSettleProductStatusField' VALUES (";

const std::string CThostFtdcRiskSettleInvstPositionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRiskSettleInvstPositionField'('InstrumentID' VARCHAR(162) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'PosiDirection' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'PositionDate' VARCHAR(1) NOT NULL, 'YdPosition' INTEGER NOT NULL, 'Position' INTEGER NOT NULL, 'LongFrozen' INTEGER NOT NULL, 'ShortFrozen' INTEGER NOT NULL, 'LongFrozenAmount' DOUBLE NOT NULL, 'ShortFrozenAmount' DOUBLE NOT NULL, 'OpenVolume' INTEGER NOT NULL, 'CloseVolume' INTEGER NOT NULL, 'OpenAmount' DOUBLE NOT NULL, 'CloseAmount' DOUBLE NOT NULL, 'PositionCost' DOUBLE NOT NULL, 'PreMargin' DOUBLE NOT NULL, 'UseMargin' DOUBLE NOT NULL, 'FrozenMargin' DOUBLE NOT NULL, 'FrozenCash' DOUBLE NOT NULL, 'FrozenCommission' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, 'Commission' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'PositionProfit' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'SettlementPrice' DOUBLE NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'OpenCost' DOUBLE NOT NULL, 'ExchangeMargin' DOUBLE NOT NULL, 'CombPosition' INTEGER NOT NULL, 'CombLongFrozen' INTEGER NOT NULL, 'CombShortFrozen' INTEGER NOT NULL, 'CloseProfitByDate' DOUBLE NOT NULL, 'CloseProfitByTrade' DOUBLE NOT NULL, 'TodayPosition' INTEGER NOT NULL, 'MarginRateByMoney' DOUBLE NOT NULL, 'MarginRateByVolume' DOUBLE NOT NULL, 'StrikeFrozen' INTEGER NOT NULL, 'StrikeFrozenAmount' DOUBLE NOT NULL, 'AbandonFrozen' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'YdStrikeFrozen' INTEGER NOT NULL, 'InvestUnitID' VARCHAR(34) NOT NULL, 'PositionCostOffset' DOUBLE NOT NULL, 'TasPosition' INTEGER NOT NULL, 'TasPositionCost' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcRiskSettleInvstPositionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRiskSettleInvstPositionField';";
const std::string CThostFtdcRiskSettleInvstPositionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRiskSettleInvstPositionField' VALUES (";

const std::string CThostFtdcRiskSettleProductStatusFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRiskSettleProductStatusField'('ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL, 'ProductStatus' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcRiskSettleProductStatusFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRiskSettleProductStatusField';";
const std::string CThostFtdcRiskSettleProductStatusFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRiskSettleProductStatusField' VALUES (";

const std::string CThostFtdcSyncDeltaInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaInfoField'('SyncDeltaSequenceNo' INTEGER NOT NULL, 'SyncDeltaStatus' VARCHAR(1) NOT NULL, 'SyncDescription' VARCHAR(514) NOT NULL, 'IsOnlyTrdDelta' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaInfoField';";
const std::string CThostFtdcSyncDeltaInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaInfoField' VALUES (";

const std::string CThostFtdcSyncDeltaProductStatusFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaProductStatusField'('SyncDeltaSequenceNo' INTEGER NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL, 'ProductStatus' VARCHAR(1) NOT NULL);";
const std::string CThostFtdcSyncDeltaProductStatusFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaProductStatusField';";
const std::string CThostFtdcSyncDeltaProductStatusFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaProductStatusField' VALUES (";

const std::string CThostFtdcSyncDeltaInvstPosDtlFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaInvstPosDtlField'('InstrumentID' VARCHAR(162) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'OpenDate' VARCHAR(18) NOT NULL, 'TradeID' VARCHAR(42) NOT NULL, 'Volume' INTEGER NOT NULL, 'OpenPrice' DOUBLE NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'TradeType' VARCHAR(1) NOT NULL, 'CombInstrumentID' VARCHAR(162) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'CloseProfitByDate' DOUBLE NOT NULL, 'CloseProfitByTrade' DOUBLE NOT NULL, 'PositionProfitByDate' DOUBLE NOT NULL, 'PositionProfitByTrade' DOUBLE NOT NULL, 'Margin' DOUBLE NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'MarginRateByMoney' DOUBLE NOT NULL, 'MarginRateByVolume' DOUBLE NOT NULL, 'LastSettlementPrice' DOUBLE NOT NULL, 'SettlementPrice' DOUBLE NOT NULL, 'CloseVolume' INTEGER NOT NULL, 'CloseAmount' DOUBLE NOT NULL, 'TimeFirstVolume' INTEGER NOT NULL, 'SpecPosiType' VARCHAR(1) NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaInvstPosDtlFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaInvstPosDtlField';";
const std::string CThostFtdcSyncDeltaInvstPosDtlFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaInvstPosDtlField' VALUES (";

const std::string CThostFtdcSyncDeltaInvstPosCombDtlFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaInvstPosCombDtlField'('TradingDay' VARCHAR(18) NOT NULL, 'OpenDate' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ComTradeID' VARCHAR(42) NOT NULL, 'TradeID' VARCHAR(42) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'TotalAmt' INTEGER NOT NULL, 'Margin' DOUBLE NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'MarginRateByMoney' DOUBLE NOT NULL, 'MarginRateByVolume' DOUBLE NOT NULL, 'LegID' INTEGER NOT NULL, 'LegMultiple' INTEGER NOT NULL, 'TradeGroupID' INTEGER NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaInvstPosCombDtlFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaInvstPosCombDtlField';";
const std::string CThostFtdcSyncDeltaInvstPosCombDtlFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaInvstPosCombDtlField' VALUES (";

const std::string CThostFtdcSyncDeltaTradingAccountFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaTradingAccountField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'PreMortgage' DOUBLE NOT NULL, 'PreCredit' DOUBLE NOT NULL, 'PreDeposit' DOUBLE NOT NULL, 'PreBalance' DOUBLE NOT NULL, 'PreMargin' DOUBLE NOT NULL, 'InterestBase' DOUBLE NOT NULL, 'Interest' DOUBLE NOT NULL, 'Deposit' DOUBLE NOT NULL, 'Withdraw' DOUBLE NOT NULL, 'FrozenMargin' DOUBLE NOT NULL, 'FrozenCash' DOUBLE NOT NULL, 'FrozenCommission' DOUBLE NOT NULL, 'CurrMargin' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, 'Commission' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'PositionProfit' DOUBLE NOT NULL, 'Balance' DOUBLE NOT NULL, 'Available' DOUBLE NOT NULL, 'WithdrawQuota' DOUBLE NOT NULL, 'Reserve' DOUBLE NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'SettlementID' INTEGER NOT NULL, 'Credit' DOUBLE NOT NULL, 'Mortgage' DOUBLE NOT NULL, 'ExchangeMargin' DOUBLE NOT NULL, 'DeliveryMargin' DOUBLE NOT NULL, 'ExchangeDeliveryMargin' DOUBLE NOT NULL, 'ReserveBalance' DOUBLE NOT NULL, 'CurrencyID' VARCHAR(8) NOT NULL, 'PreFundMortgageIn' DOUBLE NOT NULL, 'PreFundMortgageOut' DOUBLE NOT NULL, 'FundMortgageIn' DOUBLE NOT NULL, 'FundMortgageOut' DOUBLE NOT NULL, 'FundMortgageAvailable' DOUBLE NOT NULL, 'MortgageableFund' DOUBLE NOT NULL, 'SpecProductMargin' DOUBLE NOT NULL, 'SpecProductFrozenMargin' DOUBLE NOT NULL, 'SpecProductCommission' DOUBLE NOT NULL, 'SpecProductFrozenCommission' DOUBLE NOT NULL, 'SpecProductPositionProfit' DOUBLE NOT NULL, 'SpecProductCloseProfit' DOUBLE NOT NULL, 'SpecProductPositionProfitByAlg' DOUBLE NOT NULL, 'SpecProductExchangeMargin' DOUBLE NOT NULL, 'FrozenSwap' DOUBLE NOT NULL, 'RemainSwap' DOUBLE NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcSyncDeltaTradingAccountFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaTradingAccountField';";
const std::string CThostFtdcSyncDeltaTradingAccountFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaTradingAccountField' VALUES (";

const std::string CThostFtdcSyncDeltaInitInvstMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaInitInvstMarginField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'LastRiskTotalInvstMargin' DOUBLE NOT NULL, 'LastRiskTotalExchMargin' DOUBLE NOT NULL, 'ThisSyncInvstMargin' DOUBLE NOT NULL, 'ThisSyncExchMargin' DOUBLE NOT NULL, 'RemainRiskInvstMargin' DOUBLE NOT NULL, 'RemainRiskExchMargin' DOUBLE NOT NULL, 'LastRiskSpecTotalInvstMargin' DOUBLE NOT NULL, 'LastRiskSpecTotalExchMargin' DOUBLE NOT NULL, 'ThisSyncSpecInvstMargin' DOUBLE NOT NULL, 'ThisSyncSpecExchMargin' DOUBLE NOT NULL, 'RemainRiskSpecInvstMargin' DOUBLE NOT NULL, 'RemainRiskSpecExchMargin' DOUBLE NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaInitInvstMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaInitInvstMarginField';";
const std::string CThostFtdcSyncDeltaInitInvstMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaInitInvstMarginField' VALUES (";

const std::string CThostFtdcSyncDeltaDceCombInstrumentFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaDceCombInstrumentField'('CombInstrumentID' VARCHAR(162) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'TradeGroupID' INTEGER NOT NULL, 'CombHedgeFlag' VARCHAR(1) NOT NULL, 'CombinationType' VARCHAR(1) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'ProductID' VARCHAR(162) NOT NULL, 'Xparameter' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaDceCombInstrumentFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaDceCombInstrumentField';";
const std::string CThostFtdcSyncDeltaDceCombInstrumentFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaDceCombInstrumentField' VALUES (";

const std::string CThostFtdcSyncDeltaInvstMarginRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaInvstMarginRateField'('InstrumentID' VARCHAR(162) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'LongMarginRatioByMoney' DOUBLE NOT NULL, 'LongMarginRatioByVolume' DOUBLE NOT NULL, 'ShortMarginRatioByMoney' DOUBLE NOT NULL, 'ShortMarginRatioByVolume' DOUBLE NOT NULL, 'IsRelative' INTEGER NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaInvstMarginRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaInvstMarginRateField';";
const std::string CThostFtdcSyncDeltaInvstMarginRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaInvstMarginRateField' VALUES (";

const std::string CThostFtdcSyncDeltaExchMarginRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaExchMarginRateField'('BrokerID' VARCHAR(22) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'LongMarginRatioByMoney' DOUBLE NOT NULL, 'LongMarginRatioByVolume' DOUBLE NOT NULL, 'ShortMarginRatioByMoney' DOUBLE NOT NULL, 'ShortMarginRatioByVolume' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcSyncDeltaExchMarginRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaExchMarginRateField';";
const std::string CThostFtdcSyncDeltaExchMarginRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaExchMarginRateField' VALUES (";

const std::string CThostFtdcSyncDeltaOptExchMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaOptExchMarginField'('BrokerID' VARCHAR(22) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'SShortMarginRatioByMoney' DOUBLE NOT NULL, 'SShortMarginRatioByVolume' DOUBLE NOT NULL, 'HShortMarginRatioByMoney' DOUBLE NOT NULL, 'HShortMarginRatioByVolume' DOUBLE NOT NULL, 'AShortMarginRatioByMoney' DOUBLE NOT NULL, 'AShortMarginRatioByVolume' DOUBLE NOT NULL, 'MShortMarginRatioByMoney' DOUBLE NOT NULL, 'MShortMarginRatioByVolume' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcSyncDeltaOptExchMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaOptExchMarginField';";
const std::string CThostFtdcSyncDeltaOptExchMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaOptExchMarginField' VALUES (";

const std::string CThostFtdcSyncDeltaOptInvstMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaOptInvstMarginField'('InstrumentID' VARCHAR(162) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'SShortMarginRatioByMoney' DOUBLE NOT NULL, 'SShortMarginRatioByVolume' DOUBLE NOT NULL, 'HShortMarginRatioByMoney' DOUBLE NOT NULL, 'HShortMarginRatioByVolume' DOUBLE NOT NULL, 'AShortMarginRatioByMoney' DOUBLE NOT NULL, 'AShortMarginRatioByVolume' DOUBLE NOT NULL, 'IsRelative' INTEGER NOT NULL, 'MShortMarginRatioByMoney' DOUBLE NOT NULL, 'MShortMarginRatioByVolume' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaOptInvstMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaOptInvstMarginField';";
const std::string CThostFtdcSyncDeltaOptInvstMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaOptInvstMarginField' VALUES (";

const std::string CThostFtdcSyncDeltaInvstMarginRateULFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaInvstMarginRateULField'('InstrumentID' VARCHAR(162) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'LongMarginRatioByMoney' DOUBLE NOT NULL, 'LongMarginRatioByVolume' DOUBLE NOT NULL, 'ShortMarginRatioByMoney' DOUBLE NOT NULL, 'ShortMarginRatioByVolume' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaInvstMarginRateULFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaInvstMarginRateULField';";
const std::string CThostFtdcSyncDeltaInvstMarginRateULFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaInvstMarginRateULField' VALUES (";

const std::string CThostFtdcSyncDeltaOptInvstCommRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaOptInvstCommRateField'('InstrumentID' VARCHAR(162) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OpenRatioByMoney' DOUBLE NOT NULL, 'OpenRatioByVolume' DOUBLE NOT NULL, 'CloseRatioByMoney' DOUBLE NOT NULL, 'CloseRatioByVolume' DOUBLE NOT NULL, 'CloseTodayRatioByMoney' DOUBLE NOT NULL, 'CloseTodayRatioByVolume' DOUBLE NOT NULL, 'StrikeRatioByMoney' DOUBLE NOT NULL, 'StrikeRatioByVolume' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaOptInvstCommRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaOptInvstCommRateField';";
const std::string CThostFtdcSyncDeltaOptInvstCommRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaOptInvstCommRateField' VALUES (";

const std::string CThostFtdcSyncDeltaInvstCommRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaInvstCommRateField'('InstrumentID' VARCHAR(162) NOT NULL, 'InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'OpenRatioByMoney' DOUBLE NOT NULL, 'OpenRatioByVolume' DOUBLE NOT NULL, 'CloseRatioByMoney' DOUBLE NOT NULL, 'CloseRatioByVolume' DOUBLE NOT NULL, 'CloseTodayRatioByMoney' DOUBLE NOT NULL, 'CloseTodayRatioByVolume' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaInvstCommRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaInvstCommRateField';";
const std::string CThostFtdcSyncDeltaInvstCommRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaInvstCommRateField' VALUES (";

const std::string CThostFtdcSyncDeltaProductExchRateFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaProductExchRateField'('ProductID' VARCHAR(162) NOT NULL, 'QuoteCurrencyID' VARCHAR(8) NOT NULL, 'ExchangeRate' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaProductExchRateFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaProductExchRateField';";
const std::string CThostFtdcSyncDeltaProductExchRateFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaProductExchRateField' VALUES (";

const std::string CThostFtdcSyncDeltaDepthMarketDataFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaDepthMarketDataField'('TradingDay' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'LastPrice' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'PreClosePrice' DOUBLE NOT NULL, 'PreOpenInterest' DOUBLE NOT NULL, 'OpenPrice' DOUBLE NOT NULL, 'HighestPrice' DOUBLE NOT NULL, 'LowestPrice' DOUBLE NOT NULL, 'Volume' INTEGER NOT NULL, 'Turnover' DOUBLE NOT NULL, 'OpenInterest' DOUBLE NOT NULL, 'ClosePrice' DOUBLE NOT NULL, 'SettlementPrice' DOUBLE NOT NULL, 'UpperLimitPrice' DOUBLE NOT NULL, 'LowerLimitPrice' DOUBLE NOT NULL, 'PreDelta' DOUBLE NOT NULL, 'CurrDelta' DOUBLE NOT NULL, 'UpdateTime' VARCHAR(18) NOT NULL, 'UpdateMillisec' INTEGER NOT NULL, 'BidPrice1' DOUBLE NOT NULL, 'BidVolume1' INTEGER NOT NULL, 'AskPrice1' DOUBLE NOT NULL, 'AskVolume1' INTEGER NOT NULL, 'BidPrice2' DOUBLE NOT NULL, 'BidVolume2' INTEGER NOT NULL, 'AskPrice2' DOUBLE NOT NULL, 'AskVolume2' INTEGER NOT NULL, 'BidPrice3' DOUBLE NOT NULL, 'BidVolume3' INTEGER NOT NULL, 'AskPrice3' DOUBLE NOT NULL, 'AskVolume3' INTEGER NOT NULL, 'BidPrice4' DOUBLE NOT NULL, 'BidVolume4' INTEGER NOT NULL, 'AskPrice4' DOUBLE NOT NULL, 'AskVolume4' INTEGER NOT NULL, 'BidPrice5' DOUBLE NOT NULL, 'BidVolume5' INTEGER NOT NULL, 'AskPrice5' DOUBLE NOT NULL, 'AskVolume5' INTEGER NOT NULL, 'AveragePrice' DOUBLE NOT NULL, 'ActionDay' VARCHAR(18) NOT NULL, 'BandingUpperPrice' DOUBLE NOT NULL, 'BandingLowerPrice' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaDepthMarketDataFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaDepthMarketDataField';";
const std::string CThostFtdcSyncDeltaDepthMarketDataFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaDepthMarketDataField' VALUES (";

const std::string CThostFtdcSyncDeltaIndexPriceFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaIndexPriceField'('BrokerID' VARCHAR(22) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ClosePrice' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcSyncDeltaIndexPriceFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaIndexPriceField';";
const std::string CThostFtdcSyncDeltaIndexPriceFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaIndexPriceField' VALUES (";

const std::string CThostFtdcSyncDeltaEWarrantOffsetFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaEWarrantOffsetField'('TradingDay' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'Volume' INTEGER NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaEWarrantOffsetFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaEWarrantOffsetField';";
const std::string CThostFtdcSyncDeltaEWarrantOffsetFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaEWarrantOffsetField' VALUES (";

const std::string CThostFtdcSPBMFutureParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSPBMFutureParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'Cvf' INTEGER NOT NULL, 'TimeRange' VARCHAR(1) NOT NULL, 'MarginRate' DOUBLE NOT NULL, 'LockRateX' DOUBLE NOT NULL, 'AddOnRate' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'AddOnLockRateX2' DOUBLE NOT NULL);";
const std::string CThostFtdcSPBMFutureParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSPBMFutureParameterField';";
const std::string CThostFtdcSPBMFutureParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSPBMFutureParameterField' VALUES (";

const std::string CThostFtdcSPBMOptionParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSPBMOptionParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'Cvf' INTEGER NOT NULL, 'DownPrice' DOUBLE NOT NULL, 'Delta' DOUBLE NOT NULL, 'SlimiDelta' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL);";
const std::string CThostFtdcSPBMOptionParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSPBMOptionParameterField';";
const std::string CThostFtdcSPBMOptionParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSPBMOptionParameterField' VALUES (";

const std::string CThostFtdcSPBMIntraParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSPBMIntraParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'IntraRateY' DOUBLE NOT NULL, 'AddOnIntraRateY2' DOUBLE NOT NULL);";
const std::string CThostFtdcSPBMIntraParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSPBMIntraParameterField';";
const std::string CThostFtdcSPBMIntraParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSPBMIntraParameterField' VALUES (";

const std::string CThostFtdcSPBMInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSPBMInterParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'SpreadId' INTEGER NOT NULL, 'InterRateZ' DOUBLE NOT NULL, 'Leg1ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg2ProdFamilyCode' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcSPBMInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSPBMInterParameterField';";
const std::string CThostFtdcSPBMInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSPBMInterParameterField' VALUES (";

const std::string CThostFtdcSyncSPBMParameterEndFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncSPBMParameterEndField'('TradingDay' VARCHAR(18) NOT NULL);";
const std::string CThostFtdcSyncSPBMParameterEndFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncSPBMParameterEndField';";
const std::string CThostFtdcSyncSPBMParameterEndFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncSPBMParameterEndField' VALUES (";

const std::string CThostFtdcQrySPBMFutureParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySPBMFutureParameterField'('ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQrySPBMFutureParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySPBMFutureParameterField';";
const std::string CThostFtdcQrySPBMFutureParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySPBMFutureParameterField' VALUES (";

const std::string CThostFtdcQrySPBMOptionParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySPBMOptionParameterField'('ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQrySPBMOptionParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySPBMOptionParameterField';";
const std::string CThostFtdcQrySPBMOptionParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySPBMOptionParameterField' VALUES (";

const std::string CThostFtdcQrySPBMIntraParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySPBMIntraParameterField'('ExchangeID' VARCHAR(18) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQrySPBMIntraParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySPBMIntraParameterField';";
const std::string CThostFtdcQrySPBMIntraParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySPBMIntraParameterField' VALUES (";

const std::string CThostFtdcQrySPBMInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySPBMInterParameterField'('ExchangeID' VARCHAR(18) NOT NULL, 'Leg1ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg2ProdFamilyCode' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQrySPBMInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySPBMInterParameterField';";
const std::string CThostFtdcQrySPBMInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySPBMInterParameterField' VALUES (";

const std::string CThostFtdcSPBMPortfDefinitionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSPBMPortfDefinitionField'('ExchangeID' VARCHAR(18) NOT NULL, 'PortfolioDefID' INTEGER NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'IsSPBM' INTEGER NOT NULL);";
const std::string CThostFtdcSPBMPortfDefinitionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSPBMPortfDefinitionField';";
const std::string CThostFtdcSPBMPortfDefinitionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSPBMPortfDefinitionField' VALUES (";

const std::string CThostFtdcSPBMInvestorPortfDefFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSPBMInvestorPortfDefField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'PortfolioDefID' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSPBMInvestorPortfDefFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSPBMInvestorPortfDefField';";
const std::string CThostFtdcSPBMInvestorPortfDefFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSPBMInvestorPortfDefField' VALUES (";

const std::string CThostFtdcInvestorPortfMarginRatioFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorPortfMarginRatioField'('InvestorRange' VARCHAR(1) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'MarginRatio' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorPortfMarginRatioFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorPortfMarginRatioField';";
const std::string CThostFtdcInvestorPortfMarginRatioFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorPortfMarginRatioField' VALUES (";

const std::string CThostFtdcQrySPBMPortfDefinitionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySPBMPortfDefinitionField'('ExchangeID' VARCHAR(18) NOT NULL, 'PortfolioDefID' INTEGER NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQrySPBMPortfDefinitionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySPBMPortfDefinitionField';";
const std::string CThostFtdcQrySPBMPortfDefinitionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySPBMPortfDefinitionField' VALUES (";

const std::string CThostFtdcQrySPBMInvestorPortfDefFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySPBMInvestorPortfDefField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQrySPBMInvestorPortfDefFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySPBMInvestorPortfDefField';";
const std::string CThostFtdcQrySPBMInvestorPortfDefFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySPBMInvestorPortfDefField' VALUES (";

const std::string CThostFtdcQryInvestorPortfMarginRatioFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorPortfMarginRatioField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorPortfMarginRatioFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorPortfMarginRatioField';";
const std::string CThostFtdcQryInvestorPortfMarginRatioFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorPortfMarginRatioField' VALUES (";

const std::string CThostFtdcInvestorProdSPBMDetailFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorProdSPBMDetailField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'IntraInstrMargin' DOUBLE NOT NULL, 'BCollectingMargin' DOUBLE NOT NULL, 'SCollectingMargin' DOUBLE NOT NULL, 'IntraProdMargin' DOUBLE NOT NULL, 'NetMargin' DOUBLE NOT NULL, 'InterProdMargin' DOUBLE NOT NULL, 'SingleMargin' DOUBLE NOT NULL, 'AddOnMargin' DOUBLE NOT NULL, 'DeliveryMargin' DOUBLE NOT NULL, 'CallOptionMinRisk' DOUBLE NOT NULL, 'PutOptionMinRisk' DOUBLE NOT NULL, 'OptionMinRisk' DOUBLE NOT NULL, 'OptionValueOffset' DOUBLE NOT NULL, 'OptionRoyalty' DOUBLE NOT NULL, 'RealOptionValueOffset' DOUBLE NOT NULL, 'Margin' DOUBLE NOT NULL, 'ExchMargin' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorProdSPBMDetailFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorProdSPBMDetailField';";
const std::string CThostFtdcInvestorProdSPBMDetailFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorProdSPBMDetailField' VALUES (";

const std::string CThostFtdcQryInvestorProdSPBMDetailFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorProdSPBMDetailField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorProdSPBMDetailFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorProdSPBMDetailField';";
const std::string CThostFtdcQryInvestorProdSPBMDetailFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorProdSPBMDetailField' VALUES (";

const std::string CThostFtdcPortfTradeParamSettingFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcPortfTradeParamSettingField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'Portfolio' VARCHAR(1) NOT NULL, 'IsActionVerify' INTEGER NOT NULL, 'IsCloseVerify' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcPortfTradeParamSettingFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcPortfTradeParamSettingField';";
const std::string CThostFtdcPortfTradeParamSettingFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcPortfTradeParamSettingField' VALUES (";

const std::string CThostFtdcInvestorTradingRightFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorTradingRightField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'InvstTradingRight' VARCHAR(1) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorTradingRightFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorTradingRightField';";
const std::string CThostFtdcInvestorTradingRightFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorTradingRightField' VALUES (";

const std::string CThostFtdcMortgageParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcMortgageParamField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'MortgageBalance' DOUBLE NOT NULL, 'CheckMortgageRatio' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcMortgageParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcMortgageParamField';";
const std::string CThostFtdcMortgageParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcMortgageParamField' VALUES (";

const std::string CThostFtdcWithDrawParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcWithDrawParamField'('BrokerID' VARCHAR(22) NOT NULL, 'AccountID' VARCHAR(26) NOT NULL, 'WithDrawParamID' VARCHAR(1) NOT NULL, 'WithDrawParamValue' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\",\"AccountID\"));";
const std::string CThostFtdcWithDrawParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcWithDrawParamField';";
const std::string CThostFtdcWithDrawParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcWithDrawParamField' VALUES (";

const std::string CThostFtdcThostUserFunctionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcThostUserFunctionField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, 'ThostFunctionCode' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcThostUserFunctionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcThostUserFunctionField';";
const std::string CThostFtdcThostUserFunctionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcThostUserFunctionField' VALUES (";

const std::string CThostFtdcQryThostUserFunctionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryThostUserFunctionField'('BrokerID' VARCHAR(22) NOT NULL, 'UserID' VARCHAR(32) NOT NULL, PRIMARY KEY(\"BrokerID\",\"UserID\"));";
const std::string CThostFtdcQryThostUserFunctionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryThostUserFunctionField';";
const std::string CThostFtdcQryThostUserFunctionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryThostUserFunctionField' VALUES (";

const std::string CThostFtdcSPBMAddOnInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSPBMAddOnInterParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'SpreadId' INTEGER NOT NULL, 'AddOnInterRateZ2' DOUBLE NOT NULL, 'Leg1ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg2ProdFamilyCode' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcSPBMAddOnInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSPBMAddOnInterParameterField';";
const std::string CThostFtdcSPBMAddOnInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSPBMAddOnInterParameterField' VALUES (";

const std::string CThostFtdcQrySPBMAddOnInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySPBMAddOnInterParameterField'('ExchangeID' VARCHAR(18) NOT NULL, 'Leg1ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg2ProdFamilyCode' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQrySPBMAddOnInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySPBMAddOnInterParameterField';";
const std::string CThostFtdcQrySPBMAddOnInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySPBMAddOnInterParameterField' VALUES (";

const std::string CThostFtdcQryInvestorCommoditySPMMMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorCommoditySPMMMarginField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'CommodityID' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorCommoditySPMMMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorCommoditySPMMMarginField';";
const std::string CThostFtdcQryInvestorCommoditySPMMMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorCommoditySPMMMarginField' VALUES (";

const std::string CThostFtdcQryInvestorCommodityGroupSPMMMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorCommodityGroupSPMMMarginField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'CommodityGroupID' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorCommodityGroupSPMMMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorCommodityGroupSPMMMarginField';";
const std::string CThostFtdcQryInvestorCommodityGroupSPMMMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorCommodityGroupSPMMMarginField' VALUES (";

const std::string CThostFtdcQrySPMMInstParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySPMMInstParamField'('InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQrySPMMInstParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySPMMInstParamField';";
const std::string CThostFtdcQrySPMMInstParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySPMMInstParamField' VALUES (";

const std::string CThostFtdcQrySPMMProductParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQrySPMMProductParamField'('ProductID' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcQrySPMMProductParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQrySPMMProductParamField';";
const std::string CThostFtdcQrySPMMProductParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQrySPMMProductParamField' VALUES (";

const std::string CThostFtdcInvestorCommoditySPMMMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorCommoditySPMMMarginField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'CommodityID' VARCHAR(82) NOT NULL, 'MarginBeforeDiscount' DOUBLE NOT NULL, 'MarginNoDiscount' DOUBLE NOT NULL, 'LongPosRisk' DOUBLE NOT NULL, 'LongOpenFrozenRisk' DOUBLE NOT NULL, 'LongCloseFrozenRisk' DOUBLE NOT NULL, 'ShortPosRisk' DOUBLE NOT NULL, 'ShortOpenFrozenRisk' DOUBLE NOT NULL, 'ShortCloseFrozenRisk' DOUBLE NOT NULL, 'IntraCommodityRate' DOUBLE NOT NULL, 'OptionDiscountRate' DOUBLE NOT NULL, 'PosDiscount' DOUBLE NOT NULL, 'OpenFrozenDiscount' DOUBLE NOT NULL, 'NetRisk' DOUBLE NOT NULL, 'CloseFrozenMargin' DOUBLE NOT NULL, 'FrozenCommission' DOUBLE NOT NULL, 'Commission' DOUBLE NOT NULL, 'FrozenCash' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, 'StrikeFrozenMargin' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorCommoditySPMMMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorCommoditySPMMMarginField';";
const std::string CThostFtdcInvestorCommoditySPMMMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorCommoditySPMMMarginField' VALUES (";

const std::string CThostFtdcInvestorCommodityGroupSPMMMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorCommodityGroupSPMMMarginField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'CommodityGroupID' VARCHAR(82) NOT NULL, 'MarginBeforeDiscount' DOUBLE NOT NULL, 'MarginNoDiscount' DOUBLE NOT NULL, 'LongRisk' DOUBLE NOT NULL, 'ShortRisk' DOUBLE NOT NULL, 'CloseFrozenMargin' DOUBLE NOT NULL, 'InterCommodityRate' DOUBLE NOT NULL, 'MiniMarginRatio' DOUBLE NOT NULL, 'AdjustRatio' DOUBLE NOT NULL, 'IntraCommodityDiscount' DOUBLE NOT NULL, 'InterCommodityDiscount' DOUBLE NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'InvestorMargin' DOUBLE NOT NULL, 'FrozenCommission' DOUBLE NOT NULL, 'Commission' DOUBLE NOT NULL, 'FrozenCash' DOUBLE NOT NULL, 'CashIn' DOUBLE NOT NULL, 'StrikeFrozenMargin' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorCommodityGroupSPMMMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorCommodityGroupSPMMMarginField';";
const std::string CThostFtdcInvestorCommodityGroupSPMMMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorCommodityGroupSPMMMarginField' VALUES (";

const std::string CThostFtdcSPMMInstParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSPMMInstParamField'('ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'InstMarginCalID' VARCHAR(1) NOT NULL, 'CommodityID' VARCHAR(82) NOT NULL, 'CommodityGroupID' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcSPMMInstParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSPMMInstParamField';";
const std::string CThostFtdcSPMMInstParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSPMMInstParamField' VALUES (";

const std::string CThostFtdcSPMMProductParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSPMMProductParamField'('ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(82) NOT NULL, 'CommodityID' VARCHAR(82) NOT NULL, 'CommodityGroupID' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcSPMMProductParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSPMMProductParamField';";
const std::string CThostFtdcSPMMProductParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSPMMProductParamField' VALUES (";

const std::string CThostFtdcQryTraderAssignFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryTraderAssignField'('TraderID' VARCHAR(42) NOT NULL);";
const std::string CThostFtdcQryTraderAssignFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryTraderAssignField';";
const std::string CThostFtdcQryTraderAssignFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryTraderAssignField' VALUES (";

const std::string CThostFtdcTraderAssignFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcTraderAssignField'('BrokerID' VARCHAR(22) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'TraderID' VARCHAR(42) NOT NULL, 'ParticipantID' VARCHAR(22) NOT NULL, 'DRIdentityID' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\"));";
const std::string CThostFtdcTraderAssignFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcTraderAssignField';";
const std::string CThostFtdcTraderAssignFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcTraderAssignField' VALUES (";

const std::string CThostFtdcInvestorInfoCntSettingFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorInfoCntSettingField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ProductID' VARCHAR(82) NOT NULL, 'IsCalInfoComm' INTEGER NOT NULL, 'IsLimitInfoMax' INTEGER NOT NULL, 'InfoMaxLimit' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorInfoCntSettingFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorInfoCntSettingField';";
const std::string CThostFtdcInvestorInfoCntSettingFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorInfoCntSettingField' VALUES (";

const std::string CThostFtdcRCAMSCombProductInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRCAMSCombProductInfoField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(82) NOT NULL, 'CombProductID' VARCHAR(82) NOT NULL, 'ProductGroupID' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcRCAMSCombProductInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRCAMSCombProductInfoField';";
const std::string CThostFtdcRCAMSCombProductInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRCAMSCombProductInfoField' VALUES (";

const std::string CThostFtdcRCAMSInstrParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRCAMSInstrParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(82) NOT NULL, 'HedgeRate' DOUBLE NOT NULL);";
const std::string CThostFtdcRCAMSInstrParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRCAMSInstrParameterField';";
const std::string CThostFtdcRCAMSInstrParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRCAMSInstrParameterField' VALUES (";

const std::string CThostFtdcRCAMSIntraParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRCAMSIntraParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'CombProductID' VARCHAR(82) NOT NULL, 'HedgeRate' DOUBLE NOT NULL);";
const std::string CThostFtdcRCAMSIntraParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRCAMSIntraParameterField';";
const std::string CThostFtdcRCAMSIntraParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRCAMSIntraParameterField' VALUES (";

const std::string CThostFtdcRCAMSInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRCAMSInterParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductGroupID' VARCHAR(82) NOT NULL, 'Priority' INTEGER NOT NULL, 'CreditRate' DOUBLE NOT NULL, 'CombProduct1' VARCHAR(82) NOT NULL, 'CombProduct2' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcRCAMSInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRCAMSInterParameterField';";
const std::string CThostFtdcRCAMSInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRCAMSInterParameterField' VALUES (";

const std::string CThostFtdcRCAMSShortOptAdjustParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRCAMSShortOptAdjustParamField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'CombProductID' VARCHAR(82) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'AdjustValue' DOUBLE NOT NULL);";
const std::string CThostFtdcRCAMSShortOptAdjustParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRCAMSShortOptAdjustParamField';";
const std::string CThostFtdcRCAMSShortOptAdjustParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRCAMSShortOptAdjustParamField' VALUES (";

const std::string CThostFtdcRCAMSInvestorCombPositionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRCAMSInvestorCombPositionField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'PosiDirection' VARCHAR(1) NOT NULL, 'CombInstrumentID' VARCHAR(162) NOT NULL, 'LegID' INTEGER NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'TotalAmt' INTEGER NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'Margin' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcRCAMSInvestorCombPositionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRCAMSInvestorCombPositionField';";
const std::string CThostFtdcRCAMSInvestorCombPositionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRCAMSInvestorCombPositionField' VALUES (";

const std::string CThostFtdcInvestorProdRCAMSMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorProdRCAMSMarginField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'CombProductID' VARCHAR(82) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'ProductGroupID' VARCHAR(82) NOT NULL, 'RiskBeforeDiscount' DOUBLE NOT NULL, 'IntraInstrRisk' DOUBLE NOT NULL, 'BPosRisk' DOUBLE NOT NULL, 'SPosRisk' DOUBLE NOT NULL, 'IntraProdRisk' DOUBLE NOT NULL, 'NetRisk' DOUBLE NOT NULL, 'InterProdRisk' DOUBLE NOT NULL, 'ShortOptRiskAdj' DOUBLE NOT NULL, 'OptionRoyalty' DOUBLE NOT NULL, 'MMSACloseFrozenMargin' DOUBLE NOT NULL, 'CloseCombFrozenMargin' DOUBLE NOT NULL, 'CloseFrozenMargin' DOUBLE NOT NULL, 'MMSAOpenFrozenMargin' DOUBLE NOT NULL, 'DeliveryOpenFrozenMargin' DOUBLE NOT NULL, 'OpenFrozenMargin' DOUBLE NOT NULL, 'UseFrozenMargin' DOUBLE NOT NULL, 'MMSAExchMargin' DOUBLE NOT NULL, 'DeliveryExchMargin' DOUBLE NOT NULL, 'CombExchMargin' DOUBLE NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'UseMargin' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorProdRCAMSMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorProdRCAMSMarginField';";
const std::string CThostFtdcInvestorProdRCAMSMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorProdRCAMSMarginField' VALUES (";

const std::string CThostFtdcQryRCAMSCombProductInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRCAMSCombProductInfoField'('ProductID' VARCHAR(82) NOT NULL, 'CombProductID' VARCHAR(82) NOT NULL, 'ProductGroupID' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcQryRCAMSCombProductInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRCAMSCombProductInfoField';";
const std::string CThostFtdcQryRCAMSCombProductInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRCAMSCombProductInfoField' VALUES (";

const std::string CThostFtdcQryRCAMSInstrParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRCAMSInstrParameterField'('ProductID' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcQryRCAMSInstrParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRCAMSInstrParameterField';";
const std::string CThostFtdcQryRCAMSInstrParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRCAMSInstrParameterField' VALUES (";

const std::string CThostFtdcQryRCAMSIntraParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRCAMSIntraParameterField'('CombProductID' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcQryRCAMSIntraParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRCAMSIntraParameterField';";
const std::string CThostFtdcQryRCAMSIntraParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRCAMSIntraParameterField' VALUES (";

const std::string CThostFtdcQryRCAMSInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRCAMSInterParameterField'('ProductGroupID' VARCHAR(82) NOT NULL, 'CombProduct1' VARCHAR(82) NOT NULL, 'CombProduct2' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcQryRCAMSInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRCAMSInterParameterField';";
const std::string CThostFtdcQryRCAMSInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRCAMSInterParameterField' VALUES (";

const std::string CThostFtdcQryRCAMSShortOptAdjustParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRCAMSShortOptAdjustParamField'('CombProductID' VARCHAR(82) NOT NULL);";
const std::string CThostFtdcQryRCAMSShortOptAdjustParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRCAMSShortOptAdjustParamField';";
const std::string CThostFtdcQryRCAMSShortOptAdjustParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRCAMSShortOptAdjustParamField' VALUES (";

const std::string CThostFtdcQryRCAMSInvestorCombPositionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRCAMSInvestorCombPositionField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'CombInstrumentID' VARCHAR(162) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryRCAMSInvestorCombPositionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRCAMSInvestorCombPositionField';";
const std::string CThostFtdcQryRCAMSInvestorCombPositionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRCAMSInvestorCombPositionField' VALUES (";

const std::string CThostFtdcQryInvestorProdRCAMSMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorProdRCAMSMarginField'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'CombProductID' VARCHAR(82) NOT NULL, 'ProductGroupID' VARCHAR(82) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorProdRCAMSMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorProdRCAMSMarginField';";
const std::string CThostFtdcQryInvestorProdRCAMSMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorProdRCAMSMarginField' VALUES (";

const std::string CThostFtdcRULEInstrParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRULEInstrParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'InstrumentClass' VARCHAR(1) NOT NULL, 'StdInstrumentID' VARCHAR(162) NOT NULL, 'BSpecRatio' DOUBLE NOT NULL, 'SSpecRatio' DOUBLE NOT NULL, 'BHedgeRatio' DOUBLE NOT NULL, 'SHedgeRatio' DOUBLE NOT NULL, 'BAddOnMargin' DOUBLE NOT NULL, 'SAddOnMargin' DOUBLE NOT NULL, 'CommodityGroupID' INTEGER NOT NULL);";
const std::string CThostFtdcRULEInstrParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRULEInstrParameterField';";
const std::string CThostFtdcRULEInstrParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRULEInstrParameterField' VALUES (";

const std::string CThostFtdcRULEIntraParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRULEIntraParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'StdInstrumentID' VARCHAR(162) NOT NULL, 'StdInstrMargin' DOUBLE NOT NULL, 'UsualIntraRate' DOUBLE NOT NULL, 'DeliveryIntraRate' DOUBLE NOT NULL);";
const std::string CThostFtdcRULEIntraParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRULEIntraParameterField';";
const std::string CThostFtdcRULEIntraParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRULEIntraParameterField' VALUES (";

const std::string CThostFtdcRULEInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcRULEInterParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'SpreadId' INTEGER NOT NULL, 'InterRate' DOUBLE NOT NULL, 'Leg1ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg2ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg1PropFactor' INTEGER NOT NULL, 'Leg2PropFactor' INTEGER NOT NULL, 'CommodityGroupID' INTEGER NOT NULL, 'CommodityGroupName' VARCHAR(42) NOT NULL);";
const std::string CThostFtdcRULEInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcRULEInterParameterField';";
const std::string CThostFtdcRULEInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcRULEInterParameterField' VALUES (";

const std::string CThostFtdcQryRULEInstrParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRULEInstrParameterField'('ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryRULEInstrParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRULEInstrParameterField';";
const std::string CThostFtdcQryRULEInstrParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRULEInstrParameterField' VALUES (";

const std::string CThostFtdcQryRULEIntraParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRULEIntraParameterField'('ExchangeID' VARCHAR(18) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL);";
const std::string CThostFtdcQryRULEIntraParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRULEIntraParameterField';";
const std::string CThostFtdcQryRULEIntraParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRULEIntraParameterField' VALUES (";

const std::string CThostFtdcQryRULEInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryRULEInterParameterField'('ExchangeID' VARCHAR(18) NOT NULL, 'Leg1ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg2ProdFamilyCode' VARCHAR(162) NOT NULL, 'CommodityGroupID' INTEGER NOT NULL);";
const std::string CThostFtdcQryRULEInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryRULEInterParameterField';";
const std::string CThostFtdcQryRULEInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryRULEInterParameterField' VALUES (";

const std::string CThostFtdcInvestorProdRULEMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcInvestorProdRULEMarginField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'InstrumentClass' VARCHAR(1) NOT NULL, 'CommodityGroupID' INTEGER NOT NULL, 'BStdPosition' DOUBLE NOT NULL, 'SStdPosition' DOUBLE NOT NULL, 'BStdOpenFrozen' DOUBLE NOT NULL, 'SStdOpenFrozen' DOUBLE NOT NULL, 'BStdCloseFrozen' DOUBLE NOT NULL, 'SStdCloseFrozen' DOUBLE NOT NULL, 'IntraProdStdPosition' DOUBLE NOT NULL, 'NetStdPosition' DOUBLE NOT NULL, 'InterProdStdPosition' DOUBLE NOT NULL, 'SingleStdPosition' DOUBLE NOT NULL, 'IntraProdMargin' DOUBLE NOT NULL, 'InterProdMargin' DOUBLE NOT NULL, 'SingleMargin' DOUBLE NOT NULL, 'NonCombMargin' DOUBLE NOT NULL, 'AddOnMargin' DOUBLE NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'AddOnFrozenMargin' DOUBLE NOT NULL, 'OpenFrozenMargin' DOUBLE NOT NULL, 'CloseFrozenMargin' DOUBLE NOT NULL, 'Margin' DOUBLE NOT NULL, 'FrozenMargin' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcInvestorProdRULEMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcInvestorProdRULEMarginField';";
const std::string CThostFtdcInvestorProdRULEMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcInvestorProdRULEMarginField' VALUES (";

const std::string CThostFtdcQryInvestorProdRULEMarginFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcQryInvestorProdRULEMarginField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'CommodityGroupID' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcQryInvestorProdRULEMarginFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcQryInvestorProdRULEMarginField';";
const std::string CThostFtdcQryInvestorProdRULEMarginFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcQryInvestorProdRULEMarginField' VALUES (";

const std::string CThostFtdcSyncDeltaSPBMPortfDefinitionFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPBMPortfDefinitionField'('ExchangeID' VARCHAR(18) NOT NULL, 'PortfolioDefID' INTEGER NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'IsSPBM' INTEGER NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaSPBMPortfDefinitionFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPBMPortfDefinitionField';";
const std::string CThostFtdcSyncDeltaSPBMPortfDefinitionFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPBMPortfDefinitionField' VALUES (";

const std::string CThostFtdcSyncDeltaSPBMInvstPortfDefFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPBMInvstPortfDefField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'PortfolioDefID' INTEGER NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaSPBMInvstPortfDefFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPBMInvstPortfDefField';";
const std::string CThostFtdcSyncDeltaSPBMInvstPortfDefFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPBMInvstPortfDefField' VALUES (";

const std::string CThostFtdcSyncDeltaSPBMFutureParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPBMFutureParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'Cvf' INTEGER NOT NULL, 'TimeRange' VARCHAR(1) NOT NULL, 'MarginRate' DOUBLE NOT NULL, 'LockRateX' DOUBLE NOT NULL, 'AddOnRate' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'AddOnLockRateX2' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaSPBMFutureParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPBMFutureParameterField';";
const std::string CThostFtdcSyncDeltaSPBMFutureParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPBMFutureParameterField' VALUES (";

const std::string CThostFtdcSyncDeltaSPBMOptionParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPBMOptionParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'Cvf' INTEGER NOT NULL, 'DownPrice' DOUBLE NOT NULL, 'Delta' DOUBLE NOT NULL, 'SlimiDelta' DOUBLE NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaSPBMOptionParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPBMOptionParameterField';";
const std::string CThostFtdcSyncDeltaSPBMOptionParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPBMOptionParameterField' VALUES (";

const std::string CThostFtdcSyncDeltaSPBMIntraParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPBMIntraParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'IntraRateY' DOUBLE NOT NULL, 'AddOnIntraRateY2' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaSPBMIntraParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPBMIntraParameterField';";
const std::string CThostFtdcSyncDeltaSPBMIntraParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPBMIntraParameterField' VALUES (";

const std::string CThostFtdcSyncDeltaSPBMInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPBMInterParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'SpreadId' INTEGER NOT NULL, 'InterRateZ' DOUBLE NOT NULL, 'Leg1ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg2ProdFamilyCode' VARCHAR(162) NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaSPBMInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPBMInterParameterField';";
const std::string CThostFtdcSyncDeltaSPBMInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPBMInterParameterField' VALUES (";

const std::string CThostFtdcSyncDeltaSPBMAddOnInterParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPBMAddOnInterParamField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'SpreadId' INTEGER NOT NULL, 'AddOnInterRateZ2' DOUBLE NOT NULL, 'Leg1ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg2ProdFamilyCode' VARCHAR(162) NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaSPBMAddOnInterParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPBMAddOnInterParamField';";
const std::string CThostFtdcSyncDeltaSPBMAddOnInterParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPBMAddOnInterParamField' VALUES (";

const std::string CThostFtdcSyncDeltaSPMMInstParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPMMInstParamField'('ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'InstMarginCalID' VARCHAR(1) NOT NULL, 'CommodityID' VARCHAR(82) NOT NULL, 'CommodityGroupID' VARCHAR(82) NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaSPMMInstParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPMMInstParamField';";
const std::string CThostFtdcSyncDeltaSPMMInstParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPMMInstParamField' VALUES (";

const std::string CThostFtdcSyncDeltaSPMMProductParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPMMProductParamField'('ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(82) NOT NULL, 'CommodityID' VARCHAR(82) NOT NULL, 'CommodityGroupID' VARCHAR(82) NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaSPMMProductParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPMMProductParamField';";
const std::string CThostFtdcSyncDeltaSPMMProductParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPMMProductParamField' VALUES (";

const std::string CThostFtdcSyncDeltaInvestorSPMMModelFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaInvestorSPMMModelField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'SPMMModelID' VARCHAR(66) NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaInvestorSPMMModelFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaInvestorSPMMModelField';";
const std::string CThostFtdcSyncDeltaInvestorSPMMModelFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaInvestorSPMMModelField' VALUES (";

const std::string CThostFtdcSyncDeltaSPMMModelParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaSPMMModelParamField'('ExchangeID' VARCHAR(18) NOT NULL, 'SPMMModelID' VARCHAR(66) NOT NULL, 'CommodityGroupID' VARCHAR(82) NOT NULL, 'IntraCommodityRate' DOUBLE NOT NULL, 'InterCommodityRate' DOUBLE NOT NULL, 'OptionDiscountRate' DOUBLE NOT NULL, 'MiniMarginRatio' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaSPMMModelParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaSPMMModelParamField';";
const std::string CThostFtdcSyncDeltaSPMMModelParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaSPMMModelParamField' VALUES (";

const std::string CThostFtdcSyncDeltaRCAMSCombProdInfoFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRCAMSCombProdInfoField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(82) NOT NULL, 'CombProductID' VARCHAR(82) NOT NULL, 'ProductGroupID' VARCHAR(82) NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaRCAMSCombProdInfoFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRCAMSCombProdInfoField';";
const std::string CThostFtdcSyncDeltaRCAMSCombProdInfoFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRCAMSCombProdInfoField' VALUES (";

const std::string CThostFtdcSyncDeltaRCAMSInstrParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRCAMSInstrParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductID' VARCHAR(82) NOT NULL, 'HedgeRate' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaRCAMSInstrParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRCAMSInstrParameterField';";
const std::string CThostFtdcSyncDeltaRCAMSInstrParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRCAMSInstrParameterField' VALUES (";

const std::string CThostFtdcSyncDeltaRCAMSIntraParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRCAMSIntraParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'CombProductID' VARCHAR(82) NOT NULL, 'HedgeRate' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaRCAMSIntraParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRCAMSIntraParameterField';";
const std::string CThostFtdcSyncDeltaRCAMSIntraParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRCAMSIntraParameterField' VALUES (";

const std::string CThostFtdcSyncDeltaRCAMSInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRCAMSInterParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProductGroupID' VARCHAR(82) NOT NULL, 'Priority' INTEGER NOT NULL, 'CreditRate' DOUBLE NOT NULL, 'CombProduct1' VARCHAR(82) NOT NULL, 'CombProduct2' VARCHAR(82) NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaRCAMSInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRCAMSInterParameterField';";
const std::string CThostFtdcSyncDeltaRCAMSInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRCAMSInterParameterField' VALUES (";

const std::string CThostFtdcSyncDeltaRCAMSSOptAdjParamFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRCAMSSOptAdjParamField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'CombProductID' VARCHAR(82) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'AdjustValue' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaRCAMSSOptAdjParamFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRCAMSSOptAdjParamField';";
const std::string CThostFtdcSyncDeltaRCAMSSOptAdjParamFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRCAMSSOptAdjParamField' VALUES (";

const std::string CThostFtdcSyncDeltaRCAMSCombRuleDtlFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRCAMSCombRuleDtlField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProdGroup' VARCHAR(82) NOT NULL, 'RuleId' VARCHAR(102) NOT NULL, 'Priority' INTEGER NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'CombMargin' DOUBLE NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'LegID' INTEGER NOT NULL, 'LegInstrumentID' VARCHAR(162) NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'LegMultiple' INTEGER NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaRCAMSCombRuleDtlFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRCAMSCombRuleDtlField';";
const std::string CThostFtdcSyncDeltaRCAMSCombRuleDtlFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRCAMSCombRuleDtlField' VALUES (";

const std::string CThostFtdcSyncDeltaRCAMSInvstCombPosFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRCAMSInvstCombPosField'('ExchangeID' VARCHAR(18) NOT NULL, 'BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'HedgeFlag' VARCHAR(1) NOT NULL, 'PosiDirection' VARCHAR(1) NOT NULL, 'CombInstrumentID' VARCHAR(162) NOT NULL, 'LegID' INTEGER NOT NULL, 'ExchangeInstID' VARCHAR(162) NOT NULL, 'TotalAmt' INTEGER NOT NULL, 'ExchMargin' DOUBLE NOT NULL, 'Margin' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\"));";
const std::string CThostFtdcSyncDeltaRCAMSInvstCombPosFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRCAMSInvstCombPosField';";
const std::string CThostFtdcSyncDeltaRCAMSInvstCombPosFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRCAMSInvstCombPosField' VALUES (";

const std::string CThostFtdcSyncDeltaRULEInstrParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRULEInstrParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'InstrumentClass' VARCHAR(1) NOT NULL, 'StdInstrumentID' VARCHAR(162) NOT NULL, 'BSpecRatio' DOUBLE NOT NULL, 'SSpecRatio' DOUBLE NOT NULL, 'BHedgeRatio' DOUBLE NOT NULL, 'SHedgeRatio' DOUBLE NOT NULL, 'BAddOnMargin' DOUBLE NOT NULL, 'SAddOnMargin' DOUBLE NOT NULL, 'CommodityGroupID' INTEGER NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaRULEInstrParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRULEInstrParameterField';";
const std::string CThostFtdcSyncDeltaRULEInstrParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRULEInstrParameterField' VALUES (";

const std::string CThostFtdcSyncDeltaRULEIntraParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRULEIntraParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'ProdFamilyCode' VARCHAR(162) NOT NULL, 'StdInstrumentID' VARCHAR(162) NOT NULL, 'StdInstrMargin' DOUBLE NOT NULL, 'UsualIntraRate' DOUBLE NOT NULL, 'DeliveryIntraRate' DOUBLE NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaRULEIntraParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRULEIntraParameterField';";
const std::string CThostFtdcSyncDeltaRULEIntraParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRULEIntraParameterField' VALUES (";

const std::string CThostFtdcSyncDeltaRULEInterParameterFieldWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CThostFtdcSyncDeltaRULEInterParameterField'('TradingDay' VARCHAR(18) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'SpreadId' INTEGER NOT NULL, 'InterRate' DOUBLE NOT NULL, 'Leg1ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg2ProdFamilyCode' VARCHAR(162) NOT NULL, 'Leg1PropFactor' INTEGER NOT NULL, 'Leg2PropFactor' INTEGER NOT NULL, 'CommodityGroupID' INTEGER NOT NULL, 'CommodityGroupName' VARCHAR(42) NOT NULL, 'ActionDirection' VARCHAR(1) NOT NULL, 'SyncDeltaSequenceNo' INTEGER NOT NULL);";
const std::string CThostFtdcSyncDeltaRULEInterParameterFieldWrapper::SELECT_SQL = "SELECT * FROM 'CThostFtdcSyncDeltaRULEInterParameterField';";
const std::string CThostFtdcSyncDeltaRULEInterParameterFieldWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CThostFtdcSyncDeltaRULEInterParameterField' VALUES (";

const std::string CloseDetailWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'CloseDetail'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'ExchangeID' VARCHAR(18) NOT NULL, 'InstrumentID' VARCHAR(162) NOT NULL, 'OpenDate' VARCHAR(18) NOT NULL, 'OpenPrice' DOUBLE NOT NULL, 'OpenTradeID' VARCHAR(42) NOT NULL, 'CloseDate' VARCHAR(18) NOT NULL, 'CloseTime' VARCHAR(18) NOT NULL, 'ClosePrice' DOUBLE NOT NULL, 'CloseTradeID' VARCHAR(42) NOT NULL, 'CloseVolume' INTEGER NOT NULL, 'Direction' VARCHAR(1) NOT NULL, 'PreSettlementPrice' DOUBLE NOT NULL, 'CloseProfit' DOUBLE NOT NULL, 'CloseFlag' VARCHAR(1) NOT NULL, 'CashIn' DOUBLE NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\",\"ExchangeID\",\"OpenDate\",\"OpenTradeID\",\"CloseDate\",\"CloseTradeID\"));";
const std::string CloseDetailWrapper::SELECT_SQL = "SELECT * FROM 'CloseDetail';";
const std::string CloseDetailWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'CloseDetail' VALUES (";

const std::string SettlementDataWrapper::CREATE_TABLE_SQL = "CREATE TABLE 'SettlementData'('BrokerID' VARCHAR(22) NOT NULL, 'InvestorID' VARCHAR(26) NOT NULL, 'SettlementContent' TEXT NOT NULL, 'TradingDay' VARCHAR(18) NOT NULL, 'ConfirmDay' VARCHAR(18) NOT NULL, 'ConfirmTime' VARCHAR(18) NOT NULL, PRIMARY KEY(\"BrokerID\",\"InvestorID\",\"TradingDay\"));";
const std::string SettlementDataWrapper::SELECT_SQL = "SELECT * FROM 'SettlementData';";
const std::string SettlementDataWrapper::INSERT_SQL_PREFIX = "REPLACE INTO 'SettlementData' VALUES (";

